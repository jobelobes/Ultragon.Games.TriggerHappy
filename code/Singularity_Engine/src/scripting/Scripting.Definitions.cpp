/*
** Lua binding: Singularity_scripting
** Generated automatically by tolua++-1.0.92 on 11/01/10 23:34:29.
*/

#include "scripting\Scripting.Definitions.h"


/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_Singularity__Audio__AdaptiveEnvironment (lua_State* tolua_S)
{
 Singularity::Audio::AdaptiveEnvironment* self = (Singularity::Audio::AdaptiveEnvironment*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Graphics__Texture2D (lua_State* tolua_S)
{
 Singularity::Graphics::Texture2D* self = (Singularity::Graphics::Texture2D*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_XACTINDEX (lua_State* tolua_S)
{
 XACTINDEX* self = (XACTINDEX*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Networking__Network (lua_State* tolua_S)
{
 Singularity::Networking::Network* self = (Singularity::Networking::Network*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CAMERA_DESC (lua_State* tolua_S)
{
 CAMERA_DESC* self = (CAMERA_DESC*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Physics__SphereCollider (lua_State* tolua_S)
{
 Singularity::Physics::SphereCollider* self = (Singularity::Physics::SphereCollider*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Audio__WaveBank (lua_State* tolua_S)
{
 Singularity::Audio::WaveBank* self = (Singularity::Audio::WaveBank*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Gui__Checkbox (lua_State* tolua_S)
{
 Singularity::Gui::Checkbox* self = (Singularity::Gui::Checkbox*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Networking__NetworkSession (lua_State* tolua_S)
{
 Singularity::Networking::NetworkSession* self = (Singularity::Networking::NetworkSession*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_DynamicList_Singularity__Audio__Cue__ (lua_State* tolua_S)
{
 DynamicList<Singularity::Audio::Cue*>* self = (DynamicList<Singularity::Audio::Cue*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Networking__NetworkGame (lua_State* tolua_S)
{
 Singularity::Networking::NetworkGame* self = (Singularity::Networking::NetworkGame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Gui__ListBox (lua_State* tolua_S)
{
 Singularity::Gui::ListBox* self = (Singularity::Gui::ListBox*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Physics__BoxCollider (lua_State* tolua_S)
{
 Singularity::Physics::BoxCollider* self = (Singularity::Physics::BoxCollider*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Graphics__Axis (lua_State* tolua_S)
{
 Singularity::Graphics::Axis* self = (Singularity::Graphics::Axis*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Graphics__Material (lua_State* tolua_S)
{
 Singularity::Graphics::Material* self = (Singularity::Graphics::Material*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Color (lua_State* tolua_S)
{
 Color* self = (Color*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Gui__Image (lua_State* tolua_S)
{
 Singularity::Gui::Image* self = (Singularity::Gui::Image*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Gui__Button (lua_State* tolua_S)
{
 Singularity::Gui::Button* self = (Singularity::Gui::Button*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Gui__TextBox (lua_State* tolua_S)
{
 Singularity::Gui::TextBox* self = (Singularity::Gui::TextBox*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Scripting__LuaControlMouseDelegate (lua_State* tolua_S)
{
 Singularity::Scripting::LuaControlMouseDelegate* self = (Singularity::Scripting::LuaControlMouseDelegate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Scripting__LuaBinder (lua_State* tolua_S)
{
 Singularity::Scripting::LuaBinder* self = (Singularity::Scripting::LuaBinder*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Gui__Font (lua_State* tolua_S)
{
 Singularity::Gui::Font* self = (Singularity::Gui::Font*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__ObjectType (lua_State* tolua_S)
{
 Singularity::ObjectType* self = (Singularity::ObjectType*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Vector4 (lua_State* tolua_S)
{
 Vector4* self = (Vector4*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Gui__GuiScreen (lua_State* tolua_S)
{
 Singularity::Gui::GuiScreen* self = (Singularity::Gui::GuiScreen*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Audio__AudioManager (lua_State* tolua_S)
{
 Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__DelegateHandler (lua_State* tolua_S)
{
 Singularity::DelegateHandler* self = (Singularity::DelegateHandler*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Graphics__Light (lua_State* tolua_S)
{
 Singularity::Graphics::Light* self = (Singularity::Graphics::Light*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Particles__EmitterManager (lua_State* tolua_S)
{
 Singularity::Particles::EmitterManager* self = (Singularity::Particles::EmitterManager*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Graphics__Camera (lua_State* tolua_S)
{
 Singularity::Graphics::Camera* self = (Singularity::Graphics::Camera*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Vector2 (lua_State* tolua_S)
{
 Vector2* self = (Vector2*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Audio__AudioEmitter (lua_State* tolua_S)
{
 Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Scripting__LuaControlKeyboardDelegate (lua_State* tolua_S)
{
 Singularity::Scripting::LuaControlKeyboardDelegate* self = (Singularity::Scripting::LuaControlKeyboardDelegate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Physics__RigidBody (lua_State* tolua_S)
{
 Singularity::Physics::RigidBody* self = (Singularity::Physics::RigidBody*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Scripting__LuaTransformDelegate (lua_State* tolua_S)
{
 Singularity::Scripting::LuaTransformDelegate* self = (Singularity::Scripting::LuaTransformDelegate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Gui__Panel (lua_State* tolua_S)
{
 Singularity::Gui::Panel* self = (Singularity::Gui::Panel*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Gui__Window (lua_State* tolua_S)
{
 Singularity::Gui::Window* self = (Singularity::Gui::Window*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Gui__Label (lua_State* tolua_S)
{
 Singularity::Gui::Label* self = (Singularity::Gui::Label*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Graphics__MeshRenderer (lua_State* tolua_S)
{
 Singularity::Graphics::MeshRenderer* self = (Singularity::Graphics::MeshRenderer*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Gui__TextControl (lua_State* tolua_S)
{
 Singularity::Gui::TextControl* self = (Singularity::Gui::TextControl*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Audio__AdaptiveMusicManager (lua_State* tolua_S)
{
 Singularity::Audio::AdaptiveMusicManager* self = (Singularity::Audio::AdaptiveMusicManager*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Physics__CharacterController (lua_State* tolua_S)
{
 Singularity::Physics::CharacterController* self = (Singularity::Physics::CharacterController*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Vector3 (lua_State* tolua_S)
{
 Vector3* self = (Vector3*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_X3DAUDIO_EMITTER (lua_State* tolua_S)
{
 X3DAUDIO_EMITTER* self = (X3DAUDIO_EMITTER*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Audio__AdaptiveProperty (lua_State* tolua_S)
{
 Singularity::Audio::AdaptiveProperty* self = (Singularity::Audio::AdaptiveProperty*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Audio__AdaptiveParameter (lua_State* tolua_S)
{
 Singularity::Audio::AdaptiveParameter* self = (Singularity::Audio::AdaptiveParameter*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Graphics__Renderer (lua_State* tolua_S)
{
 Singularity::Graphics::Renderer* self = (Singularity::Graphics::Renderer*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Scripting__LuaCollisionDelegate (lua_State* tolua_S)
{
 Singularity::Scripting::LuaCollisionDelegate* self = (Singularity::Scripting::LuaCollisionDelegate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Components__Transform (lua_State* tolua_S)
{
 Singularity::Components::Transform* self = (Singularity::Components::Transform*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Quaternion (lua_State* tolua_S)
{
 Quaternion* self = (Quaternion*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Inputs__KeyboardState (lua_State* tolua_S)
{
 Singularity::Inputs::KeyboardState* self = (Singularity::Inputs::KeyboardState*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Animations__Animation (lua_State* tolua_S)
{
 Singularity::Animations::Animation* self = (Singularity::Animations::Animation*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Scripting__LuaNetworkDelegate (lua_State* tolua_S)
{
 Singularity::Scripting::LuaNetworkDelegate* self = (Singularity::Scripting::LuaNetworkDelegate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Components__Scene (lua_State* tolua_S)
{
 Singularity::Components::Scene* self = (Singularity::Components::Scene*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Audio__AudioListener (lua_State* tolua_S)
{
 Singularity::Audio::AudioListener* self = (Singularity::Audio::AudioListener*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Scripting__LuaListBoxDelegate (lua_State* tolua_S)
{
 Singularity::Scripting::LuaListBoxDelegate* self = (Singularity::Scripting::LuaListBoxDelegate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Scripting__LuaControlDelegate (lua_State* tolua_S)
{
 Singularity::Scripting::LuaControlDelegate* self = (Singularity::Scripting::LuaControlDelegate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Scripting__LuaBehaviorDelegate (lua_State* tolua_S)
{
 Singularity::Scripting::LuaBehaviorDelegate* self = (Singularity::Scripting::LuaBehaviorDelegate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Networking__IPAddress (lua_State* tolua_S)
{
 Singularity::Networking::IPAddress* self = (Singularity::Networking::IPAddress*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Audio__AdaptiveSlice (lua_State* tolua_S)
{
 Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_DynamicList_Singularity__Audio__AdaptiveProperty__ (lua_State* tolua_S)
{
 DynamicList<Singularity::Audio::AdaptiveProperty*>* self = (DynamicList<Singularity::Audio::AdaptiveProperty*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Content__SmurfModelImporter (lua_State* tolua_S)
{
 Singularity::Content::SmurfModelImporter* self = (Singularity::Content::SmurfModelImporter*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_DynamicList_Singularity__Physics__Collider__ (lua_State* tolua_S)
{
 DynamicList<Singularity::Physics::Collider*>* self = (DynamicList<Singularity::Physics::Collider*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Physics__CapsuleCollider (lua_State* tolua_S)
{
 Singularity::Physics::CapsuleCollider* self = (Singularity::Physics::CapsuleCollider*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Components__GameObject (lua_State* tolua_S)
{
 Singularity::Components::GameObject* self = (Singularity::Components::GameObject*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Audio__Cue (lua_State* tolua_S)
{
 Singularity::Audio::Cue* self = (Singularity::Audio::Cue*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Gui__Control (lua_State* tolua_S)
{
 Singularity::Gui::Control* self = (Singularity::Gui::Control*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_PrimitiveTopology (lua_State* tolua_S)
{
 PrimitiveTopology* self = (PrimitiveTopology*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Gui__NinePatch (lua_State* tolua_S)
{
 Singularity::Gui::NinePatch* self = (Singularity::Gui::NinePatch*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_X3DAUDIO_LISTENER (lua_State* tolua_S)
{
 X3DAUDIO_LISTENER* self = (X3DAUDIO_LISTENER*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Audio__SoundBank (lua_State* tolua_S)
{
 Singularity::Audio::SoundBank* self = (Singularity::Audio::SoundBank*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Game (lua_State* tolua_S)
{
 Singularity::Game* self = (Singularity::Game*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Bounds (lua_State* tolua_S)
{
 Bounds* self = (Bounds*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Matrix (lua_State* tolua_S)
{
 Matrix* self = (Matrix*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Gui__ListBoxElement (lua_State* tolua_S)
{
 Singularity::Gui::ListBoxElement* self = (Singularity::Gui::ListBoxElement*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UUID (lua_State* tolua_S)
{
 UUID* self = (UUID*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Graphics__Mesh (lua_State* tolua_S)
{
 Singularity::Graphics::Mesh* self = (Singularity::Graphics::Mesh*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Physics__Collider (lua_State* tolua_S)
{
 Singularity::Physics::Collider* self = (Singularity::Physics::Collider*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Singularity__Inputs__MouseState (lua_State* tolua_S)
{
 Singularity::Inputs::MouseState* self = (Singularity::Inputs::MouseState*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}
#endif


/* function to register type */
static void tolua_reg_types (lua_State* tolua_S)
{
 tolua_usertype(tolua_S,"btManifoldPoint");
 tolua_usertype(tolua_S,"Singularity::Networking::Network");
 tolua_usertype(tolua_S,"GuiControlVertexDeclaration");
 tolua_usertype(tolua_S,"Singularity::Content::ModelLoader");
 tolua_usertype(tolua_S,"Singularity::Audio::WaveBank");
 tolua_usertype(tolua_S,"Singularity::Networking::NetworkSession");
 tolua_usertype(tolua_S,"AudioEngine");
 tolua_usertype(tolua_S,"DynamicList<Singularity::Gui::Control*>");
 tolua_usertype(tolua_S,"RECT");
 tolua_usertype(tolua_S,"Singularity::Components::Behavior");
 tolua_usertype(tolua_S,"Singularity::Networking::NetworkGame");
 tolua_usertype(tolua_S,"Singularity::Gui::ListBox");
 tolua_usertype(tolua_S,"__int64");
 tolua_usertype(tolua_S,"DynamicList<AdaptiveParameter*>");
 tolua_usertype(tolua_S,"DynamicList<Singularity::Particles::ParticleEmitter*>");
 tolua_usertype(tolua_S,"Singularity::Gui::Image");
 tolua_usertype(tolua_S,"Singularity::Gui::Button");
 tolua_usertype(tolua_S,"Singularity::Gui::TextBox");
 tolua_usertype(tolua_S,"btScalar");
 tolua_usertype(tolua_S,"Singularity::Gui::Font");
 tolua_usertype(tolua_S,"IndexBuffer");
 tolua_usertype(tolua_S,"DrawingContext");
 tolua_usertype(tolua_S,"Singularity::Audio::AudioManager");
 tolua_usertype(tolua_S,"UUID");
 tolua_usertype(tolua_S,"DynamicList<AudioEmitter*>");
 tolua_usertype(tolua_S,"Singularity::Particles::EmitterManager");
 tolua_usertype(tolua_S,"Timer");
 tolua_usertype(tolua_S,"IXACT3SoundBank");
 tolua_usertype(tolua_S,"Singularity::Audio::AudioEmitter");
 tolua_usertype(tolua_S,"ID3D10ShaderResourceView");
 tolua_usertype(tolua_S,"Singularity::Components::TransformDelegate");
 tolua_usertype(tolua_S,"Singularity::Physics::RigidBody");
 tolua_usertype(tolua_S,"Singularity::Scripting::LuaTransformDelegate");
 tolua_usertype(tolua_S,"Singularity::Gui::Window");
 tolua_usertype(tolua_S,"PrimitiveTopology");
 tolua_usertype(tolua_S,"DIMOUSESTATE");
 tolua_usertype(tolua_S,"Vector3");
 tolua_usertype(tolua_S,"Singularity::Inputs::Input");
 tolua_usertype(tolua_S,"Singularity::Graphics::Devices::DrawingContext");
 tolua_usertype(tolua_S,"Singularity::Graphics::VertexBuffer");
 tolua_usertype(tolua_S,"Singularity::Audio::AdaptiveParameter");
 tolua_usertype(tolua_S,"Singularity::Inputs::MouseState");
 tolua_usertype(tolua_S,"Singularity::Scripting::LuaCollisionDelegate");
 tolua_usertype(tolua_S,"btRigidBody");
 tolua_usertype(tolua_S,"Singularity::Graphics::SkinnedMesh");
 tolua_usertype(tolua_S,"Quaternion");
 tolua_usertype(tolua_S,"Singularity::Scripting::LuaNetworkDelegate");
 tolua_usertype(tolua_S,"Singularity::Components::Scene");
 tolua_usertype(tolua_S,"Singularity::Particles::ParticleVertex");
 tolua_usertype(tolua_S,"DWORD");
 tolua_usertype(tolua_S,"FLOAT");
 tolua_usertype(tolua_S,"DynamicList<Singularity::IDelegate*>");
 tolua_usertype(tolua_S,"Singularity::Scripting::LuaBehaviorDelegate");
 tolua_usertype(tolua_S,"Singularity::Components::GameObject");
 tolua_usertype(tolua_S,"ID3D10Texture2D");
 tolua_usertype(tolua_S,"SOCKET");
 tolua_usertype(tolua_S,"Singularity::Object");
 tolua_usertype(tolua_S,"DynamicSet<Singularity::Physics::Collider*>");
 tolua_usertype(tolua_S,"Singularity::Gui::ListBoxElement");
 tolua_usertype(tolua_S,"Singularity::Physics::Collider");
 tolua_usertype(tolua_S,"Singularity::Threading::CriticalSection");
 tolua_usertype(tolua_S,"Singularity::Audio::AdaptiveEnvironment");
 tolua_usertype(tolua_S,"Singularity::Graphics::Texture2D");
 tolua_usertype(tolua_S,"CriticalSection");
 tolua_usertype(tolua_S,"Singularity::Gui::Control");
 tolua_usertype(tolua_S,"btCollisionShape");
 tolua_usertype(tolua_S,"Singularity::Gui::ControlKeyboardDelegate");
 tolua_usertype(tolua_S,"Singularity::IDelegate");
 tolua_usertype(tolua_S,"Singularity::Physics::SphereCollider");
 tolua_usertype(tolua_S,"DynamicList<String>");
 tolua_usertype(tolua_S,"Singularity::Gui::Checkbox");
 tolua_usertype(tolua_S,"CAMERA_DESC");
 tolua_usertype(tolua_S,"X3DAUDIO_DSP_SETTINGS");
 tolua_usertype(tolua_S,"DynamicList<Singularity::Audio::AdaptivePropertyPoint>");
 tolua_usertype(tolua_S,"Singularity::Animations::Animation");
 tolua_usertype(tolua_S,"Singularity::Networking::LuaNetworkPacket");
 tolua_usertype(tolua_S,"Texture2D");
 tolua_usertype(tolua_S,"Singularity::Networking::NetworkDelegate");
 tolua_usertype(tolua_S,"Singularity::Networking::NetworkPlayer");
 tolua_usertype(tolua_S,"Singularity::Physics::BoxCollider");
 tolua_usertype(tolua_S,"Singularity::Physics::CollisionDelegate");
 tolua_usertype(tolua_S,"Singularity::Scripting::LuaControlDelegate");
 tolua_usertype(tolua_S,"ListPanel");
 tolua_usertype(tolua_S,"Singularity::Graphics::Material");
 tolua_usertype(tolua_S,"String");
 tolua_usertype(tolua_S,"ADDRINFO");
 tolua_usertype(tolua_S,"DynamicList<Singularity::Audio::Cue*>");
 tolua_usertype(tolua_S,"Singularity::Animations::AnimationClip");
 tolua_usertype(tolua_S,"Singularity::Content::SmurfModelImporter");
 tolua_usertype(tolua_S,"Singularity::Scripting::LuaControlMouseDelegate");
 tolua_usertype(tolua_S,"Singularity::Gui::ControlDelegate");
 tolua_usertype(tolua_S,"DynamicList<WaveBank*>");
 tolua_usertype(tolua_S,"DynamicList<Window*>");
 tolua_usertype(tolua_S,"ID3D10EffectPass");
 tolua_usertype(tolua_S,"DynamicList<Singularity::Components::GameObject*>");
 tolua_usertype(tolua_S,"Singularity::ObjectType");
 tolua_usertype(tolua_S,"Vector4");
 tolua_usertype(tolua_S,"Singularity::Gui::GuiScreen");
 tolua_usertype(tolua_S,"Singularity::Gui::ListBoxDelegate");
 tolua_usertype(tolua_S,"Singularity::Audio::AdaptiveSlice");
 tolua_usertype(tolua_S,"DynamicList<string>");
 tolua_usertype(tolua_S,"Singularity::Scripting::ILuaDelegate");
 tolua_usertype(tolua_S,"VertexBuffer");
 tolua_usertype(tolua_S,"Singularity::Graphics::Light");
 tolua_usertype(tolua_S,"Singularity::Components::BehaviorDelegate");
 tolua_usertype(tolua_S,"Singularity::Scripting::LuaBinder");
 tolua_usertype(tolua_S,"DynamicList<Singularity::Components::Component*>");
 tolua_usertype(tolua_S,"Singularity::Graphics::Camera");
 tolua_usertype(tolua_S,"Vector2");
 tolua_usertype(tolua_S,"Singularity::Timer");
 tolua_usertype(tolua_S,"Singularity::Particles::ParticleEmitter");
 tolua_usertype(tolua_S,"Singularity::Networking::Packet");
 tolua_usertype(tolua_S,"Singularity::Networking::IPAddress");
 tolua_usertype(tolua_S,"DynamicList<Singularity::Audio::AdaptiveProperty*>");
 tolua_usertype(tolua_S,"RenderCallback");
 tolua_usertype(tolua_S,"Singularity::Scripting::LuaControlKeyboardDelegate");
 tolua_usertype(tolua_S,"Singularity::Audio::AdaptiveProperty");
 tolua_usertype(tolua_S,"Singularity::Audio::AdaptivePropertyPoint");
 tolua_usertype(tolua_S,"DynamicList<AdaptiveSlice*>");
 tolua_usertype(tolua_S,"Singularity::Gui::Panel");
 tolua_usertype(tolua_S,"Singularity::Scripting::LuaListBoxDelegate");
 tolua_usertype(tolua_S,"DynamicList<AdaptiveEnvironment*>");
 tolua_usertype(tolua_S,"Singularity::Graphics::MeshRenderer");
 tolua_usertype(tolua_S,"Singularity::Gui::Label");
 tolua_usertype(tolua_S,"Singularity::Gui::TextControl");
 tolua_usertype(tolua_S,"Singularity::Audio::AdaptiveMusicManager");
 tolua_usertype(tolua_S,"VertexDeclaration");
 tolua_usertype(tolua_S,"XACTINDEX");
 tolua_usertype(tolua_S,"Singularity::Audio::Cue");
 tolua_usertype(tolua_S,"Singularity::Components::Component");
 tolua_usertype(tolua_S,"Singularity::Game");
 tolua_usertype(tolua_S,"AnimationState");
 tolua_usertype(tolua_S,"D3D10_TEXTURE2D_DESC");
 tolua_usertype(tolua_S,"Mesh");
 tolua_usertype(tolua_S,"Singularity::Audio::SoundBank");
 tolua_usertype(tolua_S,"Singularity::Graphics::Renderer");
 tolua_usertype(tolua_S,"VOID");
 tolua_usertype(tolua_S,"DynamicList<SoundBank*>");
 tolua_usertype(tolua_S,"IXACT3WaveBank");
 tolua_usertype(tolua_S,"Singularity::Components::Transform");
 tolua_usertype(tolua_S,"X3DAUDIO_LISTENER");
 tolua_usertype(tolua_S,"DynamicList<Cue*>");
 tolua_usertype(tolua_S,"btCollisionObject");
 tolua_usertype(tolua_S,"X3DAUDIO_EMITTER");
 tolua_usertype(tolua_S,"Singularity::Inputs::KeyboardState");
 tolua_usertype(tolua_S,"IXACT3Cue");
 tolua_usertype(tolua_S,"Singularity::Graphics::Axis");
 tolua_usertype(tolua_S,"Singularity::Graphics::Screen");
 tolua_usertype(tolua_S,"InternalMaterial");
 tolua_usertype(tolua_S,"Singularity::Audio::AudioListener");
 tolua_usertype(tolua_S,"Singularity::Physics::CharacterController");
 tolua_usertype(tolua_S,"Color");
 tolua_usertype(tolua_S,"DynamicList<Singularity::Gui::Font*>");
 tolua_usertype(tolua_S,"Singularity::DelegateHandler");
 tolua_usertype(tolua_S,"ID3D10Device");
 tolua_usertype(tolua_S,"Singularity::Networking::NetworkGameDescription");
 tolua_usertype(tolua_S,"DynamicList<Singularity::Physics::Collider*>");
 tolua_usertype(tolua_S,"Singularity::Physics::CapsuleCollider");
 tolua_usertype(tolua_S,"Matrix");
 tolua_usertype(tolua_S,"DECLARE_OBJECT_TYPE");
 tolua_usertype(tolua_S,"Singularity::Gui::ControlMouseDelegate");
 tolua_usertype(tolua_S,"Singularity::Gui::NinePatch");
 tolua_usertype(tolua_S,"Singularity::Content::IModelImporter");
 tolua_usertype(tolua_S,"Singularity::Content::IContentImporter");
 tolua_usertype(tolua_S,"LIGHT_DESC");
 tolua_usertype(tolua_S,"GuiFontVertexDeclaration");
 tolua_usertype(tolua_S,"Material");
 tolua_usertype(tolua_S,"PhysicsMotionState");
 tolua_usertype(tolua_S,"Camera");
 tolua_usertype(tolua_S,"Bounds");
 tolua_usertype(tolua_S,"btCollisionWorld::ContactResultCallback");
 tolua_usertype(tolua_S,"Singularity::Graphics::Mesh");
}

/* get function: x of class  Vector2 */
#ifndef TOLUA_DISABLE_tolua_get_Vector2_x
static int tolua_get_Vector2_x(lua_State* tolua_S)
{
  Vector2* self = (Vector2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->x);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: x of class  Vector2 */
#ifndef TOLUA_DISABLE_tolua_set_Vector2_x
static int tolua_set_Vector2_x(lua_State* tolua_S)
{
  Vector2* self = (Vector2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->x = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: y of class  Vector2 */
#ifndef TOLUA_DISABLE_tolua_get_Vector2_y
static int tolua_get_Vector2_y(lua_State* tolua_S)
{
  Vector2* self = (Vector2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: y of class  Vector2 */
#ifndef TOLUA_DISABLE_tolua_set_Vector2_y
static int tolua_set_Vector2_y(lua_State* tolua_S)
{
  Vector2* self = (Vector2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->y = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Vector2 */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Vector2_new00
static int tolua_Singularity_scripting_Vector2_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Vector2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Vector2* tolua_ret = (Vector2*)  Mtolua_new((Vector2)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Vector2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Vector2 */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Vector2_new00_local
static int tolua_Singularity_scripting_Vector2_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Vector2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Vector2* tolua_ret = (Vector2*)  Mtolua_new((Vector2)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Vector2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Vector2 */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Vector2_new01
static int tolua_Singularity_scripting_Vector2_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Vector2",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   Vector2* tolua_ret = (Vector2*)  Mtolua_new((Vector2)(x,y));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Vector2");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Vector2_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Vector2 */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Vector2_new01_local
static int tolua_Singularity_scripting_Vector2_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Vector2",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   Vector2* tolua_ret = (Vector2*)  Mtolua_new((Vector2)(x,y));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Vector2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Vector2_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* get function: x of class  Vector3 */
#ifndef TOLUA_DISABLE_tolua_get_Vector3_x
static int tolua_get_Vector3_x(lua_State* tolua_S)
{
  Vector3* self = (Vector3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->x);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: x of class  Vector3 */
#ifndef TOLUA_DISABLE_tolua_set_Vector3_x
static int tolua_set_Vector3_x(lua_State* tolua_S)
{
  Vector3* self = (Vector3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->x = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: y of class  Vector3 */
#ifndef TOLUA_DISABLE_tolua_get_Vector3_y
static int tolua_get_Vector3_y(lua_State* tolua_S)
{
  Vector3* self = (Vector3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: y of class  Vector3 */
#ifndef TOLUA_DISABLE_tolua_set_Vector3_y
static int tolua_set_Vector3_y(lua_State* tolua_S)
{
  Vector3* self = (Vector3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->y = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: z of class  Vector3 */
#ifndef TOLUA_DISABLE_tolua_get_Vector3_z
static int tolua_get_Vector3_z(lua_State* tolua_S)
{
  Vector3* self = (Vector3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'z'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->z);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: z of class  Vector3 */
#ifndef TOLUA_DISABLE_tolua_set_Vector3_z
static int tolua_set_Vector3_z(lua_State* tolua_S)
{
  Vector3* self = (Vector3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'z'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->z = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Vector3 */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Vector3_new00
static int tolua_Singularity_scripting_Vector3_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Vector3",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Vector3* tolua_ret = (Vector3*)  Mtolua_new((Vector3)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Vector3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Vector3 */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Vector3_new00_local
static int tolua_Singularity_scripting_Vector3_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Vector3",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Vector3* tolua_ret = (Vector3*)  Mtolua_new((Vector3)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Vector3 */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Vector3_new01
static int tolua_Singularity_scripting_Vector3_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Vector3",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   Vector3* tolua_ret = (Vector3*)  Mtolua_new((Vector3)(x,y,z));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Vector3");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Vector3_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Vector3 */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Vector3_new01_local
static int tolua_Singularity_scripting_Vector3_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Vector3",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   Vector3* tolua_ret = (Vector3*)  Mtolua_new((Vector3)(x,y,z));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Vector3_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Project of class  Vector3 */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Vector3_Project00
static int tolua_Singularity_scripting_Vector3_Project00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Vector3",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Vector3* self = (Vector3*)  tolua_tousertype(tolua_S,1,0);
  Camera* camera = ((Camera*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Project'", NULL);
#endif
  {
   Vector3 tolua_ret = (Vector3)  self->Project(camera);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Project'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: x of class  Vector4 */
#ifndef TOLUA_DISABLE_tolua_get_Vector4_x
static int tolua_get_Vector4_x(lua_State* tolua_S)
{
  Vector4* self = (Vector4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->x);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: x of class  Vector4 */
#ifndef TOLUA_DISABLE_tolua_set_Vector4_x
static int tolua_set_Vector4_x(lua_State* tolua_S)
{
  Vector4* self = (Vector4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->x = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: y of class  Vector4 */
#ifndef TOLUA_DISABLE_tolua_get_Vector4_y
static int tolua_get_Vector4_y(lua_State* tolua_S)
{
  Vector4* self = (Vector4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: y of class  Vector4 */
#ifndef TOLUA_DISABLE_tolua_set_Vector4_y
static int tolua_set_Vector4_y(lua_State* tolua_S)
{
  Vector4* self = (Vector4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->y = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: z of class  Vector4 */
#ifndef TOLUA_DISABLE_tolua_get_Vector4_z
static int tolua_get_Vector4_z(lua_State* tolua_S)
{
  Vector4* self = (Vector4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'z'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->z);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: z of class  Vector4 */
#ifndef TOLUA_DISABLE_tolua_set_Vector4_z
static int tolua_set_Vector4_z(lua_State* tolua_S)
{
  Vector4* self = (Vector4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'z'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->z = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Vector4 */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Vector4_new00
static int tolua_Singularity_scripting_Vector4_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Vector4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Vector4* tolua_ret = (Vector4*)  Mtolua_new((Vector4)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Vector4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Vector4 */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Vector4_new00_local
static int tolua_Singularity_scripting_Vector4_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Vector4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Vector4* tolua_ret = (Vector4*)  Mtolua_new((Vector4)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Vector4");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Vector4 */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Vector4_new01
static int tolua_Singularity_scripting_Vector4_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Vector4",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  float w = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   Vector4* tolua_ret = (Vector4*)  Mtolua_new((Vector4)(x,y,z,w));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Vector4");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Vector4_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Vector4 */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Vector4_new01_local
static int tolua_Singularity_scripting_Vector4_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Vector4",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  float w = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   Vector4* tolua_ret = (Vector4*)  Mtolua_new((Vector4)(x,y,z,w));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Vector4");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Vector4_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* get function: r of class  Color */
#ifndef TOLUA_DISABLE_tolua_get_Color_r
static int tolua_get_Color_r(lua_State* tolua_S)
{
  Color* self = (Color*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->r);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: r of class  Color */
#ifndef TOLUA_DISABLE_tolua_set_Color_r
static int tolua_set_Color_r(lua_State* tolua_S)
{
  Color* self = (Color*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->r = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: g of class  Color */
#ifndef TOLUA_DISABLE_tolua_get_Color_g
static int tolua_get_Color_g(lua_State* tolua_S)
{
  Color* self = (Color*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->g);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: g of class  Color */
#ifndef TOLUA_DISABLE_tolua_set_Color_g
static int tolua_set_Color_g(lua_State* tolua_S)
{
  Color* self = (Color*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->g = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: b of class  Color */
#ifndef TOLUA_DISABLE_tolua_get_Color_b
static int tolua_get_Color_b(lua_State* tolua_S)
{
  Color* self = (Color*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->b);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: b of class  Color */
#ifndef TOLUA_DISABLE_tolua_set_Color_b
static int tolua_set_Color_b(lua_State* tolua_S)
{
  Color* self = (Color*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->b = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: a of class  Color */
#ifndef TOLUA_DISABLE_tolua_get_Color_a
static int tolua_get_Color_a(lua_State* tolua_S)
{
  Color* self = (Color*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->a);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: a of class  Color */
#ifndef TOLUA_DISABLE_tolua_set_Color_a
static int tolua_set_Color_a(lua_State* tolua_S)
{
  Color* self = (Color*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->a = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Color */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Color_new00
static int tolua_Singularity_scripting_Color_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Color",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Color* tolua_ret = (Color*)  Mtolua_new((Color)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Color");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Color */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Color_new00_local
static int tolua_Singularity_scripting_Color_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Color",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Color* tolua_ret = (Color*)  Mtolua_new((Color)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Color");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Color */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Color_new01
static int tolua_Singularity_scripting_Color_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Color",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  unsigned argb = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Color* tolua_ret = (Color*)  Mtolua_new((Color)(argb));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Color");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Color_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Color */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Color_new01_local
static int tolua_Singularity_scripting_Color_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Color",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  unsigned argb = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Color* tolua_ret = (Color*)  Mtolua_new((Color)(argb));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Color");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Color_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Color */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Color_new02
static int tolua_Singularity_scripting_Color_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Color",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float r = ((float)  tolua_tonumber(tolua_S,2,0));
  float g = ((float)  tolua_tonumber(tolua_S,3,0));
  float b = ((float)  tolua_tonumber(tolua_S,4,0));
  float a = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   Color* tolua_ret = (Color*)  Mtolua_new((Color)(r,g,b,a));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Color");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Color_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Color */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Color_new02_local
static int tolua_Singularity_scripting_Color_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Color",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float r = ((float)  tolua_tonumber(tolua_S,2,0));
  float g = ((float)  tolua_tonumber(tolua_S,3,0));
  float b = ((float)  tolua_tonumber(tolua_S,4,0));
  float a = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   Color* tolua_ret = (Color*)  Mtolua_new((Color)(r,g,b,a));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Color");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Color_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* get function: x of class  Quaternion */
#ifndef TOLUA_DISABLE_tolua_get_Quaternion_x
static int tolua_get_Quaternion_x(lua_State* tolua_S)
{
  Quaternion* self = (Quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->x);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: x of class  Quaternion */
#ifndef TOLUA_DISABLE_tolua_set_Quaternion_x
static int tolua_set_Quaternion_x(lua_State* tolua_S)
{
  Quaternion* self = (Quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->x = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: y of class  Quaternion */
#ifndef TOLUA_DISABLE_tolua_get_Quaternion_y
static int tolua_get_Quaternion_y(lua_State* tolua_S)
{
  Quaternion* self = (Quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: y of class  Quaternion */
#ifndef TOLUA_DISABLE_tolua_set_Quaternion_y
static int tolua_set_Quaternion_y(lua_State* tolua_S)
{
  Quaternion* self = (Quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->y = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: z of class  Quaternion */
#ifndef TOLUA_DISABLE_tolua_get_Quaternion_z
static int tolua_get_Quaternion_z(lua_State* tolua_S)
{
  Quaternion* self = (Quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'z'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->z);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: z of class  Quaternion */
#ifndef TOLUA_DISABLE_tolua_set_Quaternion_z
static int tolua_set_Quaternion_z(lua_State* tolua_S)
{
  Quaternion* self = (Quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'z'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->z = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: w of class  Quaternion */
#ifndef TOLUA_DISABLE_tolua_get_Quaternion_w
static int tolua_get_Quaternion_w(lua_State* tolua_S)
{
  Quaternion* self = (Quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'w'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->w);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: w of class  Quaternion */
#ifndef TOLUA_DISABLE_tolua_set_Quaternion_w
static int tolua_set_Quaternion_w(lua_State* tolua_S)
{
  Quaternion* self = (Quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'w'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->w = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Quaternion */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Quaternion_new00
static int tolua_Singularity_scripting_Quaternion_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Quaternion",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Quaternion* tolua_ret = (Quaternion*)  Mtolua_new((Quaternion)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Quaternion");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Quaternion */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Quaternion_new00_local
static int tolua_Singularity_scripting_Quaternion_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Quaternion",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Quaternion* tolua_ret = (Quaternion*)  Mtolua_new((Quaternion)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Quaternion");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Quaternion */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Quaternion_new01
static int tolua_Singularity_scripting_Quaternion_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Quaternion",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  float w = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   Quaternion* tolua_ret = (Quaternion*)  Mtolua_new((Quaternion)(x,y,z,w));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Quaternion");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Quaternion_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Quaternion */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Quaternion_new01_local
static int tolua_Singularity_scripting_Quaternion_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Quaternion",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  float w = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   Quaternion* tolua_ret = (Quaternion*)  Mtolua_new((Quaternion)(x,y,z,w));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Quaternion");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Quaternion_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Empty of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_get_Bounds_Empty
static int tolua_get_Bounds_Empty(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Bounds::Empty,"const Bounds");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Center of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_get_Bounds_Center
static int tolua_get_Bounds_Center(lua_State* tolua_S)
{
  Bounds* self = (Bounds*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Center'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Center,"Vector3");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Center of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_set_Bounds_Center
static int tolua_set_Bounds_Center(lua_State* tolua_S)
{
  Bounds* self = (Bounds*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Center'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Center = *((Vector3*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Size of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_get_Bounds_Size
static int tolua_get_Bounds_Size(lua_State* tolua_S)
{
  Bounds* self = (Bounds*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Size'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Size,"Vector3");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Size of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_set_Bounds_Size
static int tolua_set_Bounds_Size(lua_State* tolua_S)
{
  Bounds* self = (Bounds*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Size'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Size = *((Vector3*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Min of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds_Get_Min00
static int tolua_Singularity_scripting_Bounds_Get_Min00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Bounds",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Bounds* self = (const Bounds*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Min'", NULL);
#endif
  {
   const Vector3 tolua_ret = (const Vector3)  self->Get_Min();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"const Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(const Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"const Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Min'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Max of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds_Get_Max00
static int tolua_Singularity_scripting_Bounds_Get_Max00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Bounds",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Bounds* self = (const Bounds*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Max'", NULL);
#endif
  {
   const Vector3 tolua_ret = (const Vector3)  self->Get_Max();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"const Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(const Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"const Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Max'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds_new00
static int tolua_Singularity_scripting_Bounds_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Bounds",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const float cx = ((const float)  tolua_tonumber(tolua_S,2,0));
  const float cy = ((const float)  tolua_tonumber(tolua_S,3,0));
  const float cz = ((const float)  tolua_tonumber(tolua_S,4,0));
  const float sx = ((const float)  tolua_tonumber(tolua_S,5,0));
  const float sy = ((const float)  tolua_tonumber(tolua_S,6,0));
  const float sz = ((const float)  tolua_tonumber(tolua_S,7,0));
  {
   Bounds* tolua_ret = (Bounds*)  Mtolua_new((Bounds)(cx,cy,cz,sx,sy,sz));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Bounds");
   tolua_pushnumber(tolua_S,(lua_Number)cx);
   tolua_pushnumber(tolua_S,(lua_Number)cy);
   tolua_pushnumber(tolua_S,(lua_Number)cz);
   tolua_pushnumber(tolua_S,(lua_Number)sx);
   tolua_pushnumber(tolua_S,(lua_Number)sy);
   tolua_pushnumber(tolua_S,(lua_Number)sz);
  }
 }
 return 7;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds_new00_local
static int tolua_Singularity_scripting_Bounds_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Bounds",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const float cx = ((const float)  tolua_tonumber(tolua_S,2,0));
  const float cy = ((const float)  tolua_tonumber(tolua_S,3,0));
  const float cz = ((const float)  tolua_tonumber(tolua_S,4,0));
  const float sx = ((const float)  tolua_tonumber(tolua_S,5,0));
  const float sy = ((const float)  tolua_tonumber(tolua_S,6,0));
  const float sz = ((const float)  tolua_tonumber(tolua_S,7,0));
  {
   Bounds* tolua_ret = (Bounds*)  Mtolua_new((Bounds)(cx,cy,cz,sx,sy,sz));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Bounds");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
   tolua_pushnumber(tolua_S,(lua_Number)cx);
   tolua_pushnumber(tolua_S,(lua_Number)cy);
   tolua_pushnumber(tolua_S,(lua_Number)cz);
   tolua_pushnumber(tolua_S,(lua_Number)sx);
   tolua_pushnumber(tolua_S,(lua_Number)sy);
   tolua_pushnumber(tolua_S,(lua_Number)sz);
  }
 }
 return 7;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds_new01
static int tolua_Singularity_scripting_Bounds_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Bounds",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  {
   Bounds* tolua_ret = (Bounds*)  Mtolua_new((Bounds)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Bounds");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Bounds_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds_new01_local
static int tolua_Singularity_scripting_Bounds_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Bounds",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  {
   Bounds* tolua_ret = (Bounds*)  Mtolua_new((Bounds)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Bounds");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Bounds_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds_new02
static int tolua_Singularity_scripting_Bounds_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Bounds",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Vector3* center = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
  {
   Bounds* tolua_ret = (Bounds*)  Mtolua_new((Bounds)(*center));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Bounds");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Bounds_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds_new02_local
static int tolua_Singularity_scripting_Bounds_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Bounds",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Vector3* center = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
  {
   Bounds* tolua_ret = (Bounds*)  Mtolua_new((Bounds)(*center));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Bounds");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Bounds_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds_new03
static int tolua_Singularity_scripting_Bounds_new03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Bounds",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Vector3* center = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
  const Vector3* size = ((const Vector3*)  tolua_tousertype(tolua_S,3,0));
  {
   Bounds* tolua_ret = (Bounds*)  Mtolua_new((Bounds)(*center,*size));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Bounds");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Bounds_new02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds_new03_local
static int tolua_Singularity_scripting_Bounds_new03_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Bounds",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Vector3* center = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
  const Vector3* size = ((const Vector3*)  tolua_tousertype(tolua_S,3,0));
  {
   Bounds* tolua_ret = (Bounds*)  Mtolua_new((Bounds)(*center,*size));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Bounds");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Bounds_new02_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds_delete00
static int tolua_Singularity_scripting_Bounds_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bounds",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Bounds* self = (Bounds*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMinMax of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds_SetMinMax00
static int tolua_Singularity_scripting_Bounds_SetMinMax00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bounds",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Bounds* self = (Bounds*)  tolua_tousertype(tolua_S,1,0);
  const Vector3* min = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
  const Vector3* max = ((const Vector3*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMinMax'", NULL);
#endif
  {
   self->SetMinMax(*min,*max);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMinMax'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Encapsulate of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds_Encapsulate00
static int tolua_Singularity_scripting_Bounds_Encapsulate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bounds",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Bounds* self = (Bounds*)  tolua_tousertype(tolua_S,1,0);
  const Vector3* point = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Encapsulate'", NULL);
#endif
  {
   self->Encapsulate(*point);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Encapsulate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Expand of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds_Expand00
static int tolua_Singularity_scripting_Bounds_Expand00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bounds",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Bounds* self = (Bounds*)  tolua_tousertype(tolua_S,1,0);
  const float amount = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Expand'", NULL);
#endif
  {
   self->Expand(amount);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Expand'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Expand of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds_Expand01
static int tolua_Singularity_scripting_Bounds_Expand01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bounds",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Bounds* self = (Bounds*)  tolua_tousertype(tolua_S,1,0);
  const Vector3 amount = *((const Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Expand'", NULL);
#endif
  {
   self->Expand(amount);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Bounds_Expand00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Contains of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds_Contains00
static int tolua_Singularity_scripting_Bounds_Contains00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Bounds",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Bounds* self = (const Bounds*)  tolua_tousertype(tolua_S,1,0);
  const Vector3* point = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Contains'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->Contains(*point);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Contains'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SqrDistance of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds_SqrDistance00
static int tolua_Singularity_scripting_Bounds_SqrDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Bounds",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Bounds* self = (const Bounds*)  tolua_tousertype(tolua_S,1,0);
  const Vector3* point = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SqrDistance'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->SqrDistance(*point);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SqrDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  Bounds */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Bounds__eq00
static int tolua_Singularity_scripting_Bounds__eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bounds",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Bounds",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Bounds* self = (Bounds*)  tolua_tousertype(tolua_S,1,0);
  const Bounds* value = ((const Bounds*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*value);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_FullName of class  Singularity::ObjectType */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_ObjectType_Get_FullName00
static int tolua_Singularity_scripting_Singularity_ObjectType_Get_FullName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::ObjectType",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::ObjectType* self = (const Singularity::ObjectType*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_FullName'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->Get_FullName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_FullName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::ObjectType */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_ObjectType_new00
static int tolua_Singularity_scripting_Singularity_ObjectType_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::ObjectType",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const String",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,3,"const Singularity::ObjectType",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const String* name = ((const String*)  tolua_tousertype(tolua_S,2,0));
  const Singularity::ObjectType* baseType = ((const Singularity::ObjectType*)  tolua_tousertype(tolua_S,3,0));
  {
   Singularity::ObjectType* tolua_ret = (Singularity::ObjectType*)  Mtolua_new((Singularity::ObjectType)(*name,baseType));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::ObjectType");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::ObjectType */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_ObjectType_new00_local
static int tolua_Singularity_scripting_Singularity_ObjectType_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::ObjectType",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const String",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,3,"const Singularity::ObjectType",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const String* name = ((const String*)  tolua_tousertype(tolua_S,2,0));
  const Singularity::ObjectType* baseType = ((const Singularity::ObjectType*)  tolua_tousertype(tolua_S,3,0));
  {
   Singularity::ObjectType* tolua_ret = (Singularity::ObjectType*)  Mtolua_new((Singularity::ObjectType)(*name,baseType));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::ObjectType");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::ObjectType */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_ObjectType_delete00
static int tolua_Singularity_scripting_Singularity_ObjectType_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::ObjectType",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::ObjectType* self = (Singularity::ObjectType*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Equals of class  Singularity::ObjectType */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_ObjectType_Equals00
static int tolua_Singularity_scripting_Singularity_ObjectType_Equals00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::ObjectType",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Singularity::ObjectType",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::ObjectType* self = (const Singularity::ObjectType*)  tolua_tousertype(tolua_S,1,0);
  const Singularity::ObjectType* type = ((const Singularity::ObjectType*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Equals'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Equals(*type);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Equals'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsSubClassOf of class  Singularity::ObjectType */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_ObjectType_IsSubClassOf00
static int tolua_Singularity_scripting_Singularity_ObjectType_IsSubClassOf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::ObjectType",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Singularity::ObjectType",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::ObjectType* self = (const Singularity::ObjectType*)  tolua_tousertype(tolua_S,1,0);
  const Singularity::ObjectType* type = ((const Singularity::ObjectType*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsSubClassOf'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsSubClassOf(*type);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsSubClassOf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Type of class  Singularity::Object */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Object_Type
static int tolua_get_Singularity__Object_Type(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Singularity::Object::Type,"const Singularity::ObjectType");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetType of class  Singularity::Object */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Object_GetType00
static int tolua_Singularity_scripting_Singularity_Object_GetType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Object* self = (const Singularity::Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetType'", NULL);
#endif
  {
   const Singularity::ObjectType& tolua_ret = (const Singularity::ObjectType&)  self->GetType();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Singularity::ObjectType");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::DelegateHandler */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_DelegateHandler_new00
static int tolua_Singularity_scripting_Singularity_DelegateHandler_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::DelegateHandler",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::DelegateHandler* tolua_ret = (Singularity::DelegateHandler*)  Mtolua_new((Singularity::DelegateHandler)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::DelegateHandler");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::DelegateHandler */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_DelegateHandler_new00_local
static int tolua_Singularity_scripting_Singularity_DelegateHandler_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::DelegateHandler",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::DelegateHandler* tolua_ret = (Singularity::DelegateHandler*)  Mtolua_new((Singularity::DelegateHandler)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::DelegateHandler");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::DelegateHandler */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_DelegateHandler_delete00
static int tolua_Singularity_scripting_Singularity_DelegateHandler_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::DelegateHandler",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::DelegateHandler* self = (Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Count of class  Singularity::DelegateHandler */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_DelegateHandler_Count00
static int tolua_Singularity_scripting_Singularity_DelegateHandler_Count00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::DelegateHandler",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::DelegateHandler* self = (Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Count'", NULL);
#endif
  {
   unsigned tolua_ret = (unsigned)  self->Count();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Count'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Add of class  Singularity::DelegateHandler */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_DelegateHandler_Add00
static int tolua_Singularity_scripting_Singularity_DelegateHandler_Add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::DelegateHandler",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::IDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::DelegateHandler* self = (Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,1,0);
  Singularity::IDelegate* method = ((Singularity::IDelegate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Add'", NULL);
#endif
  {
   self->Add(method);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Remove of class  Singularity::DelegateHandler */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_DelegateHandler_Remove00
static int tolua_Singularity_scripting_Singularity_DelegateHandler_Remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::DelegateHandler",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::IDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::DelegateHandler* self = (Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,1,0);
  Singularity::IDelegate* method = ((Singularity::IDelegate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Remove'", NULL);
#endif
  {
   self->Remove(method);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  Singularity::DelegateHandler */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_DelegateHandler_Clear00
static int tolua_Singularity_scripting_Singularity_DelegateHandler_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::DelegateHandler",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::DelegateHandler* self = (Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  Singularity::DelegateHandler */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_DelegateHandler__eq00
static int tolua_Singularity_scripting_Singularity_DelegateHandler__eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::DelegateHandler",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Singularity::DelegateHandler",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::DelegateHandler* self = (const Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,1,0);
  const Singularity::DelegateHandler* other = ((const Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator[] of class  Singularity::DelegateHandler */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_DelegateHandler__geti00
static int tolua_Singularity_scripting_Singularity_DelegateHandler__geti00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::DelegateHandler",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::DelegateHandler* self = (const Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,1,0);
  unsigned index = ((unsigned)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator[]'", NULL);
#endif
  {
   Singularity::IDelegate* tolua_ret = (Singularity::IDelegate*)  self->operator[](index);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::IDelegate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.geti'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Name of class  Singularity::Components::Component */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Component_Get_Name00
static int tolua_Singularity_scripting_Singularity_Components_Component_Get_Name00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Components::Component",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Components::Component* self = (const Singularity::Components::Component*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Name'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->Get_Name();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Name'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_GameObject of class  Singularity::Components::Component */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Component_Get_GameObject00
static int tolua_Singularity_scripting_Singularity_Components_Component_Get_GameObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Components::Component",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Components::Component* self = (const Singularity::Components::Component*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_GameObject'", NULL);
#endif
  {
   Singularity::Components::GameObject* tolua_ret = (Singularity::Components::GameObject*)  self->Get_GameObject();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Components::GameObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_GameObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Enabled of class  Singularity::Components::Component */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Component_Get_Enabled00
static int tolua_Singularity_scripting_Singularity_Components_Component_Get_Enabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Components::Component",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Components::Component* self = (const Singularity::Components::Component*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Enabled'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->Get_Enabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Enabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Enabled of class  Singularity::Components::Component */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Component_Set_Enabled00
static int tolua_Singularity_scripting_Singularity_Components_Component_Set_Enabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Component",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Component* self = (Singularity::Components::Component*)  tolua_tousertype(tolua_S,1,0);
  const bool value = ((const bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Enabled'", NULL);
#endif
  {
   self->Set_Enabled(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Enabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Id of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_Get_Id00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_Get_Id00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Components::GameObject* self = (const Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Id'", NULL);
#endif
  {
   const UUID tolua_ret = (const UUID)  self->Get_Id();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((UUID)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"const UUID");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(const UUID));
     tolua_pushusertype(tolua_S,tolua_obj,"const UUID");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Id'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Name of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_Get_Name00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_Get_Name00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Components::GameObject* self = (const Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Name'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->Get_Name();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Name'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_IsActive of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_Get_IsActive00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_Get_IsActive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Components::GameObject* self = (const Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_IsActive'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->Get_IsActive();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_IsActive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_IsActive of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_Set_IsActive00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_Set_IsActive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::GameObject* self = (Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
  const bool value = ((const bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_IsActive'", NULL);
#endif
  {
   self->Set_IsActive(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_IsActive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Transform of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_Get_Transform00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_Get_Transform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::GameObject* self = (Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Transform'", NULL);
#endif
  {
   Singularity::Components::Transform* tolua_ret = (Singularity::Components::Transform*)  self->Get_Transform();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Components::Transform");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Transform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Root of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_Get_Root00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_Get_Root00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::GameObject* self = (Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Root'", NULL);
#endif
  {
   Singularity::Components::GameObject* tolua_ret = (Singularity::Components::GameObject*)  self->Get_Root();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Components::GameObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Root'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Parent of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_Get_Parent00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_Get_Parent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Components::GameObject* self = (const Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Parent'", NULL);
#endif
  {
   Singularity::Components::GameObject* tolua_ret = (Singularity::Components::GameObject*)  self->Get_Parent();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Components::GameObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Parent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Parent of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_Set_Parent00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_Set_Parent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::GameObject* self = (Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Components::GameObject* parent = ((Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Parent'", NULL);
#endif
  {
   self->Set_Parent(parent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Parent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_delete00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::GameObject* self = (Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AttachChild of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_AttachChild00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_AttachChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::GameObject* self = (Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Components::GameObject* node = ((Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AttachChild'", NULL);
#endif
  {
   self->AttachChild(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AttachChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DetachChild of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_DetachChild00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_DetachChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::GameObject* self = (Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Components::GameObject* node = ((Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DetachChild'", NULL);
#endif
  {
   self->DetachChild(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DetachChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DetachChildren of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_DetachChildren00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_DetachChildren00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::GameObject* self = (Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DetachChildren'", NULL);
#endif
  {
   self->DetachChildren();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DetachChildren'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetComponent of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_GetComponent00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_GetComponent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::GameObject",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Singularity::ObjectType",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::GameObject* self = (Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
  const Singularity::ObjectType* type = ((const Singularity::ObjectType*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetComponent'", NULL);
#endif
  {
   Singularity::Components::Component* tolua_ret = (Singularity::Components::Component*)  self->GetComponent(*type);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Components::Component");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetComponent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetComponent of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_GetComponent01
static int tolua_Singularity_scripting_Singularity_Components_GameObject_GetComponent01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Components::GameObject* self = (Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
  std::string type = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetComponent'", NULL);
#endif
  {
   Singularity::Components::Component* tolua_ret = (Singularity::Components::Component*)  self->GetComponent(type);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Components::Component");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Components_GameObject_GetComponent00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetComponentByIndex of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_GetComponentByIndex00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_GetComponentByIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::GameObject* self = (Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetComponentByIndex'", NULL);
#endif
  {
   Singularity::Components::Component* tolua_ret = (Singularity::Components::Component*)  self->GetComponentByIndex(index);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Components::Component");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetComponentByIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddComponent of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_AddComponent00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_AddComponent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Components::Component",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::GameObject* self = (Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Components::Component* component = ((Singularity::Components::Component*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddComponent'", NULL);
#endif
  {
   self->AddComponent(component);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddComponent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveComponent of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_RemoveComponent00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_RemoveComponent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Components::Component",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::GameObject* self = (Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Components::Component* component = ((Singularity::Components::Component*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveComponent'", NULL);
#endif
  {
   self->RemoveComponent(component);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveComponent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearComponents of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_ClearComponents00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_ClearComponents00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::GameObject* self = (Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearComponents'", NULL);
#endif
  {
   self->ClearComponents();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearComponents'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Destroy of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_Destroy00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_Destroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::GameObject* self = (Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Destroy'", NULL);
#endif
  {
   self->Destroy();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Destroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Find of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_Find00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_Find00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::GameObject* self = (Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Find'", NULL);
#endif
  {
   Singularity::Components::GameObject* tolua_ret = (Singularity::Components::GameObject*)  self->Find(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Components::GameObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Find'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsChildOf of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_IsChildOf00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_IsChildOf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Components::GameObject* self = (const Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,1,0);
  const Singularity::Components::GameObject* parent = ((const Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsChildOf'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->IsChildOf(parent);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsChildOf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  Singularity::Components::GameObject */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_GameObject_Create00
static int tolua_Singularity_scripting_Singularity_Components_GameObject_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Components::GameObject",1,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Singularity::Components::Scene",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  Singularity::Components::GameObject* parent = ((Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,3,NULL));
  Singularity::Components::Scene* scene = ((Singularity::Components::Scene*)  tolua_tousertype(tolua_S,4,NULL));
  {
   Singularity::Components::GameObject* tolua_ret = (Singularity::Components::GameObject*)  Singularity::Components::GameObject::Create(name,parent,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Components::GameObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Position of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Get_Position00
static int tolua_Singularity_scripting_Singularity_Components_Transform_Get_Position00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Position'", NULL);
#endif
  {
   Vector3 tolua_ret = (Vector3)  self->Get_Position();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Position of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Set_Position00
static int tolua_Singularity_scripting_Singularity_Components_Transform_Set_Position00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  Vector3* value = ((Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Position'", NULL);
#endif
  {
   self->Set_Position(*value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Rotation of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Get_Rotation00
static int tolua_Singularity_scripting_Singularity_Components_Transform_Get_Rotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Rotation'", NULL);
#endif
  {
   Quaternion tolua_ret = (Quaternion)  self->Get_Rotation();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Quaternion)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Quaternion");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Quaternion));
     tolua_pushusertype(tolua_S,tolua_obj,"Quaternion");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Rotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Rotation of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Set_Rotation00
static int tolua_Singularity_scripting_Singularity_Components_Transform_Set_Rotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Quaternion",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  Quaternion* value = ((Quaternion*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Rotation'", NULL);
#endif
  {
   self->Set_Rotation(*value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Rotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Rotation of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Set_Rotation01
static int tolua_Singularity_scripting_Singularity_Components_Transform_Set_Rotation01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  Vector3* value = ((Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Rotation'", NULL);
#endif
  {
   self->Set_Rotation(*value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Components_Transform_Set_Rotation00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Scale of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Get_Scale00
static int tolua_Singularity_scripting_Singularity_Components_Transform_Get_Scale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Scale'", NULL);
#endif
  {
   Vector3 tolua_ret = (Vector3)  self->Get_Scale();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Scale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Scale of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Set_Scale00
static int tolua_Singularity_scripting_Singularity_Components_Transform_Set_Scale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  Vector3* value = ((Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Scale'", NULL);
#endif
  {
   self->Set_Scale(*value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Scale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_LocalPosition of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Get_LocalPosition00
static int tolua_Singularity_scripting_Singularity_Components_Transform_Get_LocalPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_LocalPosition'", NULL);
#endif
  {
   Vector3& tolua_ret = (Vector3&)  self->Get_LocalPosition();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Vector3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_LocalPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_LocalPosition of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Set_LocalPosition00
static int tolua_Singularity_scripting_Singularity_Components_Transform_Set_LocalPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  Vector3* value = ((Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_LocalPosition'", NULL);
#endif
  {
   self->Set_LocalPosition(*value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_LocalPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_LocalRotation of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Get_LocalRotation00
static int tolua_Singularity_scripting_Singularity_Components_Transform_Get_LocalRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_LocalRotation'", NULL);
#endif
  {
   Quaternion& tolua_ret = (Quaternion&)  self->Get_LocalRotation();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Quaternion");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_LocalRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_LocalRotation of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Set_LocalRotation00
static int tolua_Singularity_scripting_Singularity_Components_Transform_Set_LocalRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Quaternion",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  Quaternion* value = ((Quaternion*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_LocalRotation'", NULL);
#endif
  {
   self->Set_LocalRotation(*value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_LocalRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_LocalScale of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Get_LocalScale00
static int tolua_Singularity_scripting_Singularity_Components_Transform_Get_LocalScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_LocalScale'", NULL);
#endif
  {
   Vector3& tolua_ret = (Vector3&)  self->Get_LocalScale();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Vector3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_LocalScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_LocalScale of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Set_LocalScale00
static int tolua_Singularity_scripting_Singularity_Components_Transform_Set_LocalScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  Vector3* value = ((Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_LocalScale'", NULL);
#endif
  {
   self->Set_LocalScale(*value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_LocalScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_LocalToWorldMatrix of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Get_LocalToWorldMatrix00
static int tolua_Singularity_scripting_Singularity_Components_Transform_Get_LocalToWorldMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_LocalToWorldMatrix'", NULL);
#endif
  {
   Matrix tolua_ret = (Matrix)  self->Get_LocalToWorldMatrix();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Matrix)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Matrix");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Matrix));
     tolua_pushusertype(tolua_S,tolua_obj,"Matrix");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_LocalToWorldMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_new00
static int tolua_Singularity_scripting_Singularity_Components_Transform_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Components::Transform* tolua_ret = (Singularity::Components::Transform*)  Mtolua_new((Singularity::Components::Transform)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Components::Transform");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_new00_local
static int tolua_Singularity_scripting_Singularity_Components_Transform_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Components::Transform* tolua_ret = (Singularity::Components::Transform*)  Mtolua_new((Singularity::Components::Transform)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Components::Transform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_delete00
static int tolua_Singularity_scripting_Singularity_Components_Transform_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Reset of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Reset00
static int tolua_Singularity_scripting_Singularity_Components_Transform_Reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Reset'", NULL);
#endif
  {
   self->Reset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Scale of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Scale00
static int tolua_Singularity_scripting_Singularity_Components_Transform_Scale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  const Vector3* value = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
  Singularity::Components::Space space = ((Singularity::Components::Space) (int)  tolua_tonumber(tolua_S,3,Space::Self));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Scale'", NULL);
#endif
  {
   self->Scale(*value,space);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Scale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Scale of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Scale01
static int tolua_Singularity_scripting_Singularity_Components_Transform_Scale01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  const float x = ((const float)  tolua_tonumber(tolua_S,2,0));
  const float y = ((const float)  tolua_tonumber(tolua_S,3,0));
  const float z = ((const float)  tolua_tonumber(tolua_S,4,0));
  Singularity::Components::Space space = ((Singularity::Components::Space) (int)  tolua_tonumber(tolua_S,5,Space::Self));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Scale'", NULL);
#endif
  {
   self->Scale(x,y,z,space);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Components_Transform_Scale00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Translate of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Translate00
static int tolua_Singularity_scripting_Singularity_Components_Transform_Translate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  const Vector3* value = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
  Singularity::Components::Space space = ((Singularity::Components::Space) (int)  tolua_tonumber(tolua_S,3,Space::Self));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Translate'", NULL);
#endif
  {
   self->Translate(*value,space);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Translate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Translate of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Translate01
static int tolua_Singularity_scripting_Singularity_Components_Transform_Translate01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  const float x = ((const float)  tolua_tonumber(tolua_S,2,0));
  const float y = ((const float)  tolua_tonumber(tolua_S,3,0));
  const float z = ((const float)  tolua_tonumber(tolua_S,4,0));
  Singularity::Components::Space space = ((Singularity::Components::Space) (int)  tolua_tonumber(tolua_S,5,Space::Self));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Translate'", NULL);
#endif
  {
   self->Translate(x,y,z,space);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Components_Transform_Translate00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Rotate of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Rotate00
static int tolua_Singularity_scripting_Singularity_Components_Transform_Rotate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  const Vector3* value = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
  Singularity::Components::Space space = ((Singularity::Components::Space) (int)  tolua_tonumber(tolua_S,3,Space::Self));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Rotate'", NULL);
#endif
  {
   self->Rotate(*value,space);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Rotate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Rotate of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Rotate01
static int tolua_Singularity_scripting_Singularity_Components_Transform_Rotate01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  const float xAngle = ((const float)  tolua_tonumber(tolua_S,2,0));
  const float yAngle = ((const float)  tolua_tonumber(tolua_S,3,0));
  float zAngle = ((float)  tolua_tonumber(tolua_S,4,0));
  Singularity::Components::Space space = ((Singularity::Components::Space) (int)  tolua_tonumber(tolua_S,5,Space::Self));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Rotate'", NULL);
#endif
  {
   self->Rotate(xAngle,yAngle,zAngle,space);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Components_Transform_Rotate00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Rotate of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Rotate02
static int tolua_Singularity_scripting_Singularity_Components_Transform_Rotate02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  const Vector3* axis = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
  const float angle = ((const float)  tolua_tonumber(tolua_S,3,0));
  Singularity::Components::Space space = ((Singularity::Components::Space) (int)  tolua_tonumber(tolua_S,4,Space::Self));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Rotate'", NULL);
#endif
  {
   self->Rotate(*axis,angle,space);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Components_Transform_Rotate01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Rotate of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_Rotate03
static int tolua_Singularity_scripting_Singularity_Components_Transform_Rotate03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Quaternion",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  const Quaternion* angle = ((const Quaternion*)  tolua_tousertype(tolua_S,2,0));
  Singularity::Components::Space space = ((Singularity::Components::Space) (int)  tolua_tonumber(tolua_S,3,Space::Self));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Rotate'", NULL);
#endif
  {
   self->Rotate(*angle,space);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Components_Transform_Rotate02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: RotateAround of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_RotateAround00
static int tolua_Singularity_scripting_Singularity_Components_Transform_RotateAround00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const Vector3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  const Vector3* point = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
  const Vector3* axis = ((const Vector3*)  tolua_tousertype(tolua_S,3,0));
  const float angle = ((const float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RotateAround'", NULL);
#endif
  {
   self->RotateAround(*point,*axis,angle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RotateAround'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RotateAround of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_RotateAround01
static int tolua_Singularity_scripting_Singularity_Components_Transform_RotateAround01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const Quaternion",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  const Vector3* point = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
  const Quaternion* rotation = ((const Quaternion*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RotateAround'", NULL);
#endif
  {
   self->RotateAround(*point,*rotation);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Components_Transform_RotateAround00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: LookAt of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_LookAt00
static int tolua_Singularity_scripting_Singularity_Components_Transform_LookAt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  const Vector3* target = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LookAt'", NULL);
#endif
  {
   self->LookAt(*target);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LookAt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LookAt of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_LookAt01
static int tolua_Singularity_scripting_Singularity_Components_Transform_LookAt01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  const Vector3* target = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
  Vector3 worldUp = *((Vector3*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LookAt'", NULL);
#endif
  {
   self->LookAt(*target,worldUp);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Components_Transform_LookAt00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: LookAt of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_LookAt02
static int tolua_Singularity_scripting_Singularity_Components_Transform_LookAt02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Components::Transform* target = ((Singularity::Components::Transform*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LookAt'", NULL);
#endif
  {
   self->LookAt(target);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Components_Transform_LookAt01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: LookAt of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_LookAt03
static int tolua_Singularity_scripting_Singularity_Components_Transform_LookAt03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Components::Transform* target = ((Singularity::Components::Transform*)  tolua_tousertype(tolua_S,2,0));
  Vector3 worldUp = *((Vector3*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LookAt'", NULL);
#endif
  {
   self->LookAt(target,worldUp);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Components_Transform_LookAt02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Changed of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Components__Transform_Changed
static int tolua_get_Singularity__Components__Transform_Changed(lua_State* tolua_S)
{
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Changed'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Changed,"Singularity::DelegateHandler");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Changed of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Components__Transform_Changed
static int tolua_set_Singularity__Components__Transform_Changed(lua_State* tolua_S)
{
  Singularity::Components::Transform* self = (Singularity::Components::Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Changed'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::DelegateHandler",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Changed = *((Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: RotationToEuler of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_RotationToEuler00
static int tolua_Singularity_scripting_Singularity_Components_Transform_RotationToEuler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Quaternion",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Quaternion rotation = *((Quaternion*)  tolua_tousertype(tolua_S,2,0));
  {
   Vector3 tolua_ret = (Vector3)  Singularity::Components::Transform::RotationToEuler(rotation);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RotationToEuler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: EulerToRotation of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_EulerToRotation00
static int tolua_Singularity_scripting_Singularity_Components_Transform_EulerToRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Vector3 euler = *((Vector3*)  tolua_tousertype(tolua_S,2,0));
  {
   Quaternion tolua_ret = (Quaternion)  Singularity::Components::Transform::EulerToRotation(euler);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Quaternion)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Quaternion");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Quaternion));
     tolua_pushusertype(tolua_S,tolua_obj,"Quaternion");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EulerToRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AngleTo of class  Singularity::Components::Transform */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Transform_AngleTo00
static int tolua_Singularity_scripting_Singularity_Components_Transform_AngleTo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Components::Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Vector3 from = *((const Vector3*)  tolua_tousertype(tolua_S,2,0));
  const Vector3 location = *((const Vector3*)  tolua_tousertype(tolua_S,3,0));
  {
   Vector3 tolua_ret = (Vector3)  Singularity::Components::Transform::AngleTo(from,location);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AngleTo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_IsActive of class  Singularity::Components::Scene */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Scene_Get_IsActive00
static int tolua_Singularity_scripting_Singularity_Components_Scene_Get_IsActive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Components::Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Components::Scene* self = (const Singularity::Components::Scene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_IsActive'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->Get_IsActive();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_IsActive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Components::Scene */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Scene_delete00
static int tolua_Singularity_scripting_Singularity_Components_Scene_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Scene* self = (Singularity::Components::Scene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Activate of class  Singularity::Components::Scene */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Scene_Activate00
static int tolua_Singularity_scripting_Singularity_Components_Scene_Activate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Scene* self = (Singularity::Components::Scene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Activate'", NULL);
#endif
  {
   self->Activate();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Activate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Deactivate of class  Singularity::Components::Scene */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Scene_Deactivate00
static int tolua_Singularity_scripting_Singularity_Components_Scene_Deactivate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Scene* self = (Singularity::Components::Scene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Deactivate'", NULL);
#endif
  {
   self->Deactivate();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Deactivate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  Singularity::Components::Scene */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Scene_Clear00
static int tolua_Singularity_scripting_Singularity_Components_Scene_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Scene* self = (Singularity::Components::Scene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Save of class  Singularity::Components::Scene */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Scene_Save00
static int tolua_Singularity_scripting_Singularity_Components_Scene_Save00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Scene",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Scene* self = (Singularity::Components::Scene*)  tolua_tousertype(tolua_S,1,0);
  std::string path = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Save'", NULL);
#endif
  {
   self->Save(path);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Save'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Open of class  Singularity::Components::Scene */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Scene_Open00
static int tolua_Singularity_scripting_Singularity_Components_Scene_Open00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Components::Scene",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Components::Scene* self = (Singularity::Components::Scene*)  tolua_tousertype(tolua_S,1,0);
  std::string path = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Open'", NULL);
#endif
  {
   self->Open(path);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Open'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  Singularity::Components::Scene */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Scene_Create00
static int tolua_Singularity_scripting_Singularity_Components_Scene_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Components::Scene",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int capacity = ((int)  tolua_tonumber(tolua_S,2,SINGULARITY_MAX_GAMEOBJECTS));
  bool active = ((bool)  tolua_toboolean(tolua_S,3,true));
  {
   Singularity::Components::Scene* tolua_ret = (Singularity::Components::Scene*)  Singularity::Components::Scene::Create(capacity,active);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Components::Scene");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Current of class  Singularity::Components::Scene */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Components_Scene_Get_Current00
static int tolua_Singularity_scripting_Singularity_Components_Scene_Get_Current00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Components::Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Components::Scene* tolua_ret = (Singularity::Components::Scene*)  Singularity::Components::Scene::Get_Current();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Components::Scene");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Current'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Game */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Game_new00
static int tolua_Singularity_scripting_Singularity_Game_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Game",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Game* tolua_ret = (Singularity::Game*)  Mtolua_new((Singularity::Game)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Game");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Game */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Game_new00_local
static int tolua_Singularity_scripting_Singularity_Game_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Game",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Game* tolua_ret = (Singularity::Game*)  Mtolua_new((Singularity::Game)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Game");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Game */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Game_delete00
static int tolua_Singularity_scripting_Singularity_Game_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Game",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Game* self = (Singularity::Game*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Run of class  Singularity::Game */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Game_Run00
static int tolua_Singularity_scripting_Singularity_Game_Run00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Game",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Game* self = (Singularity::Game*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Run'", NULL);
#endif
  {
   self->Run();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Run'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Exit of class  Singularity::Game */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Game_Exit00
static int tolua_Singularity_scripting_Singularity_Game_Exit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Game",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Game::Exit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Exit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetResolution of class  Singularity::Graphics::Screen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Screen_SetResolution00
static int tolua_Singularity_scripting_Singularity_Graphics_Screen_SetResolution00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Screen",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const unsigned width = ((const unsigned)  tolua_tonumber(tolua_S,2,0));
  const unsigned height = ((const unsigned)  tolua_tonumber(tolua_S,3,0));
  const bool fullscreen = ((const bool)  tolua_toboolean(tolua_S,4,0));
  {
   Singularity::Graphics::Screen::SetResolution(width,height,fullscreen);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetResolution'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetResolution of class  Singularity::Graphics::Screen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Screen_GetResolution00
static int tolua_Singularity_scripting_Singularity_Graphics_Screen_GetResolution00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Screen",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned width = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  unsigned height = ((unsigned)  tolua_tonumber(tolua_S,3,0));
  {
   Singularity::Graphics::Screen::GetResolution(width,height);
   tolua_pushnumber(tolua_S,(lua_Number)width);
   tolua_pushnumber(tolua_S,(lua_Number)height);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetResolution'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSize of class  Singularity::Graphics::Screen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Screen_SetSize00
static int tolua_Singularity_scripting_Singularity_Graphics_Screen_SetSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Screen",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const unsigned x = ((const unsigned)  tolua_tonumber(tolua_S,2,0));
  const unsigned y = ((const unsigned)  tolua_tonumber(tolua_S,3,0));
  const unsigned width = ((const unsigned)  tolua_tonumber(tolua_S,4,0));
  const unsigned height = ((const unsigned)  tolua_tonumber(tolua_S,5,0));
  {
   Singularity::Graphics::Screen::SetSize(x,y,width,height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSize of class  Singularity::Graphics::Screen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Screen_GetSize00
static int tolua_Singularity_scripting_Singularity_Graphics_Screen_GetSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Screen",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned x = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  unsigned y = ((unsigned)  tolua_tonumber(tolua_S,3,0));
  unsigned width = ((unsigned)  tolua_tonumber(tolua_S,4,0));
  unsigned height = ((unsigned)  tolua_tonumber(tolua_S,5,0));
  {
   Singularity::Graphics::Screen::GetSize(x,y,width,height);
   tolua_pushnumber(tolua_S,(lua_Number)x);
   tolua_pushnumber(tolua_S,(lua_Number)y);
   tolua_pushnumber(tolua_S,(lua_Number)width);
   tolua_pushnumber(tolua_S,(lua_Number)height);
  }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTitle of class  Singularity::Graphics::Screen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Screen_SetTitle00
static int tolua_Singularity_scripting_Singularity_Graphics_Screen_SetTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Screen",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string title = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Graphics::Screen::SetTitle(title);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetResolution of class  Singularity::Graphics::Screen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Screen_SetResolution01
static int tolua_Singularity_scripting_Singularity_Graphics_Screen_SetResolution01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Screen",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const unsigned width = ((const unsigned)  tolua_tonumber(tolua_S,2,0));
  const unsigned height = ((const unsigned)  tolua_tonumber(tolua_S,3,0));
  const bool fullscreen = ((const bool)  tolua_toboolean(tolua_S,4,0));
  {
   Singularity::Graphics::Screen::SetResolution(width,height,fullscreen);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Screen_SetResolution00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetResolution of class  Singularity::Graphics::Screen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Screen_GetResolution01
static int tolua_Singularity_scripting_Singularity_Graphics_Screen_GetResolution01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Screen",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  unsigned width = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  unsigned height = ((unsigned)  tolua_tonumber(tolua_S,3,0));
  {
   Singularity::Graphics::Screen::GetResolution(width,height);
   tolua_pushnumber(tolua_S,(lua_Number)width);
   tolua_pushnumber(tolua_S,(lua_Number)height);
  }
 }
 return 2;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Screen_GetResolution00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSize of class  Singularity::Graphics::Screen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Screen_SetSize01
static int tolua_Singularity_scripting_Singularity_Graphics_Screen_SetSize01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Screen",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const unsigned x = ((const unsigned)  tolua_tonumber(tolua_S,2,0));
  const unsigned y = ((const unsigned)  tolua_tonumber(tolua_S,3,0));
  const unsigned width = ((const unsigned)  tolua_tonumber(tolua_S,4,0));
  const unsigned height = ((const unsigned)  tolua_tonumber(tolua_S,5,0));
  {
   Singularity::Graphics::Screen::SetSize(x,y,width,height);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Screen_SetSize00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSize of class  Singularity::Graphics::Screen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Screen_GetSize01
static int tolua_Singularity_scripting_Singularity_Graphics_Screen_GetSize01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Screen",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  unsigned x = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  unsigned y = ((unsigned)  tolua_tonumber(tolua_S,3,0));
  unsigned width = ((unsigned)  tolua_tonumber(tolua_S,4,0));
  unsigned height = ((unsigned)  tolua_tonumber(tolua_S,5,0));
  {
   Singularity::Graphics::Screen::GetSize(x,y,width,height);
   tolua_pushnumber(tolua_S,(lua_Number)x);
   tolua_pushnumber(tolua_S,(lua_Number)y);
   tolua_pushnumber(tolua_S,(lua_Number)width);
   tolua_pushnumber(tolua_S,(lua_Number)height);
  }
 }
 return 4;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Screen_GetSize00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTitle of class  Singularity::Graphics::Screen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Screen_SetTitle01
static int tolua_Singularity_scripting_Singularity_Graphics_Screen_SetTitle01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Screen",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string title = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Graphics::Screen::SetTitle(title);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Screen_SetTitle00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Width of class  Singularity::Graphics::Texture2D */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Texture2D_Get_Width00
static int tolua_Singularity_scripting_Singularity_Graphics_Texture2D_Get_Width00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Texture2D* self = (const Singularity::Graphics::Texture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Width'", NULL);
#endif
  {
   const unsigned tolua_ret = (const unsigned)  self->Get_Width();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Height of class  Singularity::Graphics::Texture2D */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Texture2D_Get_Height00
static int tolua_Singularity_scripting_Singularity_Graphics_Texture2D_Get_Height00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Texture2D* self = (const Singularity::Graphics::Texture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Height'", NULL);
#endif
  {
   const unsigned tolua_ret = (const unsigned)  self->Get_Height();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Height'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_MipLevels of class  Singularity::Graphics::Texture2D */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Texture2D_Get_MipLevels00
static int tolua_Singularity_scripting_Singularity_Graphics_Texture2D_Get_MipLevels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Texture2D* self = (const Singularity::Graphics::Texture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_MipLevels'", NULL);
#endif
  {
   const unsigned tolua_ret = (const unsigned)  self->Get_MipLevels();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_MipLevels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Graphics::Texture2D */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Texture2D_new00
static int tolua_Singularity_scripting_Singularity_Graphics_Texture2D_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Texture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned width = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  unsigned height = ((unsigned)  tolua_tonumber(tolua_S,3,0));
  bool mipmap = ((bool)  tolua_toboolean(tolua_S,4,true));
  {
   Singularity::Graphics::Texture2D* tolua_ret = (Singularity::Graphics::Texture2D*)  Mtolua_new((Singularity::Graphics::Texture2D)(width,height,mipmap));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Texture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Graphics::Texture2D */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Texture2D_new00_local
static int tolua_Singularity_scripting_Singularity_Graphics_Texture2D_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Texture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned width = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  unsigned height = ((unsigned)  tolua_tonumber(tolua_S,3,0));
  bool mipmap = ((bool)  tolua_toboolean(tolua_S,4,true));
  {
   Singularity::Graphics::Texture2D* tolua_ret = (Singularity::Graphics::Texture2D*)  Mtolua_new((Singularity::Graphics::Texture2D)(width,height,mipmap));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Texture2D");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Graphics::Texture2D */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Texture2D_delete00
static int tolua_Singularity_scripting_Singularity_Graphics_Texture2D_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Texture2D* self = (Singularity::Graphics::Texture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPixel of class  Singularity::Graphics::Texture2D */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Texture2D_SetPixel00
static int tolua_Singularity_scripting_Singularity_Graphics_Texture2D_SetPixel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Texture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Texture2D* self = (Singularity::Graphics::Texture2D*)  tolua_tousertype(tolua_S,1,0);
  unsigned x = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  unsigned y = ((unsigned)  tolua_tonumber(tolua_S,3,0));
  Color color = *((Color*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPixel'", NULL);
#endif
  {
   self->SetPixel(x,y,color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPixel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPixels of class  Singularity::Graphics::Texture2D */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Texture2D_SetPixels00
static int tolua_Singularity_scripting_Singularity_Graphics_Texture2D_SetPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Texture2D",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Texture2D* self = (Singularity::Graphics::Texture2D*)  tolua_tousertype(tolua_S,1,0);
  void* buffer = ((void*)  tolua_touserdata(tolua_S,2,0));
  int size = ((int)  tolua_tonumber(tolua_S,3,0));
  int level = ((int)  tolua_tonumber(tolua_S,4,1));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPixels'", NULL);
#endif
  {
   self->SetPixels(buffer,size,level);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPixel of class  Singularity::Graphics::Texture2D */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Texture2D_GetPixel00
static int tolua_Singularity_scripting_Singularity_Graphics_Texture2D_GetPixel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Texture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Texture2D* self = (Singularity::Graphics::Texture2D*)  tolua_tousertype(tolua_S,1,0);
  unsigned x = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  unsigned y = ((unsigned)  tolua_tonumber(tolua_S,3,0));
  bool force = ((bool)  tolua_toboolean(tolua_S,4,false));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPixel'", NULL);
#endif
  {
   Color tolua_ret = (Color)  self->GetPixel(x,y,force);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Color)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Color");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Color));
     tolua_pushusertype(tolua_S,tolua_obj,"Color");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPixel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Apply of class  Singularity::Graphics::Texture2D */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Texture2D_Apply00
static int tolua_Singularity_scripting_Singularity_Graphics_Texture2D_Apply00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Texture2D* self = (Singularity::Graphics::Texture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Apply'", NULL);
#endif
  {
   self->Apply();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Apply'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadTextureFromFile of class  Singularity::Graphics::Texture2D */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Texture2D_LoadTextureFromFile00
static int tolua_Singularity_scripting_Singularity_Graphics_Texture2D_LoadTextureFromFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Texture2D",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string path = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Graphics::Texture2D* tolua_ret = (Singularity::Graphics::Texture2D*)  Singularity::Graphics::Texture2D::LoadTextureFromFile(path);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Texture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadTextureFromFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Orthographic of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Orthographic00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Orthographic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Camera* self = (const Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Orthographic'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->Get_Orthographic();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Orthographic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Orthographic of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_Orthographic00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_Orthographic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Camera* self = (Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
  const bool value = ((const bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Orthographic'", NULL);
#endif
  {
   self->Set_Orthographic(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Orthographic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_BackgroundColor of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_BackgroundColor00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_BackgroundColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Camera* self = (const Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_BackgroundColor'", NULL);
#endif
  {
   const Color tolua_ret = (const Color)  self->Get_BackgroundColor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Color)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"const Color");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(const Color));
     tolua_pushusertype(tolua_S,tolua_obj,"const Color");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_BackgroundColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_BackgroundColor of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_BackgroundColor00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_BackgroundColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Camera",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Camera* self = (Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
  Color value = *((Color*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_BackgroundColor'", NULL);
#endif
  {
   self->Set_BackgroundColor(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_BackgroundColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_FieldOfView of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_FieldOfView00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_FieldOfView00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Camera* self = (const Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_FieldOfView'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->Get_FieldOfView();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_FieldOfView'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_FieldOfView of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_FieldOfView00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_FieldOfView00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Camera* self = (Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
  const float value = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_FieldOfView'", NULL);
#endif
  {
   self->Set_FieldOfView(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_FieldOfView'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_NearClippingPlane of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_NearClippingPlane00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_NearClippingPlane00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Camera* self = (const Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_NearClippingPlane'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->Get_NearClippingPlane();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_NearClippingPlane'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_NearClippingPlane of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_NearClippingPlane00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_NearClippingPlane00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Camera* self = (Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
  const float value = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_NearClippingPlane'", NULL);
#endif
  {
   self->Set_NearClippingPlane(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_NearClippingPlane'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_FarClippingPlane of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_FarClippingPlane00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_FarClippingPlane00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Camera* self = (const Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_FarClippingPlane'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->Get_FarClippingPlane();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_FarClippingPlane'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_FarClippingPlane of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_FarClippingPlane00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_FarClippingPlane00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Camera* self = (Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
  const float value = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_FarClippingPlane'", NULL);
#endif
  {
   self->Set_FarClippingPlane(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_FarClippingPlane'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Aspect of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Aspect00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Aspect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Camera* self = (const Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Aspect'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->Get_Aspect();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Aspect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Aspect of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_Aspect00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_Aspect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Camera* self = (Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
  const float value = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Aspect'", NULL);
#endif
  {
   self->Set_Aspect(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Aspect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Width of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Width00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Width00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Camera* self = (const Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Width'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->Get_Width();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Height of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Height00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Height00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Camera* self = (const Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Height'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->Get_Height();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Height'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Forward of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Forward00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Forward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Camera* self = (Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Forward'", NULL);
#endif
  {
   Vector3 tolua_ret = (Vector3)  self->Get_Forward();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Forward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Up of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Up00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Up00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Camera* self = (Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Up'", NULL);
#endif
  {
   Vector3 tolua_ret = (Vector3)  self->Get_Up();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Up'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Right of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Right00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Right00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Camera* self = (Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Right'", NULL);
#endif
  {
   Vector3 tolua_ret = (Vector3)  self->Get_Right();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Right'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_View of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_View00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_View00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Camera* self = (Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_View'", NULL);
#endif
  {
   Matrix tolua_ret = (Matrix)  self->Get_View();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Matrix)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Matrix");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Matrix));
     tolua_pushusertype(tolua_S,tolua_obj,"Matrix");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_View'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Projection of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Projection00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Projection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Camera* self = (Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Projection'", NULL);
#endif
  {
   Matrix tolua_ret = (Matrix)  self->Get_Projection();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Matrix)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Matrix");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Matrix));
     tolua_pushusertype(tolua_S,tolua_obj,"Matrix");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Projection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_new00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Graphics::Camera* tolua_ret = (Singularity::Graphics::Camera*)  Mtolua_new((Singularity::Graphics::Camera)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Camera");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_new00_local
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Graphics::Camera* tolua_ret = (Singularity::Graphics::Camera*)  Mtolua_new((Singularity::Graphics::Camera)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Camera");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_delete00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Camera* self = (Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Activate of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Activate00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Activate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Camera* self = (Singularity::Graphics::Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Activate'", NULL);
#endif
  {
   self->Activate();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Activate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Current of class  Singularity::Graphics::Camera */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Current00
static int tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Current00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Graphics::Camera* tolua_ret = (Singularity::Graphics::Camera*)  Singularity::Graphics::Camera::Get_Current();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Camera");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Current'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Type of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_Get_Type00
static int tolua_Singularity_scripting_Singularity_Graphics_Light_Get_Type00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Light* self = (const Singularity::Graphics::Light*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Type'", NULL);
#endif
  {
   const Singularity::Graphics::LightType tolua_ret = (const Singularity::Graphics::LightType)  self->Get_Type();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Type'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Type of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_Set_Type00
static int tolua_Singularity_scripting_Singularity_Graphics_Light_Set_Type00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Light* self = (Singularity::Graphics::Light*)  tolua_tousertype(tolua_S,1,0);
  const Singularity::Graphics::LightType value = ((const Singularity::Graphics::LightType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Type'", NULL);
#endif
  {
   self->Set_Type(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Type'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Color of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_Get_Color00
static int tolua_Singularity_scripting_Singularity_Graphics_Light_Get_Color00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Light* self = (const Singularity::Graphics::Light*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Color'", NULL);
#endif
  {
   const Color tolua_ret = (const Color)  self->Get_Color();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Color)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"const Color");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(const Color));
     tolua_pushusertype(tolua_S,tolua_obj,"const Color");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Color of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_Set_Color00
static int tolua_Singularity_scripting_Singularity_Graphics_Light_Set_Color00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Light",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Light* self = (Singularity::Graphics::Light*)  tolua_tousertype(tolua_S,1,0);
  Color value = *((Color*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Color'", NULL);
#endif
  {
   self->Set_Color(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Falloff of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_Get_Falloff00
static int tolua_Singularity_scripting_Singularity_Graphics_Light_Get_Falloff00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Light* self = (const Singularity::Graphics::Light*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Falloff'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->Get_Falloff();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Falloff'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Falloff of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_Set_Falloff00
static int tolua_Singularity_scripting_Singularity_Graphics_Light_Set_Falloff00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Light* self = (Singularity::Graphics::Light*)  tolua_tousertype(tolua_S,1,0);
  const float value = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Falloff'", NULL);
#endif
  {
   self->Set_Falloff(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Falloff'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Range of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_Get_Range00
static int tolua_Singularity_scripting_Singularity_Graphics_Light_Get_Range00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Light* self = (const Singularity::Graphics::Light*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Range'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->Get_Range();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Range'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Range of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_Set_Range00
static int tolua_Singularity_scripting_Singularity_Graphics_Light_Set_Range00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Light* self = (Singularity::Graphics::Light*)  tolua_tousertype(tolua_S,1,0);
  const float value = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Range'", NULL);
#endif
  {
   self->Set_Range(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Range'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Intensity of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_Get_Intensity00
static int tolua_Singularity_scripting_Singularity_Graphics_Light_Get_Intensity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Light* self = (const Singularity::Graphics::Light*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Intensity'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->Get_Intensity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Intensity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Intensity of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_Set_Intensity00
static int tolua_Singularity_scripting_Singularity_Graphics_Light_Set_Intensity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Light* self = (Singularity::Graphics::Light*)  tolua_tousertype(tolua_S,1,0);
  const float value = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Intensity'", NULL);
#endif
  {
   self->Set_Intensity(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Intensity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_new00
static int tolua_Singularity_scripting_Singularity_Graphics_Light_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::LightType type = ((Singularity::Graphics::LightType) (int)  tolua_tonumber(tolua_S,2,LightType::Point));
  {
   Singularity::Graphics::Light* tolua_ret = (Singularity::Graphics::Light*)  Mtolua_new((Singularity::Graphics::Light)(type));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Light");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_new00_local
static int tolua_Singularity_scripting_Singularity_Graphics_Light_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::LightType type = ((Singularity::Graphics::LightType) (int)  tolua_tonumber(tolua_S,2,LightType::Point));
  {
   Singularity::Graphics::Light* tolua_ret = (Singularity::Graphics::Light*)  Mtolua_new((Singularity::Graphics::Light)(type));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Light");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_new01
static int tolua_Singularity_scripting_Singularity_Graphics_Light_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Graphics::LightType type = ((Singularity::Graphics::LightType) (int)  tolua_tonumber(tolua_S,2,0));
  Color color = *((Color*)  tolua_tousertype(tolua_S,3,0));
  {
   Singularity::Graphics::Light* tolua_ret = (Singularity::Graphics::Light*)  Mtolua_new((Singularity::Graphics::Light)(type,color));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Light");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Light_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_new01_local
static int tolua_Singularity_scripting_Singularity_Graphics_Light_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Graphics::LightType type = ((Singularity::Graphics::LightType) (int)  tolua_tonumber(tolua_S,2,0));
  Color color = *((Color*)  tolua_tousertype(tolua_S,3,0));
  {
   Singularity::Graphics::Light* tolua_ret = (Singularity::Graphics::Light*)  Mtolua_new((Singularity::Graphics::Light)(type,color));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Light");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Light_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_new02
static int tolua_Singularity_scripting_Singularity_Graphics_Light_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Graphics::LightType type = ((Singularity::Graphics::LightType) (int)  tolua_tonumber(tolua_S,3,LightType::Point));
  {
   Singularity::Graphics::Light* tolua_ret = (Singularity::Graphics::Light*)  Mtolua_new((Singularity::Graphics::Light)(name,type));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Light");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Light_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_new02_local
static int tolua_Singularity_scripting_Singularity_Graphics_Light_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Graphics::LightType type = ((Singularity::Graphics::LightType) (int)  tolua_tonumber(tolua_S,3,LightType::Point));
  {
   Singularity::Graphics::Light* tolua_ret = (Singularity::Graphics::Light*)  Mtolua_new((Singularity::Graphics::Light)(name,type));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Light");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Light_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_new03
static int tolua_Singularity_scripting_Singularity_Graphics_Light_new03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Graphics::LightType type = ((Singularity::Graphics::LightType) (int)  tolua_tonumber(tolua_S,3,0));
  Color color = *((Color*)  tolua_tousertype(tolua_S,4,0));
  {
   Singularity::Graphics::Light* tolua_ret = (Singularity::Graphics::Light*)  Mtolua_new((Singularity::Graphics::Light)(name,type,color));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Light");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Light_new02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_new03_local
static int tolua_Singularity_scripting_Singularity_Graphics_Light_new03_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Graphics::LightType type = ((Singularity::Graphics::LightType) (int)  tolua_tonumber(tolua_S,3,0));
  Color color = *((Color*)  tolua_tousertype(tolua_S,4,0));
  {
   Singularity::Graphics::Light* tolua_ret = (Singularity::Graphics::Light*)  Mtolua_new((Singularity::Graphics::Light)(name,type,color));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Light");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Light_new02_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Graphics::Light */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Light_delete00
static int tolua_Singularity_scripting_Singularity_Graphics_Light_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Light",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Light* self = (Singularity::Graphics::Light*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_PassCount of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_Get_PassCount00
static int tolua_Singularity_scripting_Singularity_Graphics_Material_Get_PassCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Material* self = (const Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_PassCount'", NULL);
#endif
  {
   const unsigned tolua_ret = (const unsigned)  self->Get_PassCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_PassCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Pass of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_Set_Pass00
static int tolua_Singularity_scripting_Singularity_Graphics_Material_Set_Pass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Material* self = (Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
  const unsigned value = ((const unsigned)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Pass'", NULL);
#endif
  {
   self->Set_Pass(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Pass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Color of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_Get_Color00
static int tolua_Singularity_scripting_Singularity_Graphics_Material_Get_Color00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Material* self = (const Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Color'", NULL);
#endif
  {
   const Color tolua_ret = (const Color)  self->Get_Color();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Color)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"const Color");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(const Color));
     tolua_pushusertype(tolua_S,tolua_obj,"const Color");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Color of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_Set_Color00
static int tolua_Singularity_scripting_Singularity_Graphics_Material_Set_Color00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Material* self = (Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
  const Color value = *((const Color*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Color'", NULL);
#endif
  {
   self->Set_Color(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_MainTexture of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_Get_MainTexture00
static int tolua_Singularity_scripting_Singularity_Graphics_Material_Get_MainTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Material* self = (const Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_MainTexture'", NULL);
#endif
  {
   const Singularity::Graphics::Texture2D* tolua_ret = (const Singularity::Graphics::Texture2D*)  self->Get_MainTexture();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const Singularity::Graphics::Texture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_MainTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_MainTexture of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_Set_MainTexture00
static int tolua_Singularity_scripting_Singularity_Graphics_Material_Set_MainTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Graphics::Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Material* self = (Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Graphics::Texture2D* value = ((Singularity::Graphics::Texture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_MainTexture'", NULL);
#endif
  {
   self->Set_MainTexture(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_MainTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_delete00
static int tolua_Singularity_scripting_Singularity_Graphics_Material_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Material* self = (Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVariable of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable00
static int tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Graphics::Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Material* self = (Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Graphics::Texture2D* value = ((Singularity::Graphics::Texture2D*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVariable'", NULL);
#endif
  {
   self->SetVariable(key,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetVariable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVariable of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable01
static int tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Graphics::Material* self = (Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Color value = *((Color*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVariable'", NULL);
#endif
  {
   self->SetVariable(key,value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVariable of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable02
static int tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Graphics::Material* self = (Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  float value = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVariable'", NULL);
#endif
  {
   self->SetVariable(key,value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVariable of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable03
static int tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Graphics::Material* self = (Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  int value = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVariable'", NULL);
#endif
  {
   self->SetVariable(key,value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVariable of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable04
static int tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Graphics::Material* self = (Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Vector2 value = *((Vector2*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVariable'", NULL);
#endif
  {
   self->SetVariable(key,value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVariable of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable05
static int tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable05(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Graphics::Material* self = (Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Vector3 value = *((Vector3*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVariable'", NULL);
#endif
  {
   self->SetVariable(key,value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable04(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVariable of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable06
static int tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable06(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector4",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Graphics::Material* self = (Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Vector4 value = *((Vector4*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVariable'", NULL);
#endif
  {
   self->SetVariable(key,value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable05(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVariable of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable07
static int tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable07(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Quaternion",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Graphics::Material* self = (Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Quaternion value = *((Quaternion*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVariable'", NULL);
#endif
  {
   self->SetVariable(key,value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable06(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVariable of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable08
static int tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable08(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Matrix",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Graphics::Material* self = (Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Matrix value = *((Matrix*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVariable'", NULL);
#endif
  {
   self->SetVariable(key,value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable07(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVariable of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable09
static int tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable09(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Graphics::Material* self = (Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  void* data = ((void*)  tolua_touserdata(tolua_S,3,0));
  unsigned count = ((unsigned)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVariable'", NULL);
#endif
  {
   self->SetVariable(key,data,count);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable08(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clone of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_Clone00
static int tolua_Singularity_scripting_Singularity_Graphics_Material_Clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Material* self = (Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clone'", NULL);
#endif
  {
   Singularity::Graphics::Material* tolua_ret = (Singularity::Graphics::Material*)  self->Clone();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Material");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Destroy of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_Destroy00
static int tolua_Singularity_scripting_Singularity_Graphics_Material_Destroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Material* self = (Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Destroy'", NULL);
#endif
  {
   self->Destroy();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Destroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Apply of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_Apply00
static int tolua_Singularity_scripting_Singularity_Graphics_Material_Apply00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Material* self = (Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Apply'", NULL);
#endif
  {
   self->Apply();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Apply'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateBasicMaterial of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_CreateBasicMaterial00
static int tolua_Singularity_scripting_Singularity_Graphics_Material_CreateBasicMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Graphics::Material* tolua_ret = (Singularity::Graphics::Material*)  Singularity::Graphics::Material::CreateBasicMaterial();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Material");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateBasicMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadMaterialFromMemory of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_LoadMaterialFromMemory00
static int tolua_Singularity_scripting_Singularity_Graphics_Material_LoadMaterialFromMemory00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  std::string data = ((std::string)  tolua_tocppstring(tolua_S,3,0));
  bool compile = ((bool)  tolua_toboolean(tolua_S,4,false));
  {
   Singularity::Graphics::Material* tolua_ret = (Singularity::Graphics::Material*)  Singularity::Graphics::Material::LoadMaterialFromMemory(name,data,compile);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Material");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadMaterialFromMemory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadMaterialFromFile of class  Singularity::Graphics::Material */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Material_LoadMaterialFromFile00
static int tolua_Singularity_scripting_Singularity_Graphics_Material_LoadMaterialFromFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string path = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Graphics::Material* tolua_ret = (Singularity::Graphics::Material*)  Singularity::Graphics::Material::LoadMaterialFromFile(path);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Material");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadMaterialFromFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_new00
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Graphics::Mesh* tolua_ret = (Singularity::Graphics::Mesh*)  Mtolua_new((Singularity::Graphics::Mesh)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Mesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_new00_local
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Graphics::Mesh* tolua_ret = (Singularity::Graphics::Mesh*)  Mtolua_new((Singularity::Graphics::Mesh)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Mesh");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_new01
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"VertexBuffer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"IndexBuffer",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  VertexBuffer* vertices = ((VertexBuffer*)  tolua_tousertype(tolua_S,2,0));
  IndexBuffer* indices = ((IndexBuffer*)  tolua_tousertype(tolua_S,3,NULL));
  {
   Singularity::Graphics::Mesh* tolua_ret = (Singularity::Graphics::Mesh*)  Mtolua_new((Singularity::Graphics::Mesh)(vertices,indices));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Mesh");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Mesh_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_new01_local
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"VertexBuffer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"IndexBuffer",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  VertexBuffer* vertices = ((VertexBuffer*)  tolua_tousertype(tolua_S,2,0));
  IndexBuffer* indices = ((IndexBuffer*)  tolua_tousertype(tolua_S,3,NULL));
  {
   Singularity::Graphics::Mesh* tolua_ret = (Singularity::Graphics::Mesh*)  Mtolua_new((Singularity::Graphics::Mesh)(vertices,indices));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Mesh");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_Mesh_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_delete00
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Mesh* self = (Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Bounds of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_Get_Bounds00
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_Get_Bounds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Mesh* self = (const Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Bounds'", NULL);
#endif
  {
   const Bounds tolua_ret = (const Bounds)  self->Get_Bounds();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Bounds)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"const Bounds");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(const Bounds));
     tolua_pushusertype(tolua_S,tolua_obj,"const Bounds");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Bounds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Topology of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_Get_Topology00
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_Get_Topology00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Mesh* self = (const Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Topology'", NULL);
#endif
  {
   PrimitiveTopology tolua_ret = (PrimitiveTopology)  self->Get_Topology();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((PrimitiveTopology)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"PrimitiveTopology");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(PrimitiveTopology));
     tolua_pushusertype(tolua_S,tolua_obj,"PrimitiveTopology");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Topology'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Topology of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_Set_Topology00
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_Set_Topology00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Mesh",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"PrimitiveTopology",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Mesh* self = (Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,1,0);
  PrimitiveTopology value = *((PrimitiveTopology*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Topology'", NULL);
#endif
  {
   self->Set_Topology(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Topology'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_VertexBuffer of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_Get_VertexBuffer00
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_Get_VertexBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Mesh* self = (const Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_VertexBuffer'", NULL);
#endif
  {
   VertexBuffer* tolua_ret = (VertexBuffer*)  self->Get_VertexBuffer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"VertexBuffer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_VertexBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_VertexBuffer of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_Set_VertexBuffer00
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_Set_VertexBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"VertexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Mesh* self = (Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,1,0);
  VertexBuffer* value = ((VertexBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_VertexBuffer'", NULL);
#endif
  {
   self->Set_VertexBuffer(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_VertexBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_IndexBuffer of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_Get_IndexBuffer00
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_Get_IndexBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Mesh* self = (const Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_IndexBuffer'", NULL);
#endif
  {
   IndexBuffer* tolua_ret = (IndexBuffer*)  self->Get_IndexBuffer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"IndexBuffer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_IndexBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_IndexBuffer of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_Set_IndexBuffer00
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_Set_IndexBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"IndexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Mesh* self = (Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,1,0);
  IndexBuffer* value = ((IndexBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_IndexBuffer'", NULL);
#endif
  {
   self->Set_IndexBuffer(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_IndexBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_Clear00
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Mesh* self = (Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clone of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_Clone00
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_Clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Mesh* self = (Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clone'", NULL);
#endif
  {
   Singularity::Graphics::Mesh* tolua_ret = (Singularity::Graphics::Mesh*)  self->Clone();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Mesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RecalculateBounds of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_RecalculateBounds00
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_RecalculateBounds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Mesh* self = (Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RecalculateBounds'", NULL);
#endif
  {
   self->RecalculateBounds();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RecalculateBounds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVertices of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_SetVertices00
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_SetVertices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"VertexDeclaration",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Mesh* self = (Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,1,0);
  VertexDeclaration* declaration = ((VertexDeclaration*)  tolua_tousertype(tolua_S,2,0));
  void* data = ((void*)  tolua_touserdata(tolua_S,3,0));
  unsigned count = ((unsigned)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVertices'", NULL);
#endif
  {
   self->SetVertices(declaration,data,count);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetVertices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetIndices of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_SetIndices00
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_SetIndices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Mesh* self = (Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,1,0);
  unsigned data = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  unsigned count = ((unsigned)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetIndices'", NULL);
#endif
  {
   self->SetIndices(&data,count);
   tolua_pushnumber(tolua_S,(lua_Number)data);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetIndices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreatePrimitive of class  Singularity::Graphics::Mesh */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Mesh_CreatePrimitive00
static int tolua_Singularity_scripting_Singularity_Graphics_Mesh_CreatePrimitive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::PrimitiveType type = ((Singularity::Graphics::PrimitiveType) (int)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Graphics::Mesh* tolua_ret = (Singularity::Graphics::Mesh*)  Singularity::Graphics::Mesh::CreatePrimitive(type);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Mesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreatePrimitive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Graphics::Renderer */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Renderer_delete00
static int tolua_Singularity_scripting_Singularity_Graphics_Renderer_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Renderer* self = (Singularity::Graphics::Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_IsVisible of class  Singularity::Graphics::Renderer */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Renderer_Get_IsVisible00
static int tolua_Singularity_scripting_Singularity_Graphics_Renderer_Get_IsVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Renderer* self = (const Singularity::Graphics::Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_IsVisible'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->Get_IsVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_IsVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Material of class  Singularity::Graphics::Renderer */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Renderer_Get_Material00
static int tolua_Singularity_scripting_Singularity_Graphics_Renderer_Get_Material00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Renderer* self = (const Singularity::Graphics::Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Material'", NULL);
#endif
  {
   Singularity::Graphics::Material* tolua_ret = (Singularity::Graphics::Material*)  self->Get_Material();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Material");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Material'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Material of class  Singularity::Graphics::Renderer */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Renderer_Set_Material00
static int tolua_Singularity_scripting_Singularity_Graphics_Renderer_Set_Material00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Renderer* self = (Singularity::Graphics::Renderer*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Graphics::Material* value = ((Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Material'", NULL);
#endif
  {
   self->Set_Material(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Material'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_IsTiedToCamera of class  Singularity::Graphics::Renderer */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Renderer_Get_IsTiedToCamera00
static int tolua_Singularity_scripting_Singularity_Graphics_Renderer_Get_IsTiedToCamera00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Renderer* self = (const Singularity::Graphics::Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_IsTiedToCamera'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->Get_IsTiedToCamera();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_IsTiedToCamera'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_IsTiedToCamera of class  Singularity::Graphics::Renderer */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Renderer_Set_IsTiedToCamera00
static int tolua_Singularity_scripting_Singularity_Graphics_Renderer_Set_IsTiedToCamera00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Renderer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Renderer* self = (Singularity::Graphics::Renderer*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_IsTiedToCamera'", NULL);
#endif
  {
   self->Set_IsTiedToCamera(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_IsTiedToCamera'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Bounds of class  Singularity::Graphics::Renderer */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Renderer_Get_Bounds00
static int tolua_Singularity_scripting_Singularity_Graphics_Renderer_Get_Bounds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::Renderer* self = (const Singularity::Graphics::Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Bounds'", NULL);
#endif
  {
   const Bounds tolua_ret = (const Bounds)  self->Get_Bounds();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Bounds)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"const Bounds");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(const Bounds));
     tolua_pushusertype(tolua_S,tolua_obj,"const Bounds");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Bounds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RegisterCallback of class  Singularity::Graphics::Renderer */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Renderer_RegisterCallback00
static int tolua_Singularity_scripting_Singularity_Graphics_Renderer_RegisterCallback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Renderer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"RenderCallback",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Renderer* self = (Singularity::Graphics::Renderer*)  tolua_tousertype(tolua_S,1,0);
  RenderCallback value = *((RenderCallback*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RegisterCallback'", NULL);
#endif
  {
   self->RegisterCallback(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RegisterCallback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Graphics::MeshRenderer */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_new00
static int tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::MeshRenderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Graphics::Mesh",1,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Graphics::Material",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Mesh* mesh = ((Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,2,NULL));
  Singularity::Graphics::Material* material = ((Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,3,NULL));
  {
   Singularity::Graphics::MeshRenderer* tolua_ret = (Singularity::Graphics::MeshRenderer*)  Mtolua_new((Singularity::Graphics::MeshRenderer)(mesh,material));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::MeshRenderer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Graphics::MeshRenderer */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_new00_local
static int tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::MeshRenderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Graphics::Mesh",1,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Graphics::Material",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Mesh* mesh = ((Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,2,NULL));
  Singularity::Graphics::Material* material = ((Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,3,NULL));
  {
   Singularity::Graphics::MeshRenderer* tolua_ret = (Singularity::Graphics::MeshRenderer*)  Mtolua_new((Singularity::Graphics::MeshRenderer)(mesh,material));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::MeshRenderer");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Graphics::MeshRenderer */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_new01
static int tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::MeshRenderer",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Graphics::Mesh",1,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Singularity::Graphics::Material",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Graphics::Mesh* mesh = ((Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,3,NULL));
  Singularity::Graphics::Material* material = ((Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,4,NULL));
  {
   Singularity::Graphics::MeshRenderer* tolua_ret = (Singularity::Graphics::MeshRenderer*)  Mtolua_new((Singularity::Graphics::MeshRenderer)(name,mesh,material));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::MeshRenderer");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Graphics::MeshRenderer */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_new01_local
static int tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::MeshRenderer",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Graphics::Mesh",1,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Singularity::Graphics::Material",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Graphics::Mesh* mesh = ((Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,3,NULL));
  Singularity::Graphics::Material* material = ((Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,4,NULL));
  {
   Singularity::Graphics::MeshRenderer* tolua_ret = (Singularity::Graphics::MeshRenderer*)  Mtolua_new((Singularity::Graphics::MeshRenderer)(name,mesh,material));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::MeshRenderer");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Graphics::MeshRenderer */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_delete00
static int tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::MeshRenderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::MeshRenderer* self = (Singularity::Graphics::MeshRenderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Mesh of class  Singularity::Graphics::MeshRenderer */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_Get_Mesh00
static int tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_Get_Mesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::MeshRenderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::MeshRenderer* self = (const Singularity::Graphics::MeshRenderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Mesh'", NULL);
#endif
  {
   Singularity::Graphics::Mesh* tolua_ret = (Singularity::Graphics::Mesh*)  self->Get_Mesh();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Mesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Mesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Mesh of class  Singularity::Graphics::MeshRenderer */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_Set_Mesh00
static int tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_Set_Mesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::MeshRenderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Graphics::Mesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::MeshRenderer* self = (Singularity::Graphics::MeshRenderer*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Graphics::Mesh* value = ((Singularity::Graphics::Mesh*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Mesh'", NULL);
#endif
  {
   self->Set_Mesh(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Mesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Layer of class  Singularity::Graphics::MeshRenderer */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_Get_Layer00
static int tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_Get_Layer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Graphics::MeshRenderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Graphics::MeshRenderer* self = (const Singularity::Graphics::MeshRenderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Layer'", NULL);
#endif
  {
   unsigned tolua_ret = (unsigned)  self->Get_Layer();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Layer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Layer of class  Singularity::Graphics::MeshRenderer */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_Set_Layer00
static int tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_Set_Layer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::MeshRenderer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::MeshRenderer* self = (Singularity::Graphics::MeshRenderer*)  tolua_tousertype(tolua_S,1,0);
  unsigned value = ((unsigned)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Layer'", NULL);
#endif
  {
   self->Set_Layer(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Layer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Graphics::Axis */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Axis_new00
static int tolua_Singularity_scripting_Singularity_Graphics_Axis_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Axis",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Graphics::Axis* tolua_ret = (Singularity::Graphics::Axis*)  Mtolua_new((Singularity::Graphics::Axis)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Axis");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Graphics::Axis */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Axis_new00_local
static int tolua_Singularity_scripting_Singularity_Graphics_Axis_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Graphics::Axis",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Graphics::Axis* tolua_ret = (Singularity::Graphics::Axis*)  Mtolua_new((Singularity::Graphics::Axis)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Axis");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Graphics::Axis */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Graphics_Axis_delete00
static int tolua_Singularity_scripting_Singularity_Graphics_Axis_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Graphics::Axis",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Axis* self = (Singularity::Graphics::Axis*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMousePosition of class  Singularity::Inputs::MouseState */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Inputs_MouseState_GetMousePosition00
static int tolua_Singularity_scripting_Singularity_Inputs_MouseState_GetMousePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Inputs::MouseState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Inputs::MouseState* self = (Singularity::Inputs::MouseState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMousePosition'", NULL);
#endif
  {
   Vector2 tolua_ret = (Vector2)  self->GetMousePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector2));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMousePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMouseButton of class  Singularity::Inputs::MouseState */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Inputs_MouseState_GetMouseButton00
static int tolua_Singularity_scripting_Singularity_Inputs_MouseState_GetMouseButton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Inputs::MouseState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Inputs::MouseState* self = (Singularity::Inputs::MouseState*)  tolua_tousertype(tolua_S,1,0);
  int button = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMouseButton'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->GetMouseButton(button);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMouseButton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  Singularity::Inputs::MouseState */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Inputs_MouseState__eq00
static int tolua_Singularity_scripting_Singularity_Inputs_MouseState__eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Inputs::MouseState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Singularity::Inputs::MouseState",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Inputs::MouseState* self = (const Singularity::Inputs::MouseState*)  tolua_tousertype(tolua_S,1,0);
  const Singularity::Inputs::MouseState* other = ((const Singularity::Inputs::MouseState*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Inputs::KeyboardState */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Inputs_KeyboardState_new00
static int tolua_Singularity_scripting_Singularity_Inputs_KeyboardState_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Inputs::KeyboardState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Inputs::KeyboardState* tolua_ret = (Singularity::Inputs::KeyboardState*)  Mtolua_new((Singularity::Inputs::KeyboardState)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Inputs::KeyboardState");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Inputs::KeyboardState */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Inputs_KeyboardState_new00_local
static int tolua_Singularity_scripting_Singularity_Inputs_KeyboardState_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Inputs::KeyboardState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Inputs::KeyboardState* tolua_ret = (Singularity::Inputs::KeyboardState*)  Mtolua_new((Singularity::Inputs::KeyboardState)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Inputs::KeyboardState");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsKeyDown of class  Singularity::Inputs::KeyboardState */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Inputs_KeyboardState_IsKeyDown00
static int tolua_Singularity_scripting_Singularity_Inputs_KeyboardState_IsKeyDown00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Inputs::KeyboardState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Inputs::KeyboardState* self = (Singularity::Inputs::KeyboardState*)  tolua_tousertype(tolua_S,1,0);
  int key = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsKeyDown'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsKeyDown(key);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsKeyDown'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsKeyUp of class  Singularity::Inputs::KeyboardState */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Inputs_KeyboardState_IsKeyUp00
static int tolua_Singularity_scripting_Singularity_Inputs_KeyboardState_IsKeyUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Inputs::KeyboardState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Inputs::KeyboardState* self = (Singularity::Inputs::KeyboardState*)  tolua_tousertype(tolua_S,1,0);
  int key = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsKeyUp'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsKeyUp(key);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsKeyUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  Singularity::Inputs::KeyboardState */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Inputs_KeyboardState__eq00
static int tolua_Singularity_scripting_Singularity_Inputs_KeyboardState__eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Inputs::KeyboardState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Singularity::Inputs::KeyboardState",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Inputs::KeyboardState* self = (const Singularity::Inputs::KeyboardState*)  tolua_tousertype(tolua_S,1,0);
  const Singularity::Inputs::KeyboardState* other = ((const Singularity::Inputs::KeyboardState*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMouseState of class  Singularity::Inputs::Input */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Inputs_Input_GetMouseState00
static int tolua_Singularity_scripting_Singularity_Inputs_Input_GetMouseState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Inputs::Input",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Inputs::MouseState tolua_ret = (Singularity::Inputs::MouseState)  Singularity::Inputs::Input::GetMouseState();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Singularity::Inputs::MouseState)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Singularity::Inputs::MouseState");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Singularity::Inputs::MouseState));
     tolua_pushusertype(tolua_S,tolua_obj,"Singularity::Inputs::MouseState");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMouseState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetKeyboardState of class  Singularity::Inputs::Input */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Inputs_Input_GetKeyboardState00
static int tolua_Singularity_scripting_Singularity_Inputs_Input_GetKeyboardState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Inputs::Input",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Inputs::KeyboardState tolua_ret = (Singularity::Inputs::KeyboardState)  Singularity::Inputs::Input::GetKeyboardState();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Singularity::Inputs::KeyboardState)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Singularity::Inputs::KeyboardState");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Singularity::Inputs::KeyboardState));
     tolua_pushusertype(tolua_S,tolua_obj,"Singularity::Inputs::KeyboardState");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetKeyboardState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResetMousePosition of class  Singularity::Inputs::Input */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Inputs_Input_ResetMousePosition00
static int tolua_Singularity_scripting_Singularity_Inputs_Input_ResetMousePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Inputs::Input",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Inputs::Input::ResetMousePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetMousePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMousePosition of class  Singularity::Inputs::Input */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Inputs_Input_SetMousePosition00
static int tolua_Singularity_scripting_Singularity_Inputs_Input_SetMousePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Inputs::Input",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Singularity::Inputs::Input::SetMousePosition(x,y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMousePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMousePosition of class  Singularity::Inputs::Input */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Inputs_Input_GetMousePosition00
static int tolua_Singularity_scripting_Singularity_Inputs_Input_GetMousePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Inputs::Input",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Vector2 tolua_ret = (Vector2)  Singularity::Inputs::Input::GetMousePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector2));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMousePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMouseButton of class  Singularity::Inputs::Input */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Inputs_Input_GetMouseButton00
static int tolua_Singularity_scripting_Singularity_Inputs_Input_GetMouseButton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Inputs::Input",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int button = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Singularity::Inputs::Input::GetMouseButton(button);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMouseButton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsKeyDown of class  Singularity::Inputs::Input */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Inputs_Input_IsKeyDown00
static int tolua_Singularity_scripting_Singularity_Inputs_Input_IsKeyDown00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Inputs::Input",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int key = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Singularity::Inputs::Input::IsKeyDown(key);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsKeyDown'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsKeyUp of class  Singularity::Inputs::Input */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Inputs_Input_IsKeyUp00
static int tolua_Singularity_scripting_Singularity_Inputs_Input_IsKeyUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Inputs::Input",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int key = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Singularity::Inputs::Input::IsKeyUp(key);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsKeyUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Center of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_Collider_Get_Center00
static int tolua_Singularity_scripting_Singularity_Physics_Collider_Get_Center00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::Collider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::Collider* self = (Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Center'", NULL);
#endif
  {
   Vector3& tolua_ret = (Vector3&)  self->Get_Center();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Vector3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Center'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Center of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_Collider_Set_Center00
static int tolua_Singularity_scripting_Singularity_Physics_Collider_Set_Center00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::Collider",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::Collider* self = (Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,1,0);
  const Vector3* value = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Center'", NULL);
#endif
  {
   self->Set_Center(*value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Center'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_Collider_delete00
static int tolua_Singularity_scripting_Singularity_Physics_Collider_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::Collider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::Collider* self = (Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollisionEnter of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Physics__Collider_CollisionEnter
static int tolua_get_Singularity__Physics__Collider_CollisionEnter(lua_State* tolua_S)
{
  Singularity::Physics::Collider* self = (Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollisionEnter'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->CollisionEnter,"Singularity::DelegateHandler");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollisionEnter of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Physics__Collider_CollisionEnter
static int tolua_set_Singularity__Physics__Collider_CollisionEnter(lua_State* tolua_S)
{
  Singularity::Physics::Collider* self = (Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollisionEnter'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::DelegateHandler",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollisionEnter = *((Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollisionExit of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Physics__Collider_CollisionExit
static int tolua_get_Singularity__Physics__Collider_CollisionExit(lua_State* tolua_S)
{
  Singularity::Physics::Collider* self = (Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollisionExit'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->CollisionExit,"Singularity::DelegateHandler");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollisionExit of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Physics__Collider_CollisionExit
static int tolua_set_Singularity__Physics__Collider_CollisionExit(lua_State* tolua_S)
{
  Singularity::Physics::Collider* self = (Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollisionExit'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::DelegateHandler",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollisionExit = *((Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CollisionStay of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Physics__Collider_CollisionStay
static int tolua_get_Singularity__Physics__Collider_CollisionStay(lua_State* tolua_S)
{
  Singularity::Physics::Collider* self = (Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollisionStay'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->CollisionStay,"Singularity::DelegateHandler");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CollisionStay of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Physics__Collider_CollisionStay
static int tolua_set_Singularity__Physics__Collider_CollisionStay(lua_State* tolua_S)
{
  Singularity::Physics::Collider* self = (Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CollisionStay'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::DelegateHandler",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CollisionStay = *((Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: Rotate of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_Collider_Rotate00
static int tolua_Singularity_scripting_Singularity_Physics_Collider_Rotate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::Collider",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Quaternion",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::Collider* self = (Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,1,0);
  Quaternion rotation = *((Quaternion*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Rotate'", NULL);
#endif
  {
   self->Rotate(rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Rotate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Rotation of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_Collider_Set_Rotation00
static int tolua_Singularity_scripting_Singularity_Physics_Collider_Set_Rotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::Collider",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Quaternion",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::Collider* self = (Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,1,0);
  Quaternion rotation = *((Quaternion*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Rotation'", NULL);
#endif
  {
   self->Set_Rotation(rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Rotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Translate of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_Collider_Translate00
static int tolua_Singularity_scripting_Singularity_Physics_Collider_Translate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::Collider",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::Collider* self = (Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,1,0);
  Vector3 direction = *((Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Translate'", NULL);
#endif
  {
   self->Translate(direction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Translate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Position of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_Collider_Set_Position00
static int tolua_Singularity_scripting_Singularity_Physics_Collider_Set_Position00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::Collider",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::Collider* self = (Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,1,0);
  Vector3 position = *((Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Position'", NULL);
#endif
  {
   self->Set_Position(position);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Rotation of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_Collider_Get_Rotation00
static int tolua_Singularity_scripting_Singularity_Physics_Collider_Get_Rotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::Collider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::Collider* self = (Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Rotation'", NULL);
#endif
  {
   Quaternion tolua_ret = (Quaternion)  self->Get_Rotation();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Quaternion)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Quaternion");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Quaternion));
     tolua_pushusertype(tolua_S,tolua_obj,"Quaternion");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Rotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Position of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_Collider_Get_Position00
static int tolua_Singularity_scripting_Singularity_Physics_Collider_Get_Position00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::Collider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::Collider* self = (Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Position'", NULL);
#endif
  {
   Vector3 tolua_ret = (Vector3)  self->Get_Position();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Scale of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_Collider_Set_Scale00
static int tolua_Singularity_scripting_Singularity_Physics_Collider_Set_Scale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::Collider",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::Collider* self = (Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,1,0);
  Vector3 scale = *((Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Scale'", NULL);
#endif
  {
   self->Set_Scale(scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Scale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Raycast of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_Collider_Raycast00
static int tolua_Singularity_scripting_Singularity_Physics_Collider_Raycast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::Collider",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Vector3 start = *((Vector3*)  tolua_tousertype(tolua_S,2,0));
  Vector3 direction = *((Vector3*)  tolua_tousertype(tolua_S,3,0));
  float dt = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   Singularity::Physics::Collider* tolua_ret = (Singularity::Physics::Collider*)  Singularity::Physics::Collider::Raycast(start,direction,dt);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::Collider");
   tolua_pushnumber(tolua_S,(lua_Number)dt);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Raycast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SphereCast of class  Singularity::Physics::Collider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_Collider_SphereCast00
static int tolua_Singularity_scripting_Singularity_Physics_Collider_SphereCast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::Collider",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Vector3 centerpoint = *((Vector3*)  tolua_tousertype(tolua_S,2,0));
  float radius = ((float)  tolua_tonumber(tolua_S,3,0));
  int count = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   DynamicList<Singularity::Physics::Collider*> tolua_ret = (DynamicList<Singularity::Physics::Collider*>)  Singularity::Physics::Collider::SphereCast(centerpoint,radius,count);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((DynamicList<Singularity::Physics::Collider*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"DynamicList<Singularity::Physics::Collider*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(DynamicList<Singularity::Physics::Collider*>));
     tolua_pushusertype(tolua_S,tolua_obj,"DynamicList<Singularity::Physics::Collider*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
   tolua_pushnumber(tolua_S,(lua_Number)count);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SphereCast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Size of class  Singularity::Physics::BoxCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_BoxCollider_Get_Size00
static int tolua_Singularity_scripting_Singularity_Physics_BoxCollider_Get_Size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::BoxCollider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::BoxCollider* self = (Singularity::Physics::BoxCollider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Size'", NULL);
#endif
  {
   Vector3& tolua_ret = (Vector3&)  self->Get_Size();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Vector3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Size of class  Singularity::Physics::BoxCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_BoxCollider_Set_Size00
static int tolua_Singularity_scripting_Singularity_Physics_BoxCollider_Set_Size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::BoxCollider",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::BoxCollider* self = (Singularity::Physics::BoxCollider*)  tolua_tousertype(tolua_S,1,0);
  const Vector3* value = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Size'", NULL);
#endif
  {
   self->Set_Size(*value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Physics::BoxCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new00
static int tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::BoxCollider",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Physics::BoxCollider* tolua_ret = (Singularity::Physics::BoxCollider*)  Mtolua_new((Singularity::Physics::BoxCollider)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::BoxCollider");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Physics::BoxCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new00_local
static int tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::BoxCollider",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Physics::BoxCollider* tolua_ret = (Singularity::Physics::BoxCollider*)  Mtolua_new((Singularity::Physics::BoxCollider)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::BoxCollider");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Physics::BoxCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new01
static int tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::BoxCollider",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Vector3 center = *((Vector3*)  tolua_tousertype(tolua_S,3,0));
  {
   Singularity::Physics::BoxCollider* tolua_ret = (Singularity::Physics::BoxCollider*)  Mtolua_new((Singularity::Physics::BoxCollider)(name,center));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::BoxCollider");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Physics::BoxCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new01_local
static int tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::BoxCollider",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Vector3 center = *((Vector3*)  tolua_tousertype(tolua_S,3,0));
  {
   Singularity::Physics::BoxCollider* tolua_ret = (Singularity::Physics::BoxCollider*)  Mtolua_new((Singularity::Physics::BoxCollider)(name,center));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::BoxCollider");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Physics::BoxCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new02
static int tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::BoxCollider",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Vector3 center = *((Vector3*)  tolua_tousertype(tolua_S,3,0));
  Vector3 size = *((Vector3*)  tolua_tousertype(tolua_S,4,0));
  {
   Singularity::Physics::BoxCollider* tolua_ret = (Singularity::Physics::BoxCollider*)  Mtolua_new((Singularity::Physics::BoxCollider)(name,center,size));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::BoxCollider");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Physics::BoxCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new02_local
static int tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::BoxCollider",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Vector3 center = *((Vector3*)  tolua_tousertype(tolua_S,3,0));
  Vector3 size = *((Vector3*)  tolua_tousertype(tolua_S,4,0));
  {
   Singularity::Physics::BoxCollider* tolua_ret = (Singularity::Physics::BoxCollider*)  Mtolua_new((Singularity::Physics::BoxCollider)(name,center,size));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::BoxCollider");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Physics::BoxCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_BoxCollider_delete00
static int tolua_Singularity_scripting_Singularity_Physics_BoxCollider_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::BoxCollider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::BoxCollider* self = (Singularity::Physics::BoxCollider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Radius of class  Singularity::Physics::SphereCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_SphereCollider_Get_Radius00
static int tolua_Singularity_scripting_Singularity_Physics_SphereCollider_Get_Radius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Physics::SphereCollider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Physics::SphereCollider* self = (const Singularity::Physics::SphereCollider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Radius'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->Get_Radius();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Radius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Radius of class  Singularity::Physics::SphereCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_SphereCollider_Set_Radius00
static int tolua_Singularity_scripting_Singularity_Physics_SphereCollider_Set_Radius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::SphereCollider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::SphereCollider* self = (Singularity::Physics::SphereCollider*)  tolua_tousertype(tolua_S,1,0);
  const float value = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Radius'", NULL);
#endif
  {
   self->Set_Radius(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Radius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Physics::SphereCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_SphereCollider_new00
static int tolua_Singularity_scripting_Singularity_Physics_SphereCollider_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::SphereCollider",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Physics::SphereCollider* tolua_ret = (Singularity::Physics::SphereCollider*)  Mtolua_new((Singularity::Physics::SphereCollider)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::SphereCollider");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Physics::SphereCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_SphereCollider_new00_local
static int tolua_Singularity_scripting_Singularity_Physics_SphereCollider_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::SphereCollider",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Physics::SphereCollider* tolua_ret = (Singularity::Physics::SphereCollider*)  Mtolua_new((Singularity::Physics::SphereCollider)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::SphereCollider");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Physics::SphereCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_SphereCollider_new01
static int tolua_Singularity_scripting_Singularity_Physics_SphereCollider_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::SphereCollider",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Vector3 center = *((Vector3*)  tolua_tousertype(tolua_S,3,0));
  float radius = ((float)  tolua_tonumber(tolua_S,4,0.5f));
  {
   Singularity::Physics::SphereCollider* tolua_ret = (Singularity::Physics::SphereCollider*)  Mtolua_new((Singularity::Physics::SphereCollider)(name,center,radius));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::SphereCollider");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Physics_SphereCollider_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Physics::SphereCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_SphereCollider_new01_local
static int tolua_Singularity_scripting_Singularity_Physics_SphereCollider_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::SphereCollider",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Vector3 center = *((Vector3*)  tolua_tousertype(tolua_S,3,0));
  float radius = ((float)  tolua_tonumber(tolua_S,4,0.5f));
  {
   Singularity::Physics::SphereCollider* tolua_ret = (Singularity::Physics::SphereCollider*)  Mtolua_new((Singularity::Physics::SphereCollider)(name,center,radius));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::SphereCollider");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Physics_SphereCollider_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Physics::SphereCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_SphereCollider_delete00
static int tolua_Singularity_scripting_Singularity_Physics_SphereCollider_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::SphereCollider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::SphereCollider* self = (Singularity::Physics::SphereCollider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Radius of class  Singularity::Physics::CapsuleCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_Get_Radius00
static int tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_Get_Radius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Physics::CapsuleCollider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Physics::CapsuleCollider* self = (const Singularity::Physics::CapsuleCollider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Radius'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->Get_Radius();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Radius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Radius of class  Singularity::Physics::CapsuleCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_Set_Radius00
static int tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_Set_Radius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::CapsuleCollider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::CapsuleCollider* self = (Singularity::Physics::CapsuleCollider*)  tolua_tousertype(tolua_S,1,0);
  const float value = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Radius'", NULL);
#endif
  {
   self->Set_Radius(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Radius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Height of class  Singularity::Physics::CapsuleCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_Get_Height00
static int tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_Get_Height00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Physics::CapsuleCollider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Physics::CapsuleCollider* self = (const Singularity::Physics::CapsuleCollider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Height'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->Get_Height();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Height'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Height of class  Singularity::Physics::CapsuleCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_Set_Height00
static int tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_Set_Height00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::CapsuleCollider",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::CapsuleCollider* self = (Singularity::Physics::CapsuleCollider*)  tolua_tousertype(tolua_S,1,0);
  const float value = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Height'", NULL);
#endif
  {
   self->Set_Height(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Height'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Physics::CapsuleCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_new00
static int tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::CapsuleCollider",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Physics::CapsuleCollider* tolua_ret = (Singularity::Physics::CapsuleCollider*)  Mtolua_new((Singularity::Physics::CapsuleCollider)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::CapsuleCollider");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Physics::CapsuleCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_new00_local
static int tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::CapsuleCollider",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Physics::CapsuleCollider* tolua_ret = (Singularity::Physics::CapsuleCollider*)  Mtolua_new((Singularity::Physics::CapsuleCollider)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::CapsuleCollider");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Physics::CapsuleCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_new01
static int tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::CapsuleCollider",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Vector3 center = *((Vector3*)  tolua_tousertype(tolua_S,3,0));
  float radius = ((float)  tolua_tonumber(tolua_S,4,0.5));
  float height = ((float)  tolua_tonumber(tolua_S,5,2));
  {
   Singularity::Physics::CapsuleCollider* tolua_ret = (Singularity::Physics::CapsuleCollider*)  Mtolua_new((Singularity::Physics::CapsuleCollider)(name,center,radius,height));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::CapsuleCollider");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Physics::CapsuleCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_new01_local
static int tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::CapsuleCollider",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Vector3 center = *((Vector3*)  tolua_tousertype(tolua_S,3,0));
  float radius = ((float)  tolua_tonumber(tolua_S,4,0.5));
  float height = ((float)  tolua_tonumber(tolua_S,5,2));
  {
   Singularity::Physics::CapsuleCollider* tolua_ret = (Singularity::Physics::CapsuleCollider*)  Mtolua_new((Singularity::Physics::CapsuleCollider)(name,center,radius,height));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::CapsuleCollider");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Physics::CapsuleCollider */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_delete00
static int tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::CapsuleCollider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::CapsuleCollider* self = (Singularity::Physics::CapsuleCollider*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Velocity of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_Velocity00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_Velocity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Physics::RigidBody* self = (const Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Velocity'", NULL);
#endif
  {
   Vector3 tolua_ret = (Vector3)  self->Get_Velocity();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Velocity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_AngularVelocity of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_AngularVelocity00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_AngularVelocity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Physics::RigidBody* self = (const Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_AngularVelocity'", NULL);
#endif
  {
   Vector3 tolua_ret = (Vector3)  self->Get_AngularVelocity();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_AngularVelocity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_FreezeRotation of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_FreezeRotation00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_FreezeRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Physics::RigidBody* self = (const Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_FreezeRotation'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->Get_FreezeRotation();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_FreezeRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_FreezeRotation of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_FreezeRotation00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_FreezeRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::RigidBody* self = (Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
  const bool value = ((const bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_FreezeRotation'", NULL);
#endif
  {
   self->Set_FreezeRotation(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_FreezeRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_CenterOfMass of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_CenterOfMass00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_CenterOfMass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Physics::RigidBody* self = (const Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_CenterOfMass'", NULL);
#endif
  {
   Vector3 tolua_ret = (Vector3)  self->Get_CenterOfMass();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_CenterOfMass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_CenterOfMass of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_CenterOfMass00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_CenterOfMass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::RigidBody",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::RigidBody* self = (Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
  const Vector3* value = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_CenterOfMass'", NULL);
#endif
  {
   self->Set_CenterOfMass(*value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_CenterOfMass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Drag of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_Drag00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_Drag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Physics::RigidBody* self = (const Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Drag'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Get_Drag();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Drag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Drag of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_Drag00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_Drag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::RigidBody* self = (Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
  const float value = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Drag'", NULL);
#endif
  {
   self->Set_Drag(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Drag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_AngularDrag of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_AngularDrag00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_AngularDrag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Physics::RigidBody* self = (const Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_AngularDrag'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Get_AngularDrag();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_AngularDrag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_AngularDrag of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_AngularDrag00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_AngularDrag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::RigidBody* self = (Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
  const float value = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_AngularDrag'", NULL);
#endif
  {
   self->Set_AngularDrag(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_AngularDrag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Mass of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_Mass00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_Mass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Physics::RigidBody* self = (const Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Mass'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->Get_Mass();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Mass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Mass of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_Mass00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_Mass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::RigidBody* self = (Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
  const float value = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Mass'", NULL);
#endif
  {
   self->Set_Mass(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Mass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Gravity of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_Gravity00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_Gravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Physics::RigidBody* self = (const Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Gravity'", NULL);
#endif
  {
   Vector3 tolua_ret = (Vector3)  self->Get_Gravity();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Gravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Gravity of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_Gravity00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_Gravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::RigidBody",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::RigidBody* self = (Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
  const Vector3* value = ((const Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Gravity'", NULL);
#endif
  {
   self->Set_Gravity(*value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Gravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_IgnoreGravity of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_IgnoreGravity00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_IgnoreGravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::RigidBody* self = (Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_IgnoreGravity'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->Get_IgnoreGravity();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_IgnoreGravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_IgnoreGravity of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_IgnoreGravity00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_IgnoreGravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::RigidBody* self = (Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
  const bool value = ((const bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_IgnoreGravity'", NULL);
#endif
  {
   self->Set_IgnoreGravity(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_IgnoreGravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_new00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Physics::RigidBody* tolua_ret = (Singularity::Physics::RigidBody*)  Mtolua_new((Singularity::Physics::RigidBody)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::RigidBody");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_new00_local
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Physics::RigidBody* tolua_ret = (Singularity::Physics::RigidBody*)  Mtolua_new((Singularity::Physics::RigidBody)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::RigidBody");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_delete00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::RigidBody* self = (Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddForce of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_AddForce00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_AddForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::RigidBody",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::RigidBody* self = (Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
  Vector3 force = *((Vector3*)  tolua_tousertype(tolua_S,2,0));
  Singularity::Physics::ForceMode mode = ((Singularity::Physics::ForceMode) (int)  tolua_tonumber(tolua_S,3,Singularity::Physics::ForceMode::Force));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddForce'", NULL);
#endif
  {
   self->AddForce(force,mode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddTorque of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_AddTorque00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_AddTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::RigidBody",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::RigidBody* self = (Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
  Vector3 force = *((Vector3*)  tolua_tousertype(tolua_S,2,0));
  Singularity::Physics::ForceMode mode = ((Singularity::Physics::ForceMode) (int)  tolua_tonumber(tolua_S,3,Singularity::Physics::ForceMode::Force));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddTorque'", NULL);
#endif
  {
   self->AddTorque(force,mode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddForceAtPosition of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_AddForceAtPosition00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_AddForceAtPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::RigidBody",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::RigidBody* self = (Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
  Vector3 force = *((Vector3*)  tolua_tousertype(tolua_S,2,0));
  Vector3 position = *((Vector3*)  tolua_tousertype(tolua_S,3,0));
  Singularity::Physics::ForceMode mode = ((Singularity::Physics::ForceMode) (int)  tolua_tonumber(tolua_S,4,Singularity::Physics::ForceMode::Force));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddForceAtPosition'", NULL);
#endif
  {
   self->AddForceAtPosition(force,position,mode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddForceAtPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddExplosiveForce of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_AddExplosiveForce00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_AddExplosiveForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::RigidBody* self = (Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
  float force = ((float)  tolua_tonumber(tolua_S,2,0));
  Vector3 position = *((Vector3*)  tolua_tousertype(tolua_S,3,0));
  float radius = ((float)  tolua_tonumber(tolua_S,4,0));
  Singularity::Physics::ForceMode mode = ((Singularity::Physics::ForceMode) (int)  tolua_tonumber(tolua_S,5,Singularity::Physics::ForceMode::Force));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddExplosiveForce'", NULL);
#endif
  {
   self->AddExplosiveForce(force,position,radius,mode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddExplosiveForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: StopAllMovement of class  Singularity::Physics::RigidBody */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_RigidBody_StopAllMovement00
static int tolua_Singularity_scripting_Singularity_Physics_RigidBody_StopAllMovement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::RigidBody",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::RigidBody* self = (Singularity::Physics::RigidBody*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'StopAllMovement'", NULL);
#endif
  {
   self->StopAllMovement();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'StopAllMovement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Radius of class  Singularity::Physics::CharacterController */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CharacterController_Get_Radius00
static int tolua_Singularity_scripting_Singularity_Physics_CharacterController_Get_Radius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Physics::CharacterController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Physics::CharacterController* self = (const Singularity::Physics::CharacterController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Radius'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->Get_Radius();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Radius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Radius of class  Singularity::Physics::CharacterController */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_Radius00
static int tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_Radius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::CharacterController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::CharacterController* self = (Singularity::Physics::CharacterController*)  tolua_tousertype(tolua_S,1,0);
  const float value = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Radius'", NULL);
#endif
  {
   self->Set_Radius(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Radius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Height of class  Singularity::Physics::CharacterController */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CharacterController_Get_Height00
static int tolua_Singularity_scripting_Singularity_Physics_CharacterController_Get_Height00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Physics::CharacterController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Physics::CharacterController* self = (const Singularity::Physics::CharacterController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Height'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->Get_Height();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Height'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Height of class  Singularity::Physics::CharacterController */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_Height00
static int tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_Height00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::CharacterController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::CharacterController* self = (Singularity::Physics::CharacterController*)  tolua_tousertype(tolua_S,1,0);
  const float value = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Height'", NULL);
#endif
  {
   self->Set_Height(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Height'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_SlopeLimit of class  Singularity::Physics::CharacterController */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CharacterController_Get_SlopeLimit00
static int tolua_Singularity_scripting_Singularity_Physics_CharacterController_Get_SlopeLimit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Physics::CharacterController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Physics::CharacterController* self = (const Singularity::Physics::CharacterController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_SlopeLimit'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->Get_SlopeLimit();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_SlopeLimit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_SlopeLimit of class  Singularity::Physics::CharacterController */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_SlopeLimit00
static int tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_SlopeLimit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::CharacterController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::CharacterController* self = (Singularity::Physics::CharacterController*)  tolua_tousertype(tolua_S,1,0);
  const float value = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_SlopeLimit'", NULL);
#endif
  {
   self->Set_SlopeLimit(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_SlopeLimit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_StepOffset of class  Singularity::Physics::CharacterController */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CharacterController_Get_StepOffset00
static int tolua_Singularity_scripting_Singularity_Physics_CharacterController_Get_StepOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Physics::CharacterController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Physics::CharacterController* self = (const Singularity::Physics::CharacterController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_StepOffset'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->Get_StepOffset();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_StepOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_StepOffset of class  Singularity::Physics::CharacterController */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_StepOffset00
static int tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_StepOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::CharacterController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::CharacterController* self = (Singularity::Physics::CharacterController*)  tolua_tousertype(tolua_S,1,0);
  const float value = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_StepOffset'", NULL);
#endif
  {
   self->Set_StepOffset(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_StepOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Physics::CharacterController */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CharacterController_new00
static int tolua_Singularity_scripting_Singularity_Physics_CharacterController_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::CharacterController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Physics::CharacterController* tolua_ret = (Singularity::Physics::CharacterController*)  Mtolua_new((Singularity::Physics::CharacterController)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::CharacterController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Physics::CharacterController */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CharacterController_new00_local
static int tolua_Singularity_scripting_Singularity_Physics_CharacterController_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Physics::CharacterController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Physics::CharacterController* tolua_ret = (Singularity::Physics::CharacterController*)  Mtolua_new((Singularity::Physics::CharacterController)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Physics::CharacterController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Physics::CharacterController */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CharacterController_delete00
static int tolua_Singularity_scripting_Singularity_Physics_CharacterController_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::CharacterController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::CharacterController* self = (Singularity::Physics::CharacterController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Move of class  Singularity::Physics::CharacterController */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CharacterController_Move00
static int tolua_Singularity_scripting_Singularity_Physics_CharacterController_Move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::CharacterController",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::CharacterController* self = (Singularity::Physics::CharacterController*)  tolua_tousertype(tolua_S,1,0);
  Vector3* direction = ((Vector3*)  tolua_tousertype(tolua_S,2,0));
  float amount = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Move'", NULL);
#endif
  {
   self->Move(*direction,amount);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Jump of class  Singularity::Physics::CharacterController */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CharacterController_Jump00
static int tolua_Singularity_scripting_Singularity_Physics_CharacterController_Jump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::CharacterController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::CharacterController* self = (Singularity::Physics::CharacterController*)  tolua_tousertype(tolua_S,1,0);
  float amount = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Jump'", NULL);
#endif
  {
   self->Jump(amount);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Jump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Gravity of class  Singularity::Physics::CharacterController */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_Gravity00
static int tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_Gravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::CharacterController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::CharacterController* self = (Singularity::Physics::CharacterController*)  tolua_tousertype(tolua_S,1,0);
  float amount = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Gravity'", NULL);
#endif
  {
   self->Set_Gravity(amount);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Gravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Mass of class  Singularity::Physics::CharacterController */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_Mass00
static int tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_Mass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::CharacterController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::CharacterController* self = (Singularity::Physics::CharacterController*)  tolua_tousertype(tolua_S,1,0);
  float mass = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Mass'", NULL);
#endif
  {
   self->Set_Mass(mass);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Mass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddExplosiveForce of class  Singularity::Physics::CharacterController */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Physics_CharacterController_AddExplosiveForce00
static int tolua_Singularity_scripting_Singularity_Physics_CharacterController_AddExplosiveForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Physics::CharacterController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Physics::CharacterController* self = (Singularity::Physics::CharacterController*)  tolua_tousertype(tolua_S,1,0);
  float force = ((float)  tolua_tonumber(tolua_S,2,0));
  Vector3 position = *((Vector3*)  tolua_tousertype(tolua_S,3,0));
  float radius = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddExplosiveForce'", NULL);
#endif
  {
   self->AddExplosiveForce(force,position,radius);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddExplosiveForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::NinePatch */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_NinePatch_new00
static int tolua_Singularity_scripting_Singularity_Gui_NinePatch_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Graphics::Texture2D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector4",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Texture2D* image = ((Singularity::Graphics::Texture2D*)  tolua_tousertype(tolua_S,2,0));
  Vector4 padding = *((Vector4*)  tolua_tousertype(tolua_S,3,0));
  {
   Singularity::Gui::NinePatch* tolua_ret = (Singularity::Gui::NinePatch*)  Mtolua_new((Singularity::Gui::NinePatch)(image,padding));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::NinePatch");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::NinePatch */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_NinePatch_new00_local
static int tolua_Singularity_scripting_Singularity_Gui_NinePatch_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Graphics::Texture2D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector4",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Graphics::Texture2D* image = ((Singularity::Graphics::Texture2D*)  tolua_tousertype(tolua_S,2,0));
  Vector4 padding = *((Vector4*)  tolua_tousertype(tolua_S,3,0));
  {
   Singularity::Gui::NinePatch* tolua_ret = (Singularity::Gui::NinePatch*)  Mtolua_new((Singularity::Gui::NinePatch)(image,padding));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::NinePatch");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::NinePatch */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_NinePatch_new01
static int tolua_Singularity_scripting_Singularity_Gui_NinePatch_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Graphics::Texture2D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Vector4",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Graphics::Texture2D* image = ((Singularity::Graphics::Texture2D*)  tolua_tousertype(tolua_S,2,0));
  Vector2 size = *((Vector2*)  tolua_tousertype(tolua_S,3,0));
  Vector4 padding = *((Vector4*)  tolua_tousertype(tolua_S,4,0));
  {
   Singularity::Gui::NinePatch* tolua_ret = (Singularity::Gui::NinePatch*)  Mtolua_new((Singularity::Gui::NinePatch)(image,size,padding));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::NinePatch");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_NinePatch_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::NinePatch */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_NinePatch_new01_local
static int tolua_Singularity_scripting_Singularity_Gui_NinePatch_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Graphics::Texture2D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Vector4",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Graphics::Texture2D* image = ((Singularity::Graphics::Texture2D*)  tolua_tousertype(tolua_S,2,0));
  Vector2 size = *((Vector2*)  tolua_tousertype(tolua_S,3,0));
  Vector4 padding = *((Vector4*)  tolua_tousertype(tolua_S,4,0));
  {
   Singularity::Gui::NinePatch* tolua_ret = (Singularity::Gui::NinePatch*)  Mtolua_new((Singularity::Gui::NinePatch)(image,size,padding));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::NinePatch");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_NinePatch_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Gui::NinePatch */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_NinePatch_delete00
static int tolua_Singularity_scripting_Singularity_Gui_NinePatch_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::NinePatch* self = (Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Height of class  Singularity::Gui::NinePatch */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_NinePatch_Get_Height00
static int tolua_Singularity_scripting_Singularity_Gui_NinePatch_Get_Height00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::NinePatch* self = (const Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Height'", NULL);
#endif
  {
   int tolua_ret = (int)  self->Get_Height();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Height'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Height of class  Singularity::Gui::NinePatch */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_NinePatch_Set_Height00
static int tolua_Singularity_scripting_Singularity_Gui_NinePatch_Set_Height00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::NinePatch* self = (Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,1,0);
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Height'", NULL);
#endif
  {
   self->Set_Height(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Height'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Width of class  Singularity::Gui::NinePatch */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_NinePatch_Get_Width00
static int tolua_Singularity_scripting_Singularity_Gui_NinePatch_Get_Width00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::NinePatch* self = (const Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Width'", NULL);
#endif
  {
   int tolua_ret = (int)  self->Get_Width();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Width of class  Singularity::Gui::NinePatch */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_NinePatch_Set_Width00
static int tolua_Singularity_scripting_Singularity_Gui_NinePatch_Set_Width00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::NinePatch* self = (Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,1,0);
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Width'", NULL);
#endif
  {
   self->Set_Width(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Padding of class  Singularity::Gui::NinePatch */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_NinePatch_Get_Padding00
static int tolua_Singularity_scripting_Singularity_Gui_NinePatch_Get_Padding00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::NinePatch* self = (const Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Padding'", NULL);
#endif
  {
   Vector4 tolua_ret = (Vector4)  self->Get_Padding();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector4)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector4");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector4));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector4");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Padding'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Padding of class  Singularity::Gui::NinePatch */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_NinePatch_Set_Padding00
static int tolua_Singularity_scripting_Singularity_Gui_NinePatch_Set_Padding00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector4",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::NinePatch* self = (Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,1,0);
  Vector4 value = *((Vector4*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Padding'", NULL);
#endif
  {
   self->Set_Padding(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Padding'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTexture of class  Singularity::Gui::NinePatch */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_NinePatch_GetTexture00
static int tolua_Singularity_scripting_Singularity_Gui_NinePatch_GetTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::NinePatch* self = (Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTexture'", NULL);
#endif
  {
   Texture2D* tolua_ret = (Texture2D*)  self->GetTexture();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Texture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Gui::Font */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Font_delete00
static int tolua_Singularity_scripting_Singularity_Gui_Font_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Font",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Font* self = (Singularity::Gui::Font*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_FontName of class  Singularity::Gui::Font */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Font_Get_FontName00
static int tolua_Singularity_scripting_Singularity_Gui_Font_Get_FontName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Font",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Font* self = (Singularity::Gui::Font*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_FontName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->Get_FontName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_FontName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Kerning of class  Singularity::Gui::Font */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Font_Get_Kerning00
static int tolua_Singularity_scripting_Singularity_Gui_Font_Get_Kerning00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::Font",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::Font* self = (const Singularity::Gui::Font*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Kerning'", NULL);
#endif
  {
   int tolua_ret = (int)  self->Get_Kerning();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Kerning'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Kerning of class  Singularity::Gui::Font */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Font_Set_Kerning00
static int tolua_Singularity_scripting_Singularity_Gui_Font_Set_Kerning00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Font",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Font* self = (Singularity::Gui::Font*)  tolua_tousertype(tolua_S,1,0);
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Kerning'", NULL);
#endif
  {
   self->Set_Kerning(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Kerning'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  Singularity::Gui::Font */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Font_Create00
static int tolua_Singularity_scripting_Singularity_Gui_Font_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Font",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  std::string path = ((std::string)  tolua_tocppstring(tolua_S,3,0));
  {
   Singularity::Gui::Font* tolua_ret = (Singularity::Gui::Font*)  Singularity::Gui::Font::Create(name,path);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Font");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Font of class  Singularity::Gui::Font */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Font_Get_Font00
static int tolua_Singularity_scripting_Singularity_Gui_Font_Get_Font00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Font",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Gui::Font* tolua_ret = (Singularity::Gui::Font*)  Singularity::Gui::Font::Get_Font(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Font");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Font'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetStringWidth of class  Singularity::Gui::Font */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Font_GetStringWidth00
static int tolua_Singularity_scripting_Singularity_Gui_Font_GetStringWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Font",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::Font",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Font* font = ((Singularity::Gui::Font*)  tolua_tousertype(tolua_S,2,0));
  std::string value = ((std::string)  tolua_tocppstring(tolua_S,3,0));
  {
   int tolua_ret = (int)  Singularity::Gui::Font::GetStringWidth(font,value);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetStringWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::GuiScreen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_GuiScreen_new00
static int tolua_Singularity_scripting_Singularity_Gui_GuiScreen_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::GuiScreen",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Gui::GuiScreen* tolua_ret = (Singularity::Gui::GuiScreen*)  Mtolua_new((Singularity::Gui::GuiScreen)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::GuiScreen");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::GuiScreen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_GuiScreen_new00_local
static int tolua_Singularity_scripting_Singularity_Gui_GuiScreen_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::GuiScreen",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Gui::GuiScreen* tolua_ret = (Singularity::Gui::GuiScreen*)  Mtolua_new((Singularity::Gui::GuiScreen)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::GuiScreen");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Gui::GuiScreen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_GuiScreen_delete00
static int tolua_Singularity_scripting_Singularity_Gui_GuiScreen_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::GuiScreen",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::GuiScreen* self = (Singularity::Gui::GuiScreen*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_ControlWithFocus of class  Singularity::Gui::GuiScreen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_GuiScreen_Get_ControlWithFocus00
static int tolua_Singularity_scripting_Singularity_Gui_GuiScreen_Get_ControlWithFocus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::GuiScreen",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::GuiScreen* self = (Singularity::Gui::GuiScreen*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_ControlWithFocus'", NULL);
#endif
  {
   Singularity::Gui::Control* tolua_ret = (Singularity::Gui::Control*)  self->Get_ControlWithFocus();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Control");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_ControlWithFocus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetControl of class  Singularity::Gui::GuiScreen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_GuiScreen_GetControl00
static int tolua_Singularity_scripting_Singularity_Gui_GuiScreen_GetControl00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::GuiScreen",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::GuiScreen* self = (Singularity::Gui::GuiScreen*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetControl'", NULL);
#endif
  {
   Singularity::Gui::Control* tolua_ret = (Singularity::Gui::Control*)  self->GetControl(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Control");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetControl'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddWindow of class  Singularity::Gui::GuiScreen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_GuiScreen_AddWindow00
static int tolua_Singularity_scripting_Singularity_Gui_GuiScreen_AddWindow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::GuiScreen",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::Window",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::GuiScreen* self = (Singularity::Gui::GuiScreen*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::Window* window = ((Singularity::Gui::Window*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddWindow'", NULL);
#endif
  {
   self->AddWindow(window);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddWindow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveWindow of class  Singularity::Gui::GuiScreen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_GuiScreen_RemoveWindow00
static int tolua_Singularity_scripting_Singularity_Gui_GuiScreen_RemoveWindow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::GuiScreen",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::Window",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::GuiScreen* self = (Singularity::Gui::GuiScreen*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::Window* window = ((Singularity::Gui::Window*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveWindow'", NULL);
#endif
  {
   self->RemoveWindow(window);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveWindow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  Singularity::Gui::GuiScreen */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_GuiScreen_Clear00
static int tolua_Singularity_scripting_Singularity_Gui_GuiScreen_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::GuiScreen",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::GuiScreen* self = (Singularity::Gui::GuiScreen*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FocusGained of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Gui__Control_FocusGained
static int tolua_get_Singularity__Gui__Control_FocusGained(lua_State* tolua_S)
{
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FocusGained'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->FocusGained,"Singularity::DelegateHandler");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FocusGained of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Gui__Control_FocusGained
static int tolua_set_Singularity__Gui__Control_FocusGained(lua_State* tolua_S)
{
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FocusGained'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::DelegateHandler",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FocusGained = *((Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FocusLost of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Gui__Control_FocusLost
static int tolua_get_Singularity__Gui__Control_FocusLost(lua_State* tolua_S)
{
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FocusLost'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->FocusLost,"Singularity::DelegateHandler");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FocusLost of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Gui__Control_FocusLost
static int tolua_set_Singularity__Gui__Control_FocusLost(lua_State* tolua_S)
{
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FocusLost'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::DelegateHandler",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FocusLost = *((Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MouseDown of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Gui__Control_MouseDown
static int tolua_get_Singularity__Gui__Control_MouseDown(lua_State* tolua_S)
{
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MouseDown'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->MouseDown,"Singularity::DelegateHandler");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MouseDown of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Gui__Control_MouseDown
static int tolua_set_Singularity__Gui__Control_MouseDown(lua_State* tolua_S)
{
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MouseDown'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::DelegateHandler",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MouseDown = *((Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MouseUp of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Gui__Control_MouseUp
static int tolua_get_Singularity__Gui__Control_MouseUp(lua_State* tolua_S)
{
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MouseUp'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->MouseUp,"Singularity::DelegateHandler");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MouseUp of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Gui__Control_MouseUp
static int tolua_set_Singularity__Gui__Control_MouseUp(lua_State* tolua_S)
{
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MouseUp'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::DelegateHandler",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MouseUp = *((Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: KeyDown of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Gui__Control_KeyDown
static int tolua_get_Singularity__Gui__Control_KeyDown(lua_State* tolua_S)
{
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'KeyDown'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->KeyDown,"Singularity::DelegateHandler");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: KeyDown of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Gui__Control_KeyDown
static int tolua_set_Singularity__Gui__Control_KeyDown(lua_State* tolua_S)
{
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'KeyDown'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::DelegateHandler",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->KeyDown = *((Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: KeyUp of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Gui__Control_KeyUp
static int tolua_get_Singularity__Gui__Control_KeyUp(lua_State* tolua_S)
{
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'KeyUp'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->KeyUp,"Singularity::DelegateHandler");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: KeyUp of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Gui__Control_KeyUp
static int tolua_set_Singularity__Gui__Control_KeyUp(lua_State* tolua_S)
{
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'KeyUp'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::DelegateHandler",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->KeyUp = *((Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: KeyPress of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Gui__Control_KeyPress
static int tolua_get_Singularity__Gui__Control_KeyPress(lua_State* tolua_S)
{
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'KeyPress'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->KeyPress,"Singularity::DelegateHandler");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: KeyPress of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Gui__Control_KeyPress
static int tolua_set_Singularity__Gui__Control_KeyPress(lua_State* tolua_S)
{
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'KeyPress'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::DelegateHandler",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->KeyPress = *((Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_new00
static int tolua_Singularity_scripting_Singularity_Gui_Control_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Gui::Control* tolua_ret = (Singularity::Gui::Control*)  Mtolua_new((Singularity::Gui::Control)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Control");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_new00_local
static int tolua_Singularity_scripting_Singularity_Gui_Control_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Gui::Control* tolua_ret = (Singularity::Gui::Control*)  Mtolua_new((Singularity::Gui::Control)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Control");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_new01
static int tolua_Singularity_scripting_Singularity_Gui_Control_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Vector2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"Vector2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Gui::NinePatch* texture = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,3,0));
  Vector2 position = *((Vector2*)  tolua_tousertype(tolua_S,4,0));
  Vector2 size = *((Vector2*)  tolua_tousertype(tolua_S,5,0));
  {
   Singularity::Gui::Control* tolua_ret = (Singularity::Gui::Control*)  Mtolua_new((Singularity::Gui::Control)(name,texture,position,size));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Control");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_Control_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_new01_local
static int tolua_Singularity_scripting_Singularity_Gui_Control_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Vector2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"Vector2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Gui::NinePatch* texture = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,3,0));
  Vector2 position = *((Vector2*)  tolua_tousertype(tolua_S,4,0));
  Vector2 size = *((Vector2*)  tolua_tousertype(tolua_S,5,0));
  {
   Singularity::Gui::Control* tolua_ret = (Singularity::Gui::Control*)  Mtolua_new((Singularity::Gui::Control)(name,texture,position,size));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Control");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_Control_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_new02
static int tolua_Singularity_scripting_Singularity_Gui_Control_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Graphics::Material* material = ((Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,3,0));
  {
   Singularity::Gui::Control* tolua_ret = (Singularity::Gui::Control*)  Mtolua_new((Singularity::Gui::Control)(name,material));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Control");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_Control_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_new02_local
static int tolua_Singularity_scripting_Singularity_Gui_Control_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Graphics::Material",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Graphics::Material* material = ((Singularity::Graphics::Material*)  tolua_tousertype(tolua_S,3,0));
  {
   Singularity::Gui::Control* tolua_ret = (Singularity::Gui::Control*)  Mtolua_new((Singularity::Gui::Control)(name,material));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Control");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_Control_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_delete00
static int tolua_Singularity_scripting_Singularity_Gui_Control_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Parent of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Set_Parent00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Set_Parent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::Control* value = ((Singularity::Gui::Control*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Parent'", NULL);
#endif
  {
   self->Set_Parent(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Parent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Depth of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Set_Depth00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Set_Depth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Depth'", NULL);
#endif
  {
   self->Set_Depth(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Depth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_AbsolutePosition of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Get_AbsolutePosition00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Get_AbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::Control* self = (const Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_AbsolutePosition'", NULL);
#endif
  {
   Vector2 tolua_ret = (Vector2)  self->Get_AbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector2));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_AbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_HasFocus of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Get_HasFocus00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Get_HasFocus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::Control* self = (const Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_HasFocus'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->Get_HasFocus();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_HasFocus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Name of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Get_Name00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Get_Name00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::Control* self = (const Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Name'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->Get_Name();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Name'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Name of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Set_Name00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Set_Name00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
  std::string value = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Name'", NULL);
#endif
  {
   self->Set_Name(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Name'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Position of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Get_Position00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Get_Position00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::Control* self = (const Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Position'", NULL);
#endif
  {
   Vector2 tolua_ret = (Vector2)  self->Get_Position();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector2));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Position of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Set_Position00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Set_Position00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Control",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
  Vector2 value = *((Vector2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Position'", NULL);
#endif
  {
   self->Set_Position(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Position'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Size of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Get_Size00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Get_Size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::Control* self = (const Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Size'", NULL);
#endif
  {
   Vector2 tolua_ret = (Vector2)  self->Get_Size();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector2));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Size of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Set_Size00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Set_Size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Control",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
  Vector2 value = *((Vector2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Size'", NULL);
#endif
  {
   self->Set_Size(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Texture of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Get_Texture00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Get_Texture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::Control* self = (const Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Texture'", NULL);
#endif
  {
   Singularity::Gui::NinePatch* tolua_ret = (Singularity::Gui::NinePatch*)  self->Get_Texture();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::NinePatch");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Texture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Texture of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Set_Texture00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Set_Texture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::NinePatch* value = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Texture'", NULL);
#endif
  {
   self->Set_Texture(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Texture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Visible of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Get_Visible00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Get_Visible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::Control* self = (const Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Visible'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->Get_Visible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Visible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Visible of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Set_Visible00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Set_Visible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
  const bool value = ((const bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Visible'", NULL);
#endif
  {
   self->Set_Visible(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Visible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Enabled of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Get_Enabled00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Get_Enabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::Control* self = (const Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Enabled'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->Get_Enabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Enabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Enabled of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Set_Enabled00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Set_Enabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
  const bool value = ((const bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Enabled'", NULL);
#endif
  {
   self->Set_Enabled(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Enabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Color of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Set_Color00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Set_Color00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Control",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
  Color color = *((Color*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Color'", NULL);
#endif
  {
   self->Set_Color(color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_NumberOfChildren of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_Get_NumberOfChildren00
static int tolua_Singularity_scripting_Singularity_Gui_Control_Get_NumberOfChildren00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::Control* self = (const Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_NumberOfChildren'", NULL);
#endif
  {
   int tolua_ret = (int)  self->Get_NumberOfChildren();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_NumberOfChildren'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFocus of class  Singularity::Gui::Control */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Control_SetFocus00
static int tolua_Singularity_scripting_Singularity_Gui_Control_SetFocus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Control* self = (Singularity::Gui::Control*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFocus'", NULL);
#endif
  {
   self->SetFocus();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFocus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Text of class  Singularity::Gui::TextControl */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextControl_Get_Text00
static int tolua_Singularity_scripting_Singularity_Gui_TextControl_Get_Text00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::TextControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::TextControl* self = (const Singularity::Gui::TextControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Text'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->Get_Text();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Text'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Text of class  Singularity::Gui::TextControl */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_Text00
static int tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_Text00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::TextControl",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::TextControl* self = (Singularity::Gui::TextControl*)  tolua_tousertype(tolua_S,1,0);
  std::string value = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Text'", NULL);
#endif
  {
   self->Set_Text(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Text'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_TextCenter of class  Singularity::Gui::TextControl */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextControl_Get_TextCenter00
static int tolua_Singularity_scripting_Singularity_Gui_TextControl_Get_TextCenter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::TextControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::TextControl* self = (Singularity::Gui::TextControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_TextCenter'", NULL);
#endif
  {
   int tolua_ret = (int)  self->Get_TextCenter();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_TextCenter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Padding of class  Singularity::Gui::TextControl */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextControl_Get_Padding00
static int tolua_Singularity_scripting_Singularity_Gui_TextControl_Get_Padding00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::TextControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::TextControl* self = (const Singularity::Gui::TextControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Padding'", NULL);
#endif
  {
   Vector2 tolua_ret = (Vector2)  self->Get_Padding();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector2));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Padding'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Padding of class  Singularity::Gui::TextControl */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_Padding00
static int tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_Padding00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::TextControl",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::TextControl* self = (Singularity::Gui::TextControl*)  tolua_tousertype(tolua_S,1,0);
  Vector2 value = *((Vector2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Padding'", NULL);
#endif
  {
   self->Set_Padding(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Padding'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Font of class  Singularity::Gui::TextControl */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextControl_Get_Font00
static int tolua_Singularity_scripting_Singularity_Gui_TextControl_Get_Font00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::TextControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::TextControl* self = (const Singularity::Gui::TextControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Font'", NULL);
#endif
  {
   Singularity::Gui::Font* tolua_ret = (Singularity::Gui::Font*)  self->Get_Font();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Font");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Font'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Font of class  Singularity::Gui::TextControl */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_Font00
static int tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_Font00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::TextControl",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::Font",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::TextControl* self = (Singularity::Gui::TextControl*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::Font* font = ((Singularity::Gui::Font*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Font'", NULL);
#endif
  {
   self->Set_Font(font);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Font'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_FontMaterial of class  Singularity::Gui::TextControl */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextControl_Get_FontMaterial00
static int tolua_Singularity_scripting_Singularity_Gui_TextControl_Get_FontMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::TextControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::TextControl* self = (const Singularity::Gui::TextControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_FontMaterial'", NULL);
#endif
  {
   Material* tolua_ret = (Material*)  self->Get_FontMaterial();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Material");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_FontMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_FontMaterial of class  Singularity::Gui::TextControl */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_FontMaterial00
static int tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_FontMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::TextControl",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Material",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::TextControl* self = (Singularity::Gui::TextControl*)  tolua_tousertype(tolua_S,1,0);
  Material* value = ((Material*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_FontMaterial'", NULL);
#endif
  {
   self->Set_FontMaterial(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_FontMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_FontColor of class  Singularity::Gui::TextControl */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_FontColor00
static int tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_FontColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::TextControl",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::TextControl* self = (Singularity::Gui::TextControl*)  tolua_tousertype(tolua_S,1,0);
  Color color = *((Color*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_FontColor'", NULL);
#endif
  {
   self->Set_FontColor(color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_FontColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Texture of class  Singularity::Gui::TextControl */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_Texture00
static int tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_Texture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::TextControl",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::TextControl* self = (Singularity::Gui::TextControl*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::NinePatch* value = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Texture'", NULL);
#endif
  {
   self->Set_Texture(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Texture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::TextControl */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextControl_new00
static int tolua_Singularity_scripting_Singularity_Gui_TextControl_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::TextControl",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  std::string text = ((std::string)  tolua_tocppstring(tolua_S,3,""));
  {
   Singularity::Gui::TextControl* tolua_ret = (Singularity::Gui::TextControl*)  Mtolua_new((Singularity::Gui::TextControl)(name,text));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::TextControl");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::TextControl */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextControl_new00_local
static int tolua_Singularity_scripting_Singularity_Gui_TextControl_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::TextControl",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  std::string text = ((std::string)  tolua_tocppstring(tolua_S,3,""));
  {
   Singularity::Gui::TextControl* tolua_ret = (Singularity::Gui::TextControl*)  Mtolua_new((Singularity::Gui::TextControl)(name,text));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::TextControl");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::TextControl */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextControl_new01
static int tolua_Singularity_scripting_Singularity_Gui_TextControl_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::TextControl",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Material",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Material",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Material* material = ((Material*)  tolua_tousertype(tolua_S,3,0));
  Material* fontMaterial = ((Material*)  tolua_tousertype(tolua_S,4,0));
  std::string text = ((std::string)  tolua_tocppstring(tolua_S,5,""));
  {
   Singularity::Gui::TextControl* tolua_ret = (Singularity::Gui::TextControl*)  Mtolua_new((Singularity::Gui::TextControl)(name,material,fontMaterial,text));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::TextControl");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_TextControl_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::TextControl */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextControl_new01_local
static int tolua_Singularity_scripting_Singularity_Gui_TextControl_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::TextControl",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Material",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Material",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Material* material = ((Material*)  tolua_tousertype(tolua_S,3,0));
  Material* fontMaterial = ((Material*)  tolua_tousertype(tolua_S,4,0));
  std::string text = ((std::string)  tolua_tocppstring(tolua_S,5,""));
  {
   Singularity::Gui::TextControl* tolua_ret = (Singularity::Gui::TextControl*)  Mtolua_new((Singularity::Gui::TextControl)(name,material,fontMaterial,text));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::TextControl");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_TextControl_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Gui::TextControl */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextControl_delete00
static int tolua_Singularity_scripting_Singularity_Gui_TextControl_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::TextControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::TextControl* self = (Singularity::Gui::TextControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::Panel */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Panel_new00
static int tolua_Singularity_scripting_Singularity_Gui_Panel_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Panel",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Gui::Panel* tolua_ret = (Singularity::Gui::Panel*)  Mtolua_new((Singularity::Gui::Panel)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Panel");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::Panel */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Panel_new00_local
static int tolua_Singularity_scripting_Singularity_Gui_Panel_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Panel",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Gui::Panel* tolua_ret = (Singularity::Gui::Panel*)  Mtolua_new((Singularity::Gui::Panel)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Panel");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::Panel */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Panel_new01
static int tolua_Singularity_scripting_Singularity_Gui_Panel_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Panel",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Vector2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"Vector2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Gui::NinePatch* texture = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,3,0));
  Vector2 position = *((Vector2*)  tolua_tousertype(tolua_S,4,0));
  Vector2 size = *((Vector2*)  tolua_tousertype(tolua_S,5,0));
  {
   Singularity::Gui::Panel* tolua_ret = (Singularity::Gui::Panel*)  Mtolua_new((Singularity::Gui::Panel)(name,texture,position,size));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Panel");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_Panel_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::Panel */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Panel_new01_local
static int tolua_Singularity_scripting_Singularity_Gui_Panel_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Panel",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Vector2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"Vector2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Gui::NinePatch* texture = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,3,0));
  Vector2 position = *((Vector2*)  tolua_tousertype(tolua_S,4,0));
  Vector2 size = *((Vector2*)  tolua_tousertype(tolua_S,5,0));
  {
   Singularity::Gui::Panel* tolua_ret = (Singularity::Gui::Panel*)  Mtolua_new((Singularity::Gui::Panel)(name,texture,position,size));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Panel");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_Panel_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Gui::Panel */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Panel_delete00
static int tolua_Singularity_scripting_Singularity_Gui_Panel_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Panel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Panel* self = (Singularity::Gui::Panel*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddControl of class  Singularity::Gui::Panel */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Panel_AddControl00
static int tolua_Singularity_scripting_Singularity_Gui_Panel_AddControl00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Panel",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Panel* self = (Singularity::Gui::Panel*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::Control* control = ((Singularity::Gui::Control*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddControl'", NULL);
#endif
  {
   self->AddControl(control);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddControl'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveControl of class  Singularity::Gui::Panel */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Panel_RemoveControl00
static int tolua_Singularity_scripting_Singularity_Gui_Panel_RemoveControl00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Panel",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Panel* self = (Singularity::Gui::Panel*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::Control* control = ((Singularity::Gui::Control*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveControl'", NULL);
#endif
  {
   self->RemoveControl(control);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveControl'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPadding of class  Singularity::Gui::Panel */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Panel_SetPadding00
static int tolua_Singularity_scripting_Singularity_Gui_Panel_SetPadding00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Panel",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Panel* self = (Singularity::Gui::Panel*)  tolua_tousertype(tolua_S,1,0);
  unsigned left = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  unsigned top = ((unsigned)  tolua_tonumber(tolua_S,3,0));
  unsigned right = ((unsigned)  tolua_tonumber(tolua_S,4,0));
  unsigned bottom = ((unsigned)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPadding'", NULL);
#endif
  {
   self->SetPadding(left,top,right,bottom);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPadding'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Draggable of class  Singularity::Gui::Window */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Window_Get_Draggable00
static int tolua_Singularity_scripting_Singularity_Gui_Window_Get_Draggable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::Window",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::Window* self = (const Singularity::Gui::Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Draggable'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->Get_Draggable();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Draggable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Draggable of class  Singularity::Gui::Window */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Window_Set_Draggable00
static int tolua_Singularity_scripting_Singularity_Gui_Window_Set_Draggable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Window",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Window* self = (Singularity::Gui::Window*)  tolua_tousertype(tolua_S,1,0);
  const bool value = ((const bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Draggable'", NULL);
#endif
  {
   self->Set_Draggable(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Draggable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::Window */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Window_new00
static int tolua_Singularity_scripting_Singularity_Gui_Window_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Window",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Gui::Window* tolua_ret = (Singularity::Gui::Window*)  Mtolua_new((Singularity::Gui::Window)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Window");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::Window */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Window_new00_local
static int tolua_Singularity_scripting_Singularity_Gui_Window_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Window",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Gui::Window* tolua_ret = (Singularity::Gui::Window*)  Mtolua_new((Singularity::Gui::Window)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Window");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::Window */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Window_new01
static int tolua_Singularity_scripting_Singularity_Gui_Window_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Window",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Vector2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"Vector2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Gui::NinePatch* texture = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,3,0));
  Vector2 position = *((Vector2*)  tolua_tousertype(tolua_S,4,0));
  Vector2 size = *((Vector2*)  tolua_tousertype(tolua_S,5,0));
  {
   Singularity::Gui::Window* tolua_ret = (Singularity::Gui::Window*)  Mtolua_new((Singularity::Gui::Window)(name,texture,position,size));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Window");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_Window_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::Window */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Window_new01_local
static int tolua_Singularity_scripting_Singularity_Gui_Window_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Window",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Vector2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"Vector2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Gui::NinePatch* texture = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,3,0));
  Vector2 position = *((Vector2*)  tolua_tousertype(tolua_S,4,0));
  Vector2 size = *((Vector2*)  tolua_tousertype(tolua_S,5,0));
  {
   Singularity::Gui::Window* tolua_ret = (Singularity::Gui::Window*)  Mtolua_new((Singularity::Gui::Window)(name,texture,position,size));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Window");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_Window_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Gui::Window */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Window_delete00
static int tolua_Singularity_scripting_Singularity_Gui_Window_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Window",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Window* self = (Singularity::Gui::Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFocus of class  Singularity::Gui::Window */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Window_SetFocus00
static int tolua_Singularity_scripting_Singularity_Gui_Window_SetFocus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Window",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Window* self = (Singularity::Gui::Window*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFocus'", NULL);
#endif
  {
   self->SetFocus();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFocus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Click of class  Singularity::Gui::Button */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Gui__Button_Click
static int tolua_get_Singularity__Gui__Button_Click(lua_State* tolua_S)
{
  Singularity::Gui::Button* self = (Singularity::Gui::Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Click'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Click,"Singularity::DelegateHandler");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Click of class  Singularity::Gui::Button */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Gui__Button_Click
static int tolua_set_Singularity__Gui__Button_Click(lua_State* tolua_S)
{
  Singularity::Gui::Button* self = (Singularity::Gui::Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Click'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::DelegateHandler",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Click = *((Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::Button */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Button_new00
static int tolua_Singularity_scripting_Singularity_Gui_Button_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Button",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  std::string text = ((std::string)  tolua_tocppstring(tolua_S,3,0));
  {
   Singularity::Gui::Button* tolua_ret = (Singularity::Gui::Button*)  Mtolua_new((Singularity::Gui::Button)(name,text));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Button");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::Button */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Button_new00_local
static int tolua_Singularity_scripting_Singularity_Gui_Button_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Button",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  std::string text = ((std::string)  tolua_tocppstring(tolua_S,3,0));
  {
   Singularity::Gui::Button* tolua_ret = (Singularity::Gui::Button*)  Mtolua_new((Singularity::Gui::Button)(name,text));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Button");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Gui::Button */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Button_delete00
static int tolua_Singularity_scripting_Singularity_Gui_Button_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Button",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Button* self = (Singularity::Gui::Button*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::Checkbox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Checkbox_new00
static int tolua_Singularity_scripting_Singularity_Gui_Checkbox_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Checkbox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  bool isChecked = ((bool)  tolua_toboolean(tolua_S,3,false));
  {
   Singularity::Gui::Checkbox* tolua_ret = (Singularity::Gui::Checkbox*)  Mtolua_new((Singularity::Gui::Checkbox)(name,isChecked));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Checkbox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::Checkbox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Checkbox_new00_local
static int tolua_Singularity_scripting_Singularity_Gui_Checkbox_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Checkbox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  bool isChecked = ((bool)  tolua_toboolean(tolua_S,3,false));
  {
   Singularity::Gui::Checkbox* tolua_ret = (Singularity::Gui::Checkbox*)  Mtolua_new((Singularity::Gui::Checkbox)(name,isChecked));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Checkbox");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::Checkbox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Checkbox_new01
static int tolua_Singularity_scripting_Singularity_Gui_Checkbox_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Checkbox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"Vector2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"Vector2",0,&tolua_err)) ||
     !tolua_isboolean(tolua_S,7,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Gui::NinePatch* uncheckedTexture = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,3,0));
  Singularity::Gui::NinePatch* checkedTexture = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,4,0));
  Vector2 position = *((Vector2*)  tolua_tousertype(tolua_S,5,0));
  Vector2 size = *((Vector2*)  tolua_tousertype(tolua_S,6,0));
  bool isChecked = ((bool)  tolua_toboolean(tolua_S,7,false));
  {
   Singularity::Gui::Checkbox* tolua_ret = (Singularity::Gui::Checkbox*)  Mtolua_new((Singularity::Gui::Checkbox)(name,uncheckedTexture,checkedTexture,position,size,isChecked));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Checkbox");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_Checkbox_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::Checkbox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Checkbox_new01_local
static int tolua_Singularity_scripting_Singularity_Gui_Checkbox_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Checkbox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"Vector2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"Vector2",0,&tolua_err)) ||
     !tolua_isboolean(tolua_S,7,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Gui::NinePatch* uncheckedTexture = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,3,0));
  Singularity::Gui::NinePatch* checkedTexture = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,4,0));
  Vector2 position = *((Vector2*)  tolua_tousertype(tolua_S,5,0));
  Vector2 size = *((Vector2*)  tolua_tousertype(tolua_S,6,0));
  bool isChecked = ((bool)  tolua_toboolean(tolua_S,7,false));
  {
   Singularity::Gui::Checkbox* tolua_ret = (Singularity::Gui::Checkbox*)  Mtolua_new((Singularity::Gui::Checkbox)(name,uncheckedTexture,checkedTexture,position,size,isChecked));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Checkbox");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_Checkbox_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Gui::Checkbox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Checkbox_delete00
static int tolua_Singularity_scripting_Singularity_Gui_Checkbox_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Checkbox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Checkbox* self = (Singularity::Gui::Checkbox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_IsChecked of class  Singularity::Gui::Checkbox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Checkbox_Get_IsChecked00
static int tolua_Singularity_scripting_Singularity_Gui_Checkbox_Get_IsChecked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Gui::Checkbox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Gui::Checkbox* self = (const Singularity::Gui::Checkbox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_IsChecked'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->Get_IsChecked();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_IsChecked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_IsChecked of class  Singularity::Gui::Checkbox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Checkbox_Set_IsChecked00
static int tolua_Singularity_scripting_Singularity_Gui_Checkbox_Set_IsChecked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Checkbox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Checkbox* self = (Singularity::Gui::Checkbox*)  tolua_tousertype(tolua_S,1,0);
  const bool value = ((const bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_IsChecked'", NULL);
#endif
  {
   self->Set_IsChecked(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_IsChecked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_UncheckedTexture of class  Singularity::Gui::Checkbox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Checkbox_Set_UncheckedTexture00
static int tolua_Singularity_scripting_Singularity_Gui_Checkbox_Set_UncheckedTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Checkbox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Checkbox* self = (Singularity::Gui::Checkbox*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::NinePatch* value = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_UncheckedTexture'", NULL);
#endif
  {
   self->Set_UncheckedTexture(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_UncheckedTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_CheckedTexture of class  Singularity::Gui::Checkbox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Checkbox_Set_CheckedTexture00
static int tolua_Singularity_scripting_Singularity_Gui_Checkbox_Set_CheckedTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Checkbox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Checkbox* self = (Singularity::Gui::Checkbox*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::NinePatch* value = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_CheckedTexture'", NULL);
#endif
  {
   self->Set_CheckedTexture(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_CheckedTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::Image */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Image_new00
static int tolua_Singularity_scripting_Singularity_Gui_Image_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Image",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Gui::Image* tolua_ret = (Singularity::Gui::Image*)  Mtolua_new((Singularity::Gui::Image)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Image");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::Image */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Image_new00_local
static int tolua_Singularity_scripting_Singularity_Gui_Image_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Image",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Gui::Image* tolua_ret = (Singularity::Gui::Image*)  Mtolua_new((Singularity::Gui::Image)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Image");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::Image */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Image_new01
static int tolua_Singularity_scripting_Singularity_Gui_Image_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Image",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Vector2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"Vector2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Gui::NinePatch* texture = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,3,0));
  Vector2 position = *((Vector2*)  tolua_tousertype(tolua_S,4,0));
  Vector2 size = *((Vector2*)  tolua_tousertype(tolua_S,5,0));
  {
   Singularity::Gui::Image* tolua_ret = (Singularity::Gui::Image*)  Mtolua_new((Singularity::Gui::Image)(name,texture,position,size));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Image");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_Image_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::Image */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Image_new01_local
static int tolua_Singularity_scripting_Singularity_Gui_Image_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Image",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Vector2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"Vector2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Gui::NinePatch* texture = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,3,0));
  Vector2 position = *((Vector2*)  tolua_tousertype(tolua_S,4,0));
  Vector2 size = *((Vector2*)  tolua_tousertype(tolua_S,5,0));
  {
   Singularity::Gui::Image* tolua_ret = (Singularity::Gui::Image*)  Mtolua_new((Singularity::Gui::Image)(name,texture,position,size));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Image");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_Image_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Gui::Image */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Image_delete00
static int tolua_Singularity_scripting_Singularity_Gui_Image_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Image",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Image* self = (Singularity::Gui::Image*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::Label */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Label_new00
static int tolua_Singularity_scripting_Singularity_Gui_Label_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Label",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  std::string text = ((std::string)  tolua_tocppstring(tolua_S,3,""));
  {
   Singularity::Gui::Label* tolua_ret = (Singularity::Gui::Label*)  Mtolua_new((Singularity::Gui::Label)(name,text));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Label");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::Label */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Label_new00_local
static int tolua_Singularity_scripting_Singularity_Gui_Label_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::Label",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  std::string text = ((std::string)  tolua_tocppstring(tolua_S,3,""));
  {
   Singularity::Gui::Label* tolua_ret = (Singularity::Gui::Label*)  Mtolua_new((Singularity::Gui::Label)(name,text));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::Label");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Gui::Label */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_Label_delete00
static int tolua_Singularity_scripting_Singularity_Gui_Label_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::Label",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::Label* self = (Singularity::Gui::Label*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::TextBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextBox_new00
static int tolua_Singularity_scripting_Singularity_Gui_TextBox_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::TextBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  std::string text = ((std::string)  tolua_tocppstring(tolua_S,3,""));
  {
   Singularity::Gui::TextBox* tolua_ret = (Singularity::Gui::TextBox*)  Mtolua_new((Singularity::Gui::TextBox)(name,text));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::TextBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::TextBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextBox_new00_local
static int tolua_Singularity_scripting_Singularity_Gui_TextBox_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::TextBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  std::string text = ((std::string)  tolua_tocppstring(tolua_S,3,""));
  {
   Singularity::Gui::TextBox* tolua_ret = (Singularity::Gui::TextBox*)  Mtolua_new((Singularity::Gui::TextBox)(name,text));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::TextBox");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::TextBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextBox_new01
static int tolua_Singularity_scripting_Singularity_Gui_TextBox_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::TextBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Material",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Material",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Material* material = ((Material*)  tolua_tousertype(tolua_S,3,0));
  Material* fontMaterial = ((Material*)  tolua_tousertype(tolua_S,4,0));
  std::string text = ((std::string)  tolua_tocppstring(tolua_S,5,""));
  {
   Singularity::Gui::TextBox* tolua_ret = (Singularity::Gui::TextBox*)  Mtolua_new((Singularity::Gui::TextBox)(name,material,fontMaterial,text));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::TextBox");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_TextBox_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::TextBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextBox_new01_local
static int tolua_Singularity_scripting_Singularity_Gui_TextBox_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::TextBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Material",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Material",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Material* material = ((Material*)  tolua_tousertype(tolua_S,3,0));
  Material* fontMaterial = ((Material*)  tolua_tousertype(tolua_S,4,0));
  std::string text = ((std::string)  tolua_tocppstring(tolua_S,5,""));
  {
   Singularity::Gui::TextBox* tolua_ret = (Singularity::Gui::TextBox*)  Mtolua_new((Singularity::Gui::TextBox)(name,material,fontMaterial,text));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::TextBox");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_TextBox_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Gui::TextBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_TextBox_delete00
static int tolua_Singularity_scripting_Singularity_Gui_TextBox_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::TextBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::TextBox* self = (Singularity::Gui::TextBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::ListBoxElement */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_new00
static int tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::ListBoxElement",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Gui::ListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string text = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Gui::ListBox* parent = ((Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,3,0));
  {
   Singularity::Gui::ListBoxElement* tolua_ret = (Singularity::Gui::ListBoxElement*)  Mtolua_new((Singularity::Gui::ListBoxElement)(text,parent));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::ListBoxElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::ListBoxElement */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_new00_local
static int tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::ListBoxElement",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Gui::ListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string text = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Gui::ListBox* parent = ((Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,3,0));
  {
   Singularity::Gui::ListBoxElement* tolua_ret = (Singularity::Gui::ListBoxElement*)  Mtolua_new((Singularity::Gui::ListBoxElement)(text,parent));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::ListBoxElement");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Gui::ListBoxElement */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_delete00
static int tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBoxElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::ListBoxElement* self = (Singularity::Gui::ListBoxElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_OptionTexture of class  Singularity::Gui::ListBoxElement */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_Set_OptionTexture00
static int tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_Set_OptionTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBoxElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::ListBoxElement* self = (Singularity::Gui::ListBoxElement*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::NinePatch* value = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_OptionTexture'", NULL);
#endif
  {
   self->Set_OptionTexture(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_OptionTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_HighlightTexture of class  Singularity::Gui::ListBoxElement */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_Set_HighlightTexture00
static int tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_Set_HighlightTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBoxElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::ListBoxElement* self = (Singularity::Gui::ListBoxElement*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::NinePatch* value = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_HighlightTexture'", NULL);
#endif
  {
   self->Set_HighlightTexture(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_HighlightTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_OptionColor of class  Singularity::Gui::ListBoxElement */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_Set_OptionColor00
static int tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_Set_OptionColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBoxElement",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::ListBoxElement* self = (Singularity::Gui::ListBoxElement*)  tolua_tousertype(tolua_S,1,0);
  Color value = *((Color*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_OptionColor'", NULL);
#endif
  {
   self->Set_OptionColor(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_OptionColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_OptionHighlightColor of class  Singularity::Gui::ListBoxElement */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_Set_OptionHighlightColor00
static int tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_Set_OptionHighlightColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBoxElement",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::ListBoxElement* self = (Singularity::Gui::ListBoxElement*)  tolua_tousertype(tolua_S,1,0);
  Color value = *((Color*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_OptionHighlightColor'", NULL);
#endif
  {
   self->Set_OptionHighlightColor(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_OptionHighlightColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Gui::ListBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBox_new00
static int tolua_Singularity_scripting_Singularity_Gui_ListBox_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::ListBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Gui::ListBox* tolua_ret = (Singularity::Gui::ListBox*)  Mtolua_new((Singularity::Gui::ListBox)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::ListBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Gui::ListBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBox_new00_local
static int tolua_Singularity_scripting_Singularity_Gui_ListBox_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Gui::ListBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Gui::ListBox* tolua_ret = (Singularity::Gui::ListBox*)  Mtolua_new((Singularity::Gui::ListBox)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Gui::ListBox");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Gui::ListBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBox_delete00
static int tolua_Singularity_scripting_Singularity_Gui_ListBox_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::ListBox* self = (Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Select of class  Singularity::Gui::ListBox */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Gui__ListBox_Select
static int tolua_get_Singularity__Gui__ListBox_Select(lua_State* tolua_S)
{
  Singularity::Gui::ListBox* self = (Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Select'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Select,"Singularity::DelegateHandler");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Select of class  Singularity::Gui::ListBox */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Gui__ListBox_Select
static int tolua_set_Singularity__Gui__ListBox_Select(lua_State* tolua_S)
{
  Singularity::Gui::ListBox* self = (Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Select'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::DelegateHandler",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Select = *((Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveOption of class  Singularity::Gui::ListBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBox_RemoveOption00
static int tolua_Singularity_scripting_Singularity_Gui_ListBox_RemoveOption00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::ListBox* self = (Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,1,0);
  int optionNum = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveOption'", NULL);
#endif
  {
   self->RemoveOption(optionNum);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveOption'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveOption of class  Singularity::Gui::ListBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBox_RemoveOption01
static int tolua_Singularity_scripting_Singularity_Gui_ListBox_RemoveOption01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Gui::ListBox* self = (Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,1,0);
  std::string optionName = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveOption'", NULL);
#endif
  {
   self->RemoveOption(optionName);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_ListBox_RemoveOption00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddOption of class  Singularity::Gui::ListBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBox_AddOption00
static int tolua_Singularity_scripting_Singularity_Gui_ListBox_AddOption00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::ListBox* self = (Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,1,0);
  std::string optionName = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddOption'", NULL);
#endif
  {
   self->AddOption(optionName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddOption'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddOption of class  Singularity::Gui::ListBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBox_AddOption01
static int tolua_Singularity_scripting_Singularity_Gui_ListBox_AddOption01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Gui::ListBox* self = (Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,1,0);
  std::string optionName = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  int insertLocation = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddOption'", NULL);
#endif
  {
   self->AddOption(optionName,insertLocation);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Gui_ListBox_AddOption00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  Singularity::Gui::ListBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBox_Clear00
static int tolua_Singularity_scripting_Singularity_Gui_ListBox_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::ListBox* self = (Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Extended of class  Singularity::Gui::ListBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBox_Set_Extended00
static int tolua_Singularity_scripting_Singularity_Gui_ListBox_Set_Extended00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::ListBox* self = (Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,1,0);
  bool extended = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Extended'", NULL);
#endif
  {
   self->Set_Extended(extended);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Extended'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ItemSelected of class  Singularity::Gui::ListBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBox_ItemSelected00
static int tolua_Singularity_scripting_Singularity_Gui_ListBox_ItemSelected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::ListBoxElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::ListBox* self = (Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::ListBoxElement* item = ((Singularity::Gui::ListBoxElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ItemSelected'", NULL);
#endif
  {
   self->ItemSelected(item);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ItemSelected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: InitializeListBox of class  Singularity::Gui::ListBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBox_InitializeListBox00
static int tolua_Singularity_scripting_Singularity_Gui_ListBox_InitializeListBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::ListBox* self = (Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'InitializeListBox'", NULL);
#endif
  {
   self->InitializeListBox();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'InitializeListBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_OptionTexture of class  Singularity::Gui::ListBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBox_Set_OptionTexture00
static int tolua_Singularity_scripting_Singularity_Gui_ListBox_Set_OptionTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::ListBox* self = (Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::NinePatch* value = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_OptionTexture'", NULL);
#endif
  {
   self->Set_OptionTexture(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_OptionTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_OptionHighlightTexture of class  Singularity::Gui::ListBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBox_Set_OptionHighlightTexture00
static int tolua_Singularity_scripting_Singularity_Gui_ListBox_Set_OptionHighlightTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::NinePatch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::ListBox* self = (Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::NinePatch* value = ((Singularity::Gui::NinePatch*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_OptionHighlightTexture'", NULL);
#endif
  {
   self->Set_OptionHighlightTexture(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_OptionHighlightTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_OptionFontColor of class  Singularity::Gui::ListBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBox_Set_OptionFontColor00
static int tolua_Singularity_scripting_Singularity_Gui_ListBox_Set_OptionFontColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::ListBox* self = (Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,1,0);
  Color value = *((Color*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_OptionFontColor'", NULL);
#endif
  {
   self->Set_OptionFontColor(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_OptionFontColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_OptionHighlightColor of class  Singularity::Gui::ListBox */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Gui_ListBox_Set_OptionHighlightColor00
static int tolua_Singularity_scripting_Singularity_Gui_ListBox_Set_OptionHighlightColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Gui::ListBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Gui::ListBox* self = (Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,1,0);
  Color value = *((Color*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_OptionHighlightColor'", NULL);
#endif
  {
   self->Set_OptionHighlightColor(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_OptionHighlightColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadModel of class  Singularity::Content::ModelLoader */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Content_ModelLoader_LoadModel00
static int tolua_Singularity_scripting_Singularity_Content_ModelLoader_LoadModel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Content::ModelLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Content::IModelImporter",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string path = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Content::IModelImporter* importer = ((Singularity::Content::IModelImporter*)  tolua_tousertype(tolua_S,3,NULL));
  {
   Singularity::Components::GameObject* tolua_ret = (Singularity::Components::GameObject*)  Singularity::Content::ModelLoader::LoadModel(path,importer);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Components::GameObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadModel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadMesh of class  Singularity::Content::ModelLoader */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Content_ModelLoader_LoadMesh00
static int tolua_Singularity_scripting_Singularity_Content_ModelLoader_LoadMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Content::ModelLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Singularity::Content::IModelImporter",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string path = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  int index = ((int)  tolua_tonumber(tolua_S,3,0));
  Singularity::Content::IModelImporter* importer = ((Singularity::Content::IModelImporter*)  tolua_tousertype(tolua_S,4,NULL));
  {
   Singularity::Graphics::Mesh* tolua_ret = (Singularity::Graphics::Mesh*)  Singularity::Content::ModelLoader::LoadMesh(path,index,importer);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Mesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadMaterial of class  Singularity::Content::ModelLoader */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Content_ModelLoader_LoadMaterial00
static int tolua_Singularity_scripting_Singularity_Content_ModelLoader_LoadMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Content::ModelLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Singularity::Content::IModelImporter",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string path = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  int index = ((int)  tolua_tonumber(tolua_S,3,0));
  Singularity::Content::IModelImporter* importer = ((Singularity::Content::IModelImporter*)  tolua_tousertype(tolua_S,4,NULL));
  {
   Singularity::Graphics::Material* tolua_ret = (Singularity::Graphics::Material*)  Singularity::Content::ModelLoader::LoadMaterial(path,index,importer);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Material");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Content::SmurfModelImporter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Content_SmurfModelImporter_new00
static int tolua_Singularity_scripting_Singularity_Content_SmurfModelImporter_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Content::SmurfModelImporter",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string defaultPath = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Content::SmurfModelImporter* tolua_ret = (Singularity::Content::SmurfModelImporter*)  Mtolua_new((Singularity::Content::SmurfModelImporter)(defaultPath));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Content::SmurfModelImporter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Content::SmurfModelImporter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Content_SmurfModelImporter_new00_local
static int tolua_Singularity_scripting_Singularity_Content_SmurfModelImporter_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Content::SmurfModelImporter",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string defaultPath = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Content::SmurfModelImporter* tolua_ret = (Singularity::Content::SmurfModelImporter*)  Mtolua_new((Singularity::Content::SmurfModelImporter)(defaultPath));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Content::SmurfModelImporter");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Content::SmurfModelImporter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Content_SmurfModelImporter_delete00
static int tolua_Singularity_scripting_Singularity_Content_SmurfModelImporter_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Content::SmurfModelImporter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Content::SmurfModelImporter* self = (Singularity::Content::SmurfModelImporter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadCollisionData of class  Singularity::Content::SmurfModelImporter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Content_SmurfModelImporter_LoadCollisionData00
static int tolua_Singularity_scripting_Singularity_Content_SmurfModelImporter_LoadCollisionData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Content::SmurfModelImporter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Content::SmurfModelImporter* self = (Singularity::Content::SmurfModelImporter*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Components::GameObject* object = ((Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadCollisionData'", NULL);
#endif
  {
   self->LoadCollisionData(object);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadCollisionData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_new00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Audio::AudioManager* tolua_ret = (Singularity::Audio::AudioManager*)  Mtolua_new((Singularity::Audio::AudioManager)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AudioManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_new00_local
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Audio::AudioManager* tolua_ret = (Singularity::Audio::AudioManager*)  Mtolua_new((Singularity::Audio::AudioManager)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AudioManager");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_delete00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UpdateEngine of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_UpdateEngine00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_UpdateEngine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UpdateEngine'", NULL);
#endif
  {
   self->UpdateEngine();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UpdateEngine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CleanUp of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_CleanUp00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_CleanUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CleanUp'", NULL);
#endif
  {
   self->CleanUp();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CleanUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: TestEngine of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_TestEngine00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_TestEngine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'TestEngine'", NULL);
#endif
  {
   self->TestEngine();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'TestEngine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Initialize of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_Initialize00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_Initialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Initialize'", NULL);
#endif
  {
   self->Initialize();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Initialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadWaveBank of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_LoadWaveBank00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_LoadWaveBank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
  string path = ((string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadWaveBank'", NULL);
#endif
  {
   Singularity::Audio::WaveBank* tolua_ret = (Singularity::Audio::WaveBank*)  self->LoadWaveBank(path);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::WaveBank");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadWaveBank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadStreamingWaveBank of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_LoadStreamingWaveBank00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_LoadStreamingWaveBank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
  string path = ((string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadStreamingWaveBank'", NULL);
#endif
  {
   Singularity::Audio::WaveBank* tolua_ret = (Singularity::Audio::WaveBank*)  self->LoadStreamingWaveBank(path);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::WaveBank");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadStreamingWaveBank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadSoundBank of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_LoadSoundBank00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_LoadSoundBank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
  string path = ((string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadSoundBank'", NULL);
#endif
  {
   Singularity::Audio::SoundBank* tolua_ret = (Singularity::Audio::SoundBank*)  self->LoadSoundBank(path);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::SoundBank");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadSoundBank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateEngine of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_CreateEngine00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_CreateEngine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
  string path = ((string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateEngine'", NULL);
#endif
  {
   self->CreateEngine(path);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateEngine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNewEmitter of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_GetNewEmitter00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_GetNewEmitter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
  string cueName = ((string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNewEmitter'", NULL);
#endif
  {
   Singularity::Audio::AudioEmitter* tolua_ret = (Singularity::Audio::AudioEmitter*)  self->GetNewEmitter(cueName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AudioEmitter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNewEmitter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSingleListener of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_GetSingleListener00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_GetSingleListener00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSingleListener'", NULL);
#endif
  {
   Singularity::Audio::AudioListener* tolua_ret = (Singularity::Audio::AudioListener*)  self->GetSingleListener();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AudioListener");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSingleListener'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Calculate3dPosition of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_Calculate3dPosition00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_Calculate3dPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Audio::AudioListener",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Audio::AudioEmitter* emit = ((Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,2,0));
  Singularity::Audio::AudioListener* listener = ((Singularity::Audio::AudioListener*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Calculate3dPosition'", NULL);
#endif
  {
   self->Calculate3dPosition(emit,listener);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Calculate3dPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateCue of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_CreateCue00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_CreateCue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
  string cueName = ((string)  tolua_tocppstring(tolua_S,2,0));
  bool isLooping = ((bool)  tolua_toboolean(tolua_S,3,false));
  bool is3d = ((bool)  tolua_toboolean(tolua_S,4,false));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateCue'", NULL);
#endif
  {
   Singularity::Audio::Cue* tolua_ret = (Singularity::Audio::Cue*)  self->CreateCue(cueName,isLooping,is3d);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::Cue");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateCue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PauseEngine of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_PauseEngine00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_PauseEngine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PauseEngine'", NULL);
#endif
  {
   self->PauseEngine();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PauseEngine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PauseEngine of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_PauseEngine01
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_PauseEngine01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
  bool becomePaused = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PauseEngine'", NULL);
#endif
  {
   self->PauseEngine(becomePaused);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Audio_AudioManager_PauseEngine00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: MuteEngine of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_MuteEngine00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_MuteEngine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'MuteEngine'", NULL);
#endif
  {
   self->MuteEngine();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'MuteEngine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: MuteEngine of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_MuteEngine01
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_MuteEngine01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
  bool becomeMuted = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'MuteEngine'", NULL);
#endif
  {
   self->MuteEngine(becomeMuted);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Audio_AudioManager_MuteEngine00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: StopAll of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_StopAll00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_StopAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'StopAll'", NULL);
#endif
  {
   self->StopAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'StopAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVolume of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_SetVolume00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_SetVolume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioManager* self = (Singularity::Audio::AudioManager*)  tolua_tousertype(tolua_S,1,0);
  string category = ((string)  tolua_tocppstring(tolua_S,2,0));
  float volume = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVolume'", NULL);
#endif
  {
   self->SetVolume(category,volume);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetVolume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Instantiate of class  Singularity::Audio::AudioManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioManager_Instantiate00
static int tolua_Singularity_scripting_Singularity_Audio_AudioManager_Instantiate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AudioManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Audio::AudioManager* tolua_ret = (Singularity::Audio::AudioManager*)  Singularity::Audio::AudioManager::Instantiate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AudioManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Instantiate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_new00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Audio::AudioEmitter* tolua_ret = (Singularity::Audio::AudioEmitter*)  Mtolua_new((Singularity::Audio::AudioEmitter)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AudioEmitter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_new00_local
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Audio::AudioEmitter* tolua_ret = (Singularity::Audio::AudioEmitter*)  Mtolua_new((Singularity::Audio::AudioEmitter)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AudioEmitter");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_delete00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnComponentAdded of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_OnComponentAdded00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_OnComponentAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Components::GameObject* gameObject = ((Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnComponentAdded'", NULL);
#endif
  {
   self->OnComponentAdded(gameObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnComponentAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnComponentRemoved of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_OnComponentRemoved00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_OnComponentRemoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Components::GameObject* gameObject = ((Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnComponentRemoved'", NULL);
#endif
  {
   self->OnComponentRemoved(gameObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnComponentRemoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Play of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Play00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Play00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Play'", NULL);
#endif
  {
   self->Play(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Play'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Pause of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Pause00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Pause00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Pause'", NULL);
#endif
  {
   self->Pause(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Pause'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Pause of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Pause01
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Pause01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
  bool becomePaused = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Pause'", NULL);
#endif
  {
   self->Pause(index,becomePaused);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Pause00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Stop of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Stop00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Stop'", NULL);
#endif
  {
   self->Stop(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UpdateState of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_UpdateState00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_UpdateState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UpdateState'", NULL);
#endif
  {
   self->UpdateState(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UpdateState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CalculateDSP of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_CalculateDSP00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_CalculateDSP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Audio::AudioListener",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Audio::AudioListener* listener = ((Singularity::Audio::AudioListener*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CalculateDSP'", NULL);
#endif
  {
   self->CalculateDSP(listener);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CalculateDSP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Offset of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Set_Offset00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Set_Offset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
  Vector3 offset = *((Vector3*)  tolua_tousertype(tolua_S,2,0));
  Vector3 offsetDirection = *((Vector3*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Offset'", NULL);
#endif
  {
   self->Set_Offset(offset,offsetDirection);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Offset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddCue of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_AddCue00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_AddCue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Audio::Cue* cue = ((Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddCue'", NULL);
#endif
  {
   self->AddCue(cue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddCue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_IsPlaying of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_IsPlaying00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_IsPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_IsPlaying'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Get_IsPlaying(index);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_IsPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_IsPaused of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_IsPaused00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_IsPaused00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_IsPaused'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Get_IsPaused(index);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_IsPaused'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_IsLooping of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_IsLooping00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_IsLooping00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_IsLooping'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Get_IsLooping(index);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_IsLooping'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Is3dPositional of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_Is3dPositional00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_Is3dPositional00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Is3dPositional'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Get_Is3dPositional(index);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Is3dPositional'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_NumberOfCues of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_NumberOfCues00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_NumberOfCues00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_NumberOfCues'", NULL);
#endif
  {
   int tolua_ret = (int)  self->Get_NumberOfCues();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_NumberOfCues'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Cue of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_Cue00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_Cue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Cue'", NULL);
#endif
  {
   Singularity::Audio::Cue* tolua_ret = (Singularity::Audio::Cue*)  self->Get_Cue(index);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::Cue");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Cue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_EmitterCueIndex of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_EmitterCueIndex00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_EmitterCueIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
  string xactFriendlyName = ((string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_EmitterCueIndex'", NULL);
#endif
  {
   int tolua_ret = (int)  self->Get_EmitterCueIndex(xactFriendlyName);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_EmitterCueIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetX3dEmitter of class  Singularity::Audio::AudioEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_GetX3dEmitter00
static int tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_GetX3dEmitter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioEmitter* self = (Singularity::Audio::AudioEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetX3dEmitter'", NULL);
#endif
  {
   X3DAUDIO_EMITTER tolua_ret = (X3DAUDIO_EMITTER)  self->GetX3dEmitter();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((X3DAUDIO_EMITTER)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"X3DAUDIO_EMITTER");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(X3DAUDIO_EMITTER));
     tolua_pushusertype(tolua_S,tolua_obj,"X3DAUDIO_EMITTER");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetX3dEmitter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Audio::AudioListener */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioListener_new00
static int tolua_Singularity_scripting_Singularity_Audio_AudioListener_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AudioListener",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Audio::AudioListener* tolua_ret = (Singularity::Audio::AudioListener*)  Mtolua_new((Singularity::Audio::AudioListener)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AudioListener");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Audio::AudioListener */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioListener_new00_local
static int tolua_Singularity_scripting_Singularity_Audio_AudioListener_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AudioListener",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Audio::AudioListener* tolua_ret = (Singularity::Audio::AudioListener*)  Mtolua_new((Singularity::Audio::AudioListener)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AudioListener");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Audio::AudioListener */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioListener_delete00
static int tolua_Singularity_scripting_Singularity_Audio_AudioListener_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioListener",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioListener* self = (Singularity::Audio::AudioListener*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnComponentAdded of class  Singularity::Audio::AudioListener */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioListener_OnComponentAdded00
static int tolua_Singularity_scripting_Singularity_Audio_AudioListener_OnComponentAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioListener",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioListener* self = (Singularity::Audio::AudioListener*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Components::GameObject* gameObject = ((Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnComponentAdded'", NULL);
#endif
  {
   self->OnComponentAdded(gameObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnComponentAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnComponentRemoved of class  Singularity::Audio::AudioListener */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioListener_OnComponentRemoved00
static int tolua_Singularity_scripting_Singularity_Audio_AudioListener_OnComponentRemoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioListener",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Components::GameObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioListener* self = (Singularity::Audio::AudioListener*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Components::GameObject* gameObject = ((Singularity::Components::GameObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnComponentRemoved'", NULL);
#endif
  {
   self->OnComponentRemoved(gameObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnComponentRemoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Initialize of class  Singularity::Audio::AudioListener */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioListener_Initialize00
static int tolua_Singularity_scripting_Singularity_Audio_AudioListener_Initialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioListener",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioListener* self = (Singularity::Audio::AudioListener*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Initialize'", NULL);
#endif
  {
   self->Initialize();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Initialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetOffset of class  Singularity::Audio::AudioListener */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioListener_SetOffset00
static int tolua_Singularity_scripting_Singularity_Audio_AudioListener_SetOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioListener",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioListener* self = (Singularity::Audio::AudioListener*)  tolua_tousertype(tolua_S,1,0);
  Vector3 offset = *((Vector3*)  tolua_tousertype(tolua_S,2,0));
  Vector3 offsetDirection = *((Vector3*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetOffset'", NULL);
#endif
  {
   self->SetOffset(offset,offsetDirection);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UpdateState of class  Singularity::Audio::AudioListener */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioListener_UpdateState00
static int tolua_Singularity_scripting_Singularity_Audio_AudioListener_UpdateState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioListener",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioListener* self = (Singularity::Audio::AudioListener*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UpdateState'", NULL);
#endif
  {
   self->UpdateState();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UpdateState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetX3dListener of class  Singularity::Audio::AudioListener */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AudioListener_GetX3dListener00
static int tolua_Singularity_scripting_Singularity_Audio_AudioListener_GetX3dListener00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AudioListener",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AudioListener* self = (Singularity::Audio::AudioListener*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetX3dListener'", NULL);
#endif
  {
   X3DAUDIO_LISTENER tolua_ret = (X3DAUDIO_LISTENER)  self->GetX3dListener();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((X3DAUDIO_LISTENER)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"X3DAUDIO_LISTENER");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(X3DAUDIO_LISTENER));
     tolua_pushusertype(tolua_S,tolua_obj,"X3DAUDIO_LISTENER");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetX3dListener'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Audio::WaveBank */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_WaveBank_new00
static int tolua_Singularity_scripting_Singularity_Audio_WaveBank_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::WaveBank",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"IXACT3WaveBank",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"VOID",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  IXACT3WaveBank* waveBank = ((IXACT3WaveBank*)  tolua_tousertype(tolua_S,2,0));
  VOID* waveBankData = ((VOID*)  tolua_tousertype(tolua_S,3,0));
  {
   Singularity::Audio::WaveBank* tolua_ret = (Singularity::Audio::WaveBank*)  Mtolua_new((Singularity::Audio::WaveBank)(waveBank,waveBankData));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::WaveBank");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Audio::WaveBank */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_WaveBank_new00_local
static int tolua_Singularity_scripting_Singularity_Audio_WaveBank_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::WaveBank",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"IXACT3WaveBank",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"VOID",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  IXACT3WaveBank* waveBank = ((IXACT3WaveBank*)  tolua_tousertype(tolua_S,2,0));
  VOID* waveBankData = ((VOID*)  tolua_tousertype(tolua_S,3,0));
  {
   Singularity::Audio::WaveBank* tolua_ret = (Singularity::Audio::WaveBank*)  Mtolua_new((Singularity::Audio::WaveBank)(waveBank,waveBankData));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::WaveBank");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Audio::WaveBank */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_WaveBank_delete00
static int tolua_Singularity_scripting_Singularity_Audio_WaveBank_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::WaveBank",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::WaveBank* self = (Singularity::Audio::WaveBank*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Audio::SoundBank */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_SoundBank_new00
static int tolua_Singularity_scripting_Singularity_Audio_SoundBank_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::SoundBank",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"IXACT3SoundBank",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"VOID",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  IXACT3SoundBank* soundbank = ((IXACT3SoundBank*)  tolua_tousertype(tolua_S,2,0));
  VOID* soundbankData = ((VOID*)  tolua_tousertype(tolua_S,3,0));
  {
   Singularity::Audio::SoundBank* tolua_ret = (Singularity::Audio::SoundBank*)  Mtolua_new((Singularity::Audio::SoundBank)(soundbank,soundbankData));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::SoundBank");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Audio::SoundBank */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_SoundBank_new00_local
static int tolua_Singularity_scripting_Singularity_Audio_SoundBank_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::SoundBank",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"IXACT3SoundBank",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"VOID",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  IXACT3SoundBank* soundbank = ((IXACT3SoundBank*)  tolua_tousertype(tolua_S,2,0));
  VOID* soundbankData = ((VOID*)  tolua_tousertype(tolua_S,3,0));
  {
   Singularity::Audio::SoundBank* tolua_ret = (Singularity::Audio::SoundBank*)  Mtolua_new((Singularity::Audio::SoundBank)(soundbank,soundbankData));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::SoundBank");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Audio::SoundBank */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_SoundBank_delete00
static int tolua_Singularity_scripting_Singularity_Audio_SoundBank_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::SoundBank",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::SoundBank* self = (Singularity::Audio::SoundBank*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCueIndex of class  Singularity::Audio::SoundBank */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_SoundBank_GetCueIndex00
static int tolua_Singularity_scripting_Singularity_Audio_SoundBank_GetCueIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::SoundBank",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::SoundBank* self = (Singularity::Audio::SoundBank*)  tolua_tousertype(tolua_S,1,0);
  string friendlyName = ((string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCueIndex'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCueIndex(friendlyName);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCueIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PrepareNewCueFromCueIndex of class  Singularity::Audio::SoundBank */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_SoundBank_PrepareNewCueFromCueIndex00
static int tolua_Singularity_scripting_Singularity_Audio_SoundBank_PrepareNewCueFromCueIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::SoundBank",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::SoundBank* self = (Singularity::Audio::SoundBank*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PrepareNewCueFromCueIndex'", NULL);
#endif
  {
   Singularity::Audio::Cue* tolua_ret = (Singularity::Audio::Cue*)  self->PrepareNewCueFromCueIndex(index);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::Cue");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PrepareNewCueFromCueIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PrepareCurrentCue of class  Singularity::Audio::SoundBank */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_SoundBank_PrepareCurrentCue00
static int tolua_Singularity_scripting_Singularity_Audio_SoundBank_PrepareCurrentCue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::SoundBank",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"IXACT3Cue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::SoundBank* self = (Singularity::Audio::SoundBank*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
  IXACT3Cue* cue = ((IXACT3Cue*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PrepareCurrentCue'", NULL);
#endif
  {
   self->PrepareCurrentCue(index,&cue);
    tolua_pushusertype(tolua_S,(void*)cue,"IXACT3Cue");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PrepareCurrentCue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_new00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Audio::SoundBank",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"IXACT3Cue",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::SoundBank* soundbank = ((Singularity::Audio::SoundBank*)  tolua_tousertype(tolua_S,2,0));
  IXACT3Cue* cue = ((IXACT3Cue*)  tolua_tousertype(tolua_S,3,0));
  int index = ((int)  tolua_tonumber(tolua_S,4,0));
  std::string cueName = ((std::string)  tolua_tocppstring(tolua_S,5,""));
  {
   Singularity::Audio::Cue* tolua_ret = (Singularity::Audio::Cue*)  Mtolua_new((Singularity::Audio::Cue)(soundbank,cue,index,cueName));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::Cue");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_new00_local
static int tolua_Singularity_scripting_Singularity_Audio_Cue_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Audio::SoundBank",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"IXACT3Cue",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::SoundBank* soundbank = ((Singularity::Audio::SoundBank*)  tolua_tousertype(tolua_S,2,0));
  IXACT3Cue* cue = ((IXACT3Cue*)  tolua_tousertype(tolua_S,3,0));
  int index = ((int)  tolua_tonumber(tolua_S,4,0));
  std::string cueName = ((std::string)  tolua_tocppstring(tolua_S,5,""));
  {
   Singularity::Audio::Cue* tolua_ret = (Singularity::Audio::Cue*)  Mtolua_new((Singularity::Audio::Cue)(soundbank,cue,index,cueName));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::Cue");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_delete00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Initialize of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_Initialize00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_Initialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
  bool isLooping = ((bool)  tolua_toboolean(tolua_S,2,0));
  bool is3d = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Initialize'", NULL);
#endif
  {
   self->Initialize(isLooping,is3d);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Initialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UpdateState of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_UpdateState00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_UpdateState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UpdateState'", NULL);
#endif
  {
   self->UpdateState();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UpdateState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Apply3dCalculations of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_Apply3dCalculations00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_Apply3dCalculations00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"X3DAUDIO_DSP_SETTINGS",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
  X3DAUDIO_DSP_SETTINGS dsp = *((X3DAUDIO_DSP_SETTINGS*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Apply3dCalculations'", NULL);
#endif
  {
   self->Apply3dCalculations(dsp);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Apply3dCalculations'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResetCue of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_ResetCue00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_ResetCue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ResetCue'", NULL);
#endif
  {
   self->ResetCue();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetCue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PlayCue of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_PlayCue00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_PlayCue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PlayCue'", NULL);
#endif
  {
   self->PlayCue();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PlayCue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PauseCue of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_PauseCue00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_PauseCue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PauseCue'", NULL);
#endif
  {
   self->PauseCue();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PauseCue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PauseCue of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_PauseCue01
static int tolua_Singularity_scripting_Singularity_Audio_Cue_PauseCue01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
  bool becomePaused = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PauseCue'", NULL);
#endif
  {
   self->PauseCue(becomePaused);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Audio_Cue_PauseCue00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Stop of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_Stop00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_Stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Stop'", NULL);
#endif
  {
   self->Stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_VolumePercentage of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_Set_VolumePercentage00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_Set_VolumePercentage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
  float vol = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_VolumePercentage'", NULL);
#endif
  {
   self->Set_VolumePercentage(vol);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_VolumePercentage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_CueName of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_Set_CueName00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_Set_CueName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_CueName'", NULL);
#endif
  {
   self->Set_CueName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_CueName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_VolumePercentage of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_Get_VolumePercentage00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_Get_VolumePercentage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_VolumePercentage'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Get_VolumePercentage();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_VolumePercentage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Index of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_Get_Index00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_Get_Index00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Index'", NULL);
#endif
  {
   XACTINDEX tolua_ret = (XACTINDEX)  self->Get_Index();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((XACTINDEX)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"XACTINDEX");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(XACTINDEX));
     tolua_pushusertype(tolua_S,tolua_obj,"XACTINDEX");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Index'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_CueName of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_Get_CueName00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_Get_CueName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_CueName'", NULL);
#endif
  {
   string tolua_ret = (string)  self->Get_CueName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_CueName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_IsPlaying of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_Get_IsPlaying00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_Get_IsPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_IsPlaying'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Get_IsPlaying();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_IsPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_IsPaused of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_Get_IsPaused00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_Get_IsPaused00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_IsPaused'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Get_IsPaused();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_IsPaused'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_IsLooping of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_Get_IsLooping00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_Get_IsLooping00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_IsLooping'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Get_IsLooping();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_IsLooping'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Is3d of class  Singularity::Audio::Cue */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_Cue_Get_Is3d00
static int tolua_Singularity_scripting_Singularity_Audio_Cue_Get_Is3d00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::Cue* self = (Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Is3d'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Get_Is3d();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Is3d'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Audio::AdaptiveMusicManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_new00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AdaptiveMusicManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Audio::AdaptiveMusicManager* tolua_ret = (Singularity::Audio::AdaptiveMusicManager*)  Mtolua_new((Singularity::Audio::AdaptiveMusicManager)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AdaptiveMusicManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Audio::AdaptiveMusicManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_new00_local
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AdaptiveMusicManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Audio::AdaptiveMusicManager* tolua_ret = (Singularity::Audio::AdaptiveMusicManager*)  Mtolua_new((Singularity::Audio::AdaptiveMusicManager)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AdaptiveMusicManager");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Audio::AdaptiveMusicManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_delete00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveMusicManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveMusicManager* self = (Singularity::Audio::AdaptiveMusicManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddEnvironment of class  Singularity::Audio::AdaptiveMusicManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_AddEnvironment00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_AddEnvironment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveMusicManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Audio::AdaptiveEnvironment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveMusicManager* self = (Singularity::Audio::AdaptiveMusicManager*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Audio::AdaptiveEnvironment* envir = ((Singularity::Audio::AdaptiveEnvironment*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddEnvironment'", NULL);
#endif
  {
   self->AddEnvironment(envir);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddEnvironment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCurrentEnvironment of class  Singularity::Audio::AdaptiveMusicManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_SetCurrentEnvironment00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_SetCurrentEnvironment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveMusicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveMusicManager* self = (Singularity::Audio::AdaptiveMusicManager*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCurrentEnvironment'", NULL);
#endif
  {
   self->SetCurrentEnvironment(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCurrentEnvironment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Play of class  Singularity::Audio::AdaptiveMusicManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_Play00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_Play00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveMusicManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveMusicManager* self = (Singularity::Audio::AdaptiveMusicManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Play'", NULL);
#endif
  {
   self->Play();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Play'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: StopAll of class  Singularity::Audio::AdaptiveMusicManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_StopAll00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_StopAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveMusicManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveMusicManager* self = (Singularity::Audio::AdaptiveMusicManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'StopAll'", NULL);
#endif
  {
   self->StopAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'StopAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_IsPlaying of class  Singularity::Audio::AdaptiveMusicManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_Get_IsPlaying00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_Get_IsPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveMusicManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveMusicManager* self = (Singularity::Audio::AdaptiveMusicManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_IsPlaying'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Get_IsPlaying();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_IsPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCuesToPlay of class  Singularity::Audio::AdaptiveMusicManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_GetCuesToPlay00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_GetCuesToPlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveMusicManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveMusicManager* self = (Singularity::Audio::AdaptiveMusicManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCuesToPlay'", NULL);
#endif
  {
   DynamicList<Singularity::Audio::Cue*> tolua_ret = (DynamicList<Singularity::Audio::Cue*>)  self->GetCuesToPlay();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((DynamicList<Singularity::Audio::Cue*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"DynamicList<Singularity::Audio::Cue*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(DynamicList<Singularity::Audio::Cue*>));
     tolua_pushusertype(tolua_S,tolua_obj,"DynamicList<Singularity::Audio::Cue*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCuesToPlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearCues of class  Singularity::Audio::AdaptiveMusicManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_ClearCues00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_ClearCues00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveMusicManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveMusicManager* self = (Singularity::Audio::AdaptiveMusicManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearCues'", NULL);
#endif
  {
   self->ClearCues();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearCues'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVariable of class  Singularity::Audio::AdaptiveMusicManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_SetVariable00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_SetVariable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveMusicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveMusicManager* self = (Singularity::Audio::AdaptiveMusicManager*)  tolua_tousertype(tolua_S,1,0);
  std::string variable = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  float value = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVariable'", NULL);
#endif
  {
   self->SetVariable(variable,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetVariable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Instantiate of class  Singularity::Audio::AdaptiveMusicManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_Instantiate00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_Instantiate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AdaptiveMusicManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Audio::AdaptiveMusicManager* tolua_ret = (Singularity::Audio::AdaptiveMusicManager*)  Singularity::Audio::AdaptiveMusicManager::Instantiate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AdaptiveMusicManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Instantiate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Audio::AdaptiveEnvironment */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_new00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AdaptiveEnvironment",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Audio::AdaptiveEnvironment* tolua_ret = (Singularity::Audio::AdaptiveEnvironment*)  Mtolua_new((Singularity::Audio::AdaptiveEnvironment)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AdaptiveEnvironment");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Audio::AdaptiveEnvironment */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_new00_local
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AdaptiveEnvironment",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Audio::AdaptiveEnvironment* tolua_ret = (Singularity::Audio::AdaptiveEnvironment*)  Mtolua_new((Singularity::Audio::AdaptiveEnvironment)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AdaptiveEnvironment");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Audio::AdaptiveEnvironment */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_delete00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveEnvironment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveEnvironment* self = (Singularity::Audio::AdaptiveEnvironment*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DetermineCuesToPlay of class  Singularity::Audio::AdaptiveEnvironment */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_DetermineCuesToPlay00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_DetermineCuesToPlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveEnvironment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveEnvironment* self = (Singularity::Audio::AdaptiveEnvironment*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DetermineCuesToPlay'", NULL);
#endif
  {
   DynamicList<Singularity::Audio::Cue*> tolua_ret = (DynamicList<Singularity::Audio::Cue*>)  self->DetermineCuesToPlay();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((DynamicList<Singularity::Audio::Cue*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"DynamicList<Singularity::Audio::Cue*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(DynamicList<Singularity::Audio::Cue*>));
     tolua_pushusertype(tolua_S,tolua_obj,"DynamicList<Singularity::Audio::Cue*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DetermineCuesToPlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ChooseSlice of class  Singularity::Audio::AdaptiveEnvironment */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_ChooseSlice00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_ChooseSlice00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveEnvironment",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Vector2",0,&tolua_err)) ||
     !tolua_iscppstring(tolua_S,5,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveEnvironment* self = (Singularity::Audio::AdaptiveEnvironment*)  tolua_tousertype(tolua_S,1,0);
  std::string category = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  float bpm = ((float)  tolua_tonumber(tolua_S,3,0));
  Vector2 timesig = *((Vector2*)  tolua_tousertype(tolua_S,4,0));
  std::string rhythm = ((std::string)  tolua_tocppstring(tolua_S,5,0));
  std::string keysig = ((std::string)  tolua_tocppstring(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ChooseSlice'", NULL);
#endif
  {
   Singularity::Audio::AdaptiveSlice* tolua_ret = (Singularity::Audio::AdaptiveSlice*)  self->ChooseSlice(category,bpm,timesig,rhythm,keysig);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AdaptiveSlice");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ChooseSlice'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadEnvironmentFromXml of class  Singularity::Audio::AdaptiveEnvironment */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_LoadEnvironmentFromXml00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_LoadEnvironmentFromXml00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveEnvironment",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveEnvironment* self = (Singularity::Audio::AdaptiveEnvironment*)  tolua_tousertype(tolua_S,1,0);
  std::string path = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadEnvironmentFromXml'", NULL);
#endif
  {
   self->LoadEnvironmentFromXml(path);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadEnvironmentFromXml'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddSlice of class  Singularity::Audio::AdaptiveEnvironment */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_AddSlice00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_AddSlice00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveEnvironment* self = (Singularity::Audio::AdaptiveEnvironment*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Audio::AdaptiveSlice* slice = ((Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddSlice'", NULL);
#endif
  {
   self->AddSlice(slice);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddSlice'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddParameter of class  Singularity::Audio::AdaptiveEnvironment */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_AddParameter00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_AddParameter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Audio::AdaptiveParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveEnvironment* self = (Singularity::Audio::AdaptiveEnvironment*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Audio::AdaptiveParameter* param = ((Singularity::Audio::AdaptiveParameter*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddParameter'", NULL);
#endif
  {
   self->AddParameter(param);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddParameter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddCategory of class  Singularity::Audio::AdaptiveEnvironment */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_AddCategory00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_AddCategory00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveEnvironment",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveEnvironment* self = (Singularity::Audio::AdaptiveEnvironment*)  tolua_tousertype(tolua_S,1,0);
  std::string category = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddCategory'", NULL);
#endif
  {
   self->AddCategory(category);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddCategory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVariable of class  Singularity::Audio::AdaptiveEnvironment */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_SetVariable00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_SetVariable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveEnvironment",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveEnvironment* self = (Singularity::Audio::AdaptiveEnvironment*)  tolua_tousertype(tolua_S,1,0);
  std::string variable = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  float value = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVariable'", NULL);
#endif
  {
   self->SetVariable(variable,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetVariable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetName of class  Singularity::Audio::AdaptiveEnvironment */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_GetName00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_GetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveEnvironment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveEnvironment* self = (Singularity::Audio::AdaptiveEnvironment*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->GetName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Audio::AdaptiveParameter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_new00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AdaptiveParameter",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  float min = ((float)  tolua_tonumber(tolua_S,3,0));
  float max = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   Singularity::Audio::AdaptiveParameter* tolua_ret = (Singularity::Audio::AdaptiveParameter*)  Mtolua_new((Singularity::Audio::AdaptiveParameter)(name,min,max));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AdaptiveParameter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Audio::AdaptiveParameter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_new00_local
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AdaptiveParameter",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  float min = ((float)  tolua_tonumber(tolua_S,3,0));
  float max = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   Singularity::Audio::AdaptiveParameter* tolua_ret = (Singularity::Audio::AdaptiveParameter*)  Mtolua_new((Singularity::Audio::AdaptiveParameter)(name,min,max));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AdaptiveParameter");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Audio::AdaptiveParameter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_delete00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveParameter* self = (Singularity::Audio::AdaptiveParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetName of class  Singularity::Audio::AdaptiveParameter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_GetName00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_GetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveParameter* self = (Singularity::Audio::AdaptiveParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->GetName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMin of class  Singularity::Audio::AdaptiveParameter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_GetMin00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_GetMin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveParameter* self = (Singularity::Audio::AdaptiveParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMin'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetMin();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMax of class  Singularity::Audio::AdaptiveParameter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_GetMax00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_GetMax00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveParameter* self = (Singularity::Audio::AdaptiveParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMax'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetMax();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMax'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCurrentValue of class  Singularity::Audio::AdaptiveParameter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_GetCurrentValue00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_GetCurrentValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveParameter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveParameter* self = (Singularity::Audio::AdaptiveParameter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCurrentValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetCurrentValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCurrentValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCurrentValue of class  Singularity::Audio::AdaptiveParameter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_SetCurrentValue00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_SetCurrentValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveParameter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveParameter* self = (Singularity::Audio::AdaptiveParameter*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCurrentValue'", NULL);
#endif
  {
   self->SetCurrentValue(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCurrentValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetName of class  Singularity::Audio::AdaptiveParameter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_SetName00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_SetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveParameter",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveParameter* self = (Singularity::Audio::AdaptiveParameter*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetName'", NULL);
#endif
  {
   self->SetName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMin of class  Singularity::Audio::AdaptiveParameter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_SetMin00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_SetMin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveParameter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveParameter* self = (Singularity::Audio::AdaptiveParameter*)  tolua_tousertype(tolua_S,1,0);
  float min = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMin'", NULL);
#endif
  {
   self->SetMin(min);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMax of class  Singularity::Audio::AdaptiveParameter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_SetMax00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_SetMax00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveParameter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveParameter* self = (Singularity::Audio::AdaptiveParameter*)  tolua_tousertype(tolua_S,1,0);
  float max = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMax'", NULL);
#endif
  {
   self->SetMax(max);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMax'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: position of class  Singularity::Audio::AdaptivePropertyPoint */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Audio__AdaptivePropertyPoint_position
static int tolua_get_Singularity__Audio__AdaptivePropertyPoint_position(lua_State* tolua_S)
{
  Singularity::Audio::AdaptivePropertyPoint* self = (Singularity::Audio::AdaptivePropertyPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'position'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->position,"Vector2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: position of class  Singularity::Audio::AdaptivePropertyPoint */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Audio__AdaptivePropertyPoint_position
static int tolua_set_Singularity__Audio__AdaptivePropertyPoint_position(lua_State* tolua_S)
{
  Singularity::Audio::AdaptivePropertyPoint* self = (Singularity::Audio::AdaptivePropertyPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'position'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->position = *((Vector2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: curve of class  Singularity::Audio::AdaptivePropertyPoint */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Audio__AdaptivePropertyPoint_curve
static int tolua_get_Singularity__Audio__AdaptivePropertyPoint_curve(lua_State* tolua_S)
{
  Singularity::Audio::AdaptivePropertyPoint* self = (Singularity::Audio::AdaptivePropertyPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'curve'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->curve);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: curve of class  Singularity::Audio::AdaptivePropertyPoint */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Audio__AdaptivePropertyPoint_curve
static int tolua_set_Singularity__Audio__AdaptivePropertyPoint_curve(lua_State* tolua_S)
{
  Singularity::Audio::AdaptivePropertyPoint* self = (Singularity::Audio::AdaptivePropertyPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'curve'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->curve = ((Singularity::Audio::AdaptivePropertyCurve) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Audio::AdaptiveProperty */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_new00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AdaptiveProperty",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Audio::AdaptiveParameter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Audio::AdaptiveParameter* parent = ((Singularity::Audio::AdaptiveParameter*)  tolua_tousertype(tolua_S,3,0));
  float importance = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   Singularity::Audio::AdaptiveProperty* tolua_ret = (Singularity::Audio::AdaptiveProperty*)  Mtolua_new((Singularity::Audio::AdaptiveProperty)(name,parent,importance));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AdaptiveProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Audio::AdaptiveProperty */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_new00_local
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AdaptiveProperty",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Audio::AdaptiveParameter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Audio::AdaptiveParameter* parent = ((Singularity::Audio::AdaptiveParameter*)  tolua_tousertype(tolua_S,3,0));
  float importance = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   Singularity::Audio::AdaptiveProperty* tolua_ret = (Singularity::Audio::AdaptiveProperty*)  Mtolua_new((Singularity::Audio::AdaptiveProperty)(name,parent,importance));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AdaptiveProperty");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Audio::AdaptiveProperty */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_delete00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveProperty* self = (Singularity::Audio::AdaptiveProperty*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetParent of class  Singularity::Audio::AdaptiveProperty */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_GetParent00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_GetParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveProperty* self = (Singularity::Audio::AdaptiveProperty*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetParent'", NULL);
#endif
  {
   Singularity::Audio::AdaptiveParameter* tolua_ret = (Singularity::Audio::AdaptiveParameter*)  self->GetParent();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AdaptiveParameter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetName of class  Singularity::Audio::AdaptiveProperty */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_GetName00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_GetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveProperty* self = (Singularity::Audio::AdaptiveProperty*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->GetName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetImportance of class  Singularity::Audio::AdaptiveProperty */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_GetImportance00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_GetImportance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveProperty* self = (Singularity::Audio::AdaptiveProperty*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetImportance'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetImportance();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetImportance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DefinePoint of class  Singularity::Audio::AdaptiveProperty */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_DefinePoint00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_DefinePoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveProperty",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::Audio::AdaptivePropertyPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveProperty* self = (Singularity::Audio::AdaptiveProperty*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Audio::AdaptivePropertyPoint point = *((Singularity::Audio::AdaptivePropertyPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DefinePoint'", NULL);
#endif
  {
   self->DefinePoint(point);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DefinePoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetName of class  Singularity::Audio::AdaptiveProperty */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_SetName00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_SetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveProperty",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveProperty* self = (Singularity::Audio::AdaptiveProperty*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetName'", NULL);
#endif
  {
   self->SetName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetImportance of class  Singularity::Audio::AdaptiveProperty */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_SetImportance00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_SetImportance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveProperty",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveProperty* self = (Singularity::Audio::AdaptiveProperty*)  tolua_tousertype(tolua_S,1,0);
  float importance = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetImportance'", NULL);
#endif
  {
   self->SetImportance(importance);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetImportance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetValueAtPoint of class  Singularity::Audio::AdaptiveProperty */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_GetValueAtPoint00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_GetValueAtPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveProperty",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveProperty* self = (Singularity::Audio::AdaptiveProperty*)  tolua_tousertype(tolua_S,1,0);
  float xval = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetValueAtPoint'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetValueAtPoint(xval);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetValueAtPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_new00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,4,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,5,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"Vector2",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,8,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,10,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  std::string category = ((std::string)  tolua_tocppstring(tolua_S,3,0));
  std::string rhythm = ((std::string)  tolua_tocppstring(tolua_S,4,0));
  std::string keysig = ((std::string)  tolua_tocppstring(tolua_S,5,0));
  Vector2 timesig = *((Vector2*)  tolua_tousertype(tolua_S,6,0));
  float bpm = ((float)  tolua_tonumber(tolua_S,7,0));
  string cueName = ((string)  tolua_tocppstring(tolua_S,8,0));
  float importance = ((float)  tolua_tonumber(tolua_S,9,0));
  {
   Singularity::Audio::AdaptiveSlice* tolua_ret = (Singularity::Audio::AdaptiveSlice*)  Mtolua_new((Singularity::Audio::AdaptiveSlice)(name,category,rhythm,keysig,timesig,bpm,cueName,importance));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AdaptiveSlice");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_new00_local
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,4,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,5,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"Vector2",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,8,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,10,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  std::string category = ((std::string)  tolua_tocppstring(tolua_S,3,0));
  std::string rhythm = ((std::string)  tolua_tocppstring(tolua_S,4,0));
  std::string keysig = ((std::string)  tolua_tocppstring(tolua_S,5,0));
  Vector2 timesig = *((Vector2*)  tolua_tousertype(tolua_S,6,0));
  float bpm = ((float)  tolua_tonumber(tolua_S,7,0));
  string cueName = ((string)  tolua_tocppstring(tolua_S,8,0));
  float importance = ((float)  tolua_tonumber(tolua_S,9,0));
  {
   Singularity::Audio::AdaptiveSlice* tolua_ret = (Singularity::Audio::AdaptiveSlice*)  Mtolua_new((Singularity::Audio::AdaptiveSlice)(name,category,rhythm,keysig,timesig,bpm,cueName,importance));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AdaptiveSlice");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_delete00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CalculateProbability of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_CalculateProbability00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_CalculateProbability00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CalculateProbability'", NULL);
#endif
  {
   float tolua_ret = (float)  self->CalculateProbability();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CalculateProbability'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddProperty of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_AddProperty00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_AddProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Audio::AdaptiveProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Audio::AdaptiveProperty* prop = ((Singularity::Audio::AdaptiveProperty*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddProperty'", NULL);
#endif
  {
   self->AddProperty(prop);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveProperty of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_RemoveProperty00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_RemoveProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Audio::AdaptiveProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Audio::AdaptiveProperty* prop = ((Singularity::Audio::AdaptiveProperty*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveProperty'", NULL);
#endif
  {
   self->RemoveProperty(prop);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PlayCue of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_PlayCue00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_PlayCue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PlayCue'", NULL);
#endif
  {
   self->PlayCue();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PlayCue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProperty of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetProperty00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
  string name = ((string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProperty'", NULL);
#endif
  {
   Singularity::Audio::AdaptiveProperty* tolua_ret = (Singularity::Audio::AdaptiveProperty*)  self->GetProperty(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::AdaptiveProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAllProperties of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetAllProperties00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetAllProperties00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAllProperties'", NULL);
#endif
  {
   DynamicList<Singularity::Audio::AdaptiveProperty*> tolua_ret = (DynamicList<Singularity::Audio::AdaptiveProperty*>)  self->GetAllProperties();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((DynamicList<Singularity::Audio::AdaptiveProperty*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"DynamicList<Singularity::Audio::AdaptiveProperty*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(DynamicList<Singularity::Audio::AdaptiveProperty*>));
     tolua_pushusertype(tolua_S,tolua_obj,"DynamicList<Singularity::Audio::AdaptiveProperty*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAllProperties'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCategory of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetCategory00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetCategory00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCategory'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->GetCategory();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCategory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCategory of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetCategory00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetCategory00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
  std::string category = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCategory'", NULL);
#endif
  {
   self->SetCategory(category);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCategory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRhythm of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetRhythm00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetRhythm00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRhythm'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->GetRhythm();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRhythm'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRhythm of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetRhythm00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetRhythm00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
  std::string rhythm = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRhythm'", NULL);
#endif
  {
   self->SetRhythm(rhythm);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRhythm'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetKeySig of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetKeySig00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetKeySig00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetKeySig'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->GetKeySig();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetKeySig'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetKeySig of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetKeySig00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetKeySig00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
  std::string keysig = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetKeySig'", NULL);
#endif
  {
   self->SetKeySig(keysig);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetKeySig'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTimeSig of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetTimeSig00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetTimeSig00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTimeSig'", NULL);
#endif
  {
   Vector2 tolua_ret = (Vector2)  self->GetTimeSig();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector2));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTimeSig'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTimeSig of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetTimeSig00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetTimeSig00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
  Vector2 timesig = *((Vector2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTimeSig'", NULL);
#endif
  {
   self->SetTimeSig(timesig);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTimeSig'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBPM of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetBPM00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetBPM00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBPM'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetBPM();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBPM'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBPM of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetBPM00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetBPM00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
  float bpm = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBPM'", NULL);
#endif
  {
   self->SetBPM(bpm);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBPM'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetName of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetName00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->GetName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetName of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetName00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetName'", NULL);
#endif
  {
   self->SetName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetImportance of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetImportance00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetImportance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetImportance'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetImportance();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetImportance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetImportance of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetImportance00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetImportance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
  float importance = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetImportance'", NULL);
#endif
  {
   self->SetImportance(importance);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetImportance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetChance of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetChance00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetChance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetChance'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetChance();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetChance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetChance of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetChance00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetChance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
  float chance = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetChance'", NULL);
#endif
  {
   self->SetChance(chance);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetChance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCue of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetCue00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetCue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCue'", NULL);
#endif
  {
   Singularity::Audio::Cue* tolua_ret = (Singularity::Audio::Cue*)  self->GetCue();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Audio::Cue");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCue of class  Singularity::Audio::AdaptiveSlice */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetCue00
static int tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetCue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Audio::AdaptiveSlice",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Audio::Cue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Audio::AdaptiveSlice* self = (Singularity::Audio::AdaptiveSlice*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Audio::Cue* tolua_var_20 = ((Singularity::Audio::Cue*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCue'", NULL);
#endif
  {
   self->SetCue(tolua_var_20);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Broadcast of class  Singularity::Networking::IPAddress */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__IPAddress_Broadcast
static int tolua_get_Singularity__Networking__IPAddress_Broadcast(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Singularity::Networking::IPAddress::Broadcast,"Singularity::Networking::IPAddress");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Broadcast of class  Singularity::Networking::IPAddress */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__IPAddress_Broadcast
static int tolua_set_Singularity__Networking__IPAddress_Broadcast(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::Networking::IPAddress",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Singularity::Networking::IPAddress::Broadcast = *((Singularity::Networking::IPAddress*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Loopback of class  Singularity::Networking::IPAddress */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__IPAddress_Loopback
static int tolua_get_Singularity__Networking__IPAddress_Loopback(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Singularity::Networking::IPAddress::Loopback,"Singularity::Networking::IPAddress");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Loopback of class  Singularity::Networking::IPAddress */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__IPAddress_Loopback
static int tolua_set_Singularity__Networking__IPAddress_Loopback(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::Networking::IPAddress",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Singularity::Networking::IPAddress::Loopback = *((Singularity::Networking::IPAddress*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Networking::IPAddress */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_IPAddress_new00
static int tolua_Singularity_scripting_Singularity_Networking_IPAddress_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Networking::IPAddress",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Networking::IPAddress* tolua_ret = (Singularity::Networking::IPAddress*)  Mtolua_new((Singularity::Networking::IPAddress)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Networking::IPAddress");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Networking::IPAddress */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_IPAddress_new00_local
static int tolua_Singularity_scripting_Singularity_Networking_IPAddress_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Networking::IPAddress",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Networking::IPAddress* tolua_ret = (Singularity::Networking::IPAddress*)  Mtolua_new((Singularity::Networking::IPAddress)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Networking::IPAddress");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Networking::IPAddress */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_IPAddress_new01
static int tolua_Singularity_scripting_Singularity_Networking_IPAddress_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Networking::IPAddress",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string address = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Networking::IPAddress* tolua_ret = (Singularity::Networking::IPAddress*)  Mtolua_new((Singularity::Networking::IPAddress)(address));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Networking::IPAddress");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Networking_IPAddress_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Networking::IPAddress */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_IPAddress_new01_local
static int tolua_Singularity_scripting_Singularity_Networking_IPAddress_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Networking::IPAddress",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string address = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Networking::IPAddress* tolua_ret = (Singularity::Networking::IPAddress*)  Mtolua_new((Singularity::Networking::IPAddress)(address));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Networking::IPAddress");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Networking_IPAddress_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Networking::IPAddress */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_IPAddress_new02
static int tolua_Singularity_scripting_Singularity_Networking_IPAddress_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Networking::IPAddress",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  unsigned char v1 = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
  unsigned char v2 = ((unsigned char)  tolua_tonumber(tolua_S,3,0));
  unsigned char v3 = ((unsigned char)  tolua_tonumber(tolua_S,4,0));
  unsigned char v4 = ((unsigned char)  tolua_tonumber(tolua_S,5,0));
  {
   Singularity::Networking::IPAddress* tolua_ret = (Singularity::Networking::IPAddress*)  Mtolua_new((Singularity::Networking::IPAddress)(v1,v2,v3,v4));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Networking::IPAddress");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Networking_IPAddress_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Networking::IPAddress */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_IPAddress_new02_local
static int tolua_Singularity_scripting_Singularity_Networking_IPAddress_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Networking::IPAddress",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  unsigned char v1 = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
  unsigned char v2 = ((unsigned char)  tolua_tonumber(tolua_S,3,0));
  unsigned char v3 = ((unsigned char)  tolua_tonumber(tolua_S,4,0));
  unsigned char v4 = ((unsigned char)  tolua_tonumber(tolua_S,5,0));
  {
   Singularity::Networking::IPAddress* tolua_ret = (Singularity::Networking::IPAddress*)  Mtolua_new((Singularity::Networking::IPAddress)(v1,v2,v3,v4));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Networking::IPAddress");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Networking_IPAddress_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Networking::IPAddress */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_IPAddress_delete00
static int tolua_Singularity_scripting_Singularity_Networking_IPAddress_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Networking::IPAddress",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Networking::IPAddress* self = (Singularity::Networking::IPAddress*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAddressBytes of class  Singularity::Networking::IPAddress */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_IPAddress_GetAddressBytes00
static int tolua_Singularity_scripting_Singularity_Networking_IPAddress_GetAddressBytes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Networking::IPAddress",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Networking::IPAddress* self = (Singularity::Networking::IPAddress*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAddressBytes'", NULL);
#endif
  {
   unsigned char* tolua_ret = (unsigned char*)  self->GetAddressBytes();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAddressBytes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAddressByte of class  Singularity::Networking::IPAddress */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_IPAddress_GetAddressByte00
static int tolua_Singularity_scripting_Singularity_Networking_IPAddress_GetAddressByte00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Networking::IPAddress",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Networking::IPAddress* self = (Singularity::Networking::IPAddress*)  tolua_tousertype(tolua_S,1,0);
  unsigned index = ((unsigned)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAddressByte'", NULL);
#endif
  {
   unsigned char tolua_ret = (unsigned char)  self->GetAddressByte(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAddressByte'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToString of class  Singularity::Networking::IPAddress */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_IPAddress_ToString00
static int tolua_Singularity_scripting_Singularity_Networking_IPAddress_ToString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Networking::IPAddress",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Networking::IPAddress* self = (const Singularity::Networking::IPAddress*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ToString'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->ToString();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Networking::Network */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_Network_delete00
static int tolua_Singularity_scripting_Singularity_Networking_Network_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Networking::Network",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Networking::Network* self = (Singularity::Networking::Network*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_CurrentPlayerName of class  Singularity::Networking::Network */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_Network_Set_CurrentPlayerName00
static int tolua_Singularity_scripting_Singularity_Networking_Network_Set_CurrentPlayerName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Networking::Network",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Networking::Network::Set_CurrentPlayerName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_CurrentPlayerName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_CurrentPlayerId of class  Singularity::Networking::Network */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_Network_Set_CurrentPlayerId00
static int tolua_Singularity_scripting_Singularity_Networking_Network_Set_CurrentPlayerId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Networking::Network",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Networking::Network::Set_CurrentPlayerId(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_CurrentPlayerId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CurrentPlayer of class  Singularity::Networking::Network */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_Network_CurrentPlayer00
static int tolua_Singularity_scripting_Singularity_Networking_Network_CurrentPlayer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Networking::Network",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Networking::NetworkPlayer& tolua_ret = (Singularity::Networking::NetworkPlayer&)  Singularity::Networking::Network::CurrentPlayer();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Singularity::Networking::NetworkPlayer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CurrentPlayer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CurrentGame of class  Singularity::Networking::Network */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_Network_CurrentGame00
static int tolua_Singularity_scripting_Singularity_Networking_Network_CurrentGame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Networking::Network",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Networking::NetworkGame* tolua_ret = (Singularity::Networking::NetworkGame*)  Singularity::Networking::Network::CurrentGame();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Networking::NetworkGame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CurrentGame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ConnectTo of class  Singularity::Networking::Network */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_Network_ConnectTo00
static int tolua_Singularity_scripting_Singularity_Networking_Network_ConnectTo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Networking::Network",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::Networking::IPAddress",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Networking::IPAddress host = *((Singularity::Networking::IPAddress*)  tolua_tousertype(tolua_S,2,0));
  unsigned port = ((unsigned)  tolua_tonumber(tolua_S,3,0));
  {
   Singularity::Networking::Network* tolua_ret = (Singularity::Networking::Network*)  Singularity::Networking::Network::ConnectTo(host,port);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Networking::Network");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ConnectTo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateGame of class  Singularity::Networking::Network */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_Network_CreateGame00
static int tolua_Singularity_scripting_Singularity_Networking_Network_CreateGame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Networking::Network",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Networking::NetworkGame* tolua_ret = (Singularity::Networking::NetworkGame*)  Singularity::Networking::Network::CreateGame(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Networking::NetworkGame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateGame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LeaveGame of class  Singularity::Networking::Network */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_Network_LeaveGame00
static int tolua_Singularity_scripting_Singularity_Networking_Network_LeaveGame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Networking::Network",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Networking::Network::LeaveGame();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LeaveGame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: JoinGame of class  Singularity::Networking::Network */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_Network_JoinGame00
static int tolua_Singularity_scripting_Singularity_Networking_Network_JoinGame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Networking::Network",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Singularity::Networking::NetworkGameDescription",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Networking::NetworkGameDescription* game = ((const Singularity::Networking::NetworkGameDescription*)  tolua_tousertype(tolua_S,2,0));
  {
   Singularity::Networking::NetworkGame* tolua_ret = (Singularity::Networking::NetworkGame*)  Singularity::Networking::Network::JoinGame(*game);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Networking::NetworkGame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'JoinGame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: FindGames of class  Singularity::Networking::Network */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_Network_FindGames00
static int tolua_Singularity_scripting_Singularity_Networking_Network_FindGames00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Networking::Network",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned count = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Networking::NetworkGameDescription* tolua_ret = (Singularity::Networking::NetworkGameDescription*)  Singularity::Networking::Network::FindGames(count);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Networking::NetworkGameDescription");
   tolua_pushnumber(tolua_S,(lua_Number)count);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'FindGames'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Index of class  Singularity::Networking::Packet */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__Packet_unsigned_Index
static int tolua_get_Singularity__Networking__Packet_unsigned_Index(lua_State* tolua_S)
{
  Singularity::Networking::Packet* self = (Singularity::Networking::Packet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Index'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Index,"__int64");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Index of class  Singularity::Networking::Packet */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__Packet_unsigned_Index
static int tolua_set_Singularity__Networking__Packet_unsigned_Index(lua_State* tolua_S)
{
  Singularity::Networking::Packet* self = (Singularity::Networking::Packet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Index'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"__int64",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Index = *((unsigned __int64*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: From of class  Singularity::Networking::Packet */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__Packet_From
static int tolua_get_Singularity__Networking__Packet_From(lua_State* tolua_S)
{
  Singularity::Networking::Packet* self = (Singularity::Networking::Packet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'From'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->From,"UUID");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: From of class  Singularity::Networking::Packet */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__Packet_From
static int tolua_set_Singularity__Networking__Packet_From(lua_State* tolua_S)
{
  Singularity::Networking::Packet* self = (Singularity::Networking::Packet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'From'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"UUID",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->From = *((UUID*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Type of class  Singularity::Networking::Packet */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__Packet_unsigned_Type
static int tolua_get_Singularity__Networking__Packet_unsigned_Type(lua_State* tolua_S)
{
  Singularity::Networking::Packet* self = (Singularity::Networking::Packet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Type);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Type of class  Singularity::Networking::Packet */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__Packet_unsigned_Type
static int tolua_set_Singularity__Networking__Packet_unsigned_Type(lua_State* tolua_S)
{
  Singularity::Networking::Packet* self = (Singularity::Networking::Packet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Type = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Command of class  Singularity::Networking::Packet */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__Packet_unsigned_Command
static int tolua_get_Singularity__Networking__Packet_unsigned_Command(lua_State* tolua_S)
{
  Singularity::Networking::Packet* self = (Singularity::Networking::Packet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Command'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Command);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Command of class  Singularity::Networking::Packet */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__Packet_unsigned_Command
static int tolua_set_Singularity__Networking__Packet_unsigned_Command(lua_State* tolua_S)
{
  Singularity::Networking::Packet* self = (Singularity::Networking::Packet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Command'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Command = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DataLength of class  Singularity::Networking::Packet */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__Packet_DataLength
static int tolua_get_Singularity__Networking__Packet_DataLength(lua_State* tolua_S)
{
  Singularity::Networking::Packet* self = (Singularity::Networking::Packet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DataLength'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DataLength);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DataLength of class  Singularity::Networking::Packet */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__Packet_DataLength
static int tolua_set_Singularity__Networking__Packet_DataLength(lua_State* tolua_S)
{
  Singularity::Networking::Packet* self = (Singularity::Networking::Packet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DataLength'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DataLength = ((unsigned)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Data of class  Singularity::Networking::Packet */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__Packet_Data
static int tolua_get_Singularity__Networking__Packet_Data(lua_State* tolua_S)
{
  Singularity::Networking::Packet* self = (Singularity::Networking::Packet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Data'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Data);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Data of class  Singularity::Networking::Packet */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__Packet_Data
static int tolua_set_Singularity__Networking__Packet_Data(lua_State* tolua_S)
{
  Singularity::Networking::Packet* self = (Singularity::Networking::Packet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Data'",NULL);
  if (!tolua_isstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Data = ((char*)  tolua_tostring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Id of class  Singularity::Networking::NetworkGameDescription */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__NetworkGameDescription_Id
static int tolua_get_Singularity__Networking__NetworkGameDescription_Id(lua_State* tolua_S)
{
  Singularity::Networking::NetworkGameDescription* self = (Singularity::Networking::NetworkGameDescription*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Id'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Id,"UUID");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Id of class  Singularity::Networking::NetworkGameDescription */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__NetworkGameDescription_Id
static int tolua_set_Singularity__Networking__NetworkGameDescription_Id(lua_State* tolua_S)
{
  Singularity::Networking::NetworkGameDescription* self = (Singularity::Networking::NetworkGameDescription*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Id'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"UUID",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Id = *((UUID*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  Singularity::Networking::NetworkGameDescription */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__NetworkGameDescription_Name
static int tolua_get_Singularity__Networking__NetworkGameDescription_Name(lua_State* tolua_S)
{
  Singularity::Networking::NetworkGameDescription* self = (Singularity::Networking::NetworkGameDescription*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  Singularity::Networking::NetworkGameDescription */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__NetworkGameDescription_Name
static int tolua_set_Singularity__Networking__NetworkGameDescription_Name(lua_State* tolua_S)
{
  Singularity::Networking::NetworkGameDescription* self = (Singularity::Networking::NetworkGameDescription*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy((char*)
self->Name,(const char*)tolua_tostring(tolua_S,2,0),256-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Owner of class  Singularity::Networking::NetworkGameDescription */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__NetworkGameDescription_Owner
static int tolua_get_Singularity__Networking__NetworkGameDescription_Owner(lua_State* tolua_S)
{
  Singularity::Networking::NetworkGameDescription* self = (Singularity::Networking::NetworkGameDescription*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Owner'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Owner,"Singularity::Networking::NetworkPlayer");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Owner of class  Singularity::Networking::NetworkGameDescription */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__NetworkGameDescription_Owner
static int tolua_set_Singularity__Networking__NetworkGameDescription_Owner(lua_State* tolua_S)
{
  Singularity::Networking::NetworkGameDescription* self = (Singularity::Networking::NetworkGameDescription*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Owner'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::Networking::NetworkPlayer",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Owner = *((Singularity::Networking::NetworkPlayer*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Endpoint of class  Singularity::Networking::NetworkGameDescription */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__NetworkGameDescription_Endpoint
static int tolua_get_Singularity__Networking__NetworkGameDescription_Endpoint(lua_State* tolua_S)
{
  Singularity::Networking::NetworkGameDescription* self = (Singularity::Networking::NetworkGameDescription*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Endpoint'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Endpoint,"Singularity::Networking::IPAddress");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Endpoint of class  Singularity::Networking::NetworkGameDescription */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__NetworkGameDescription_Endpoint
static int tolua_set_Singularity__Networking__NetworkGameDescription_Endpoint(lua_State* tolua_S)
{
  Singularity::Networking::NetworkGameDescription* self = (Singularity::Networking::NetworkGameDescription*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Endpoint'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::Networking::IPAddress",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Endpoint = *((Singularity::Networking::IPAddress*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Port of class  Singularity::Networking::NetworkGameDescription */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__NetworkGameDescription_Port
static int tolua_get_Singularity__Networking__NetworkGameDescription_Port(lua_State* tolua_S)
{
  Singularity::Networking::NetworkGameDescription* self = (Singularity::Networking::NetworkGameDescription*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Port'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Port);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Port of class  Singularity::Networking::NetworkGameDescription */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__NetworkGameDescription_Port
static int tolua_set_Singularity__Networking__NetworkGameDescription_Port(lua_State* tolua_S)
{
  Singularity::Networking::NetworkGameDescription* self = (Singularity::Networking::NetworkGameDescription*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Port'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Port = ((unsigned)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxParticipants of class  Singularity::Networking::NetworkGameDescription */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__NetworkGameDescription_MaxParticipants
static int tolua_get_Singularity__Networking__NetworkGameDescription_MaxParticipants(lua_State* tolua_S)
{
  Singularity::Networking::NetworkGameDescription* self = (Singularity::Networking::NetworkGameDescription*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxParticipants'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxParticipants);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxParticipants of class  Singularity::Networking::NetworkGameDescription */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__NetworkGameDescription_MaxParticipants
static int tolua_set_Singularity__Networking__NetworkGameDescription_MaxParticipants(lua_State* tolua_S)
{
  Singularity::Networking::NetworkGameDescription* self = (Singularity::Networking::NetworkGameDescription*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxParticipants'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxParticipants = ((unsigned)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CurrentParticipants of class  Singularity::Networking::NetworkGameDescription */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__NetworkGameDescription_CurrentParticipants
static int tolua_get_Singularity__Networking__NetworkGameDescription_CurrentParticipants(lua_State* tolua_S)
{
  Singularity::Networking::NetworkGameDescription* self = (Singularity::Networking::NetworkGameDescription*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CurrentParticipants'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->CurrentParticipants);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CurrentParticipants of class  Singularity::Networking::NetworkGameDescription */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__NetworkGameDescription_CurrentParticipants
static int tolua_set_Singularity__Networking__NetworkGameDescription_CurrentParticipants(lua_State* tolua_S)
{
  Singularity::Networking::NetworkGameDescription* self = (Singularity::Networking::NetworkGameDescription*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CurrentParticipants'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CurrentParticipants = ((unsigned)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Lag of class  Singularity::Networking::NetworkGameDescription */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__NetworkGameDescription_Lag
static int tolua_get_Singularity__Networking__NetworkGameDescription_Lag(lua_State* tolua_S)
{
  Singularity::Networking::NetworkGameDescription* self = (Singularity::Networking::NetworkGameDescription*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Lag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Lag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Lag of class  Singularity::Networking::NetworkGameDescription */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__NetworkGameDescription_Lag
static int tolua_set_Singularity__Networking__NetworkGameDescription_Lag(lua_State* tolua_S)
{
  Singularity::Networking::NetworkGameDescription* self = (Singularity::Networking::NetworkGameDescription*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Lag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Lag = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Networking::NetworkGame */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkGame_delete00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkGame_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Networking::NetworkGame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Networking::NetworkGame* self = (Singularity::Networking::NetworkGame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_IsHost of class  Singularity::Networking::NetworkGame */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkGame_Get_IsHost00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkGame_Get_IsHost00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Networking::NetworkGame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Networking::NetworkGame* self = (const Singularity::Networking::NetworkGame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_IsHost'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->Get_IsHost();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_IsHost'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResetReady of class  Singularity::Networking::NetworkGame */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkGame_ResetReady00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkGame_ResetReady00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Networking::NetworkGame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Networking::NetworkGame* self = (Singularity::Networking::NetworkGame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ResetReady'", NULL);
#endif
  {
   self->ResetReady();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetReady'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Start of class  Singularity::Networking::NetworkGame */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkGame_Start00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkGame_Start00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Networking::NetworkGame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Networking::NetworkGame* self = (Singularity::Networking::NetworkGame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Start'", NULL);
#endif
  {
   self->Start();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Start'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Destroy of class  Singularity::Networking::NetworkGame */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkGame_Destroy00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkGame_Destroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Networking::NetworkGame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Networking::NetworkGame* self = (Singularity::Networking::NetworkGame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Destroy'", NULL);
#endif
  {
   self->Destroy();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Destroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPlayers of class  Singularity::Networking::NetworkGame */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkGame_GetPlayers00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkGame_GetPlayers00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Networking::NetworkGame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Networking::NetworkGame* self = (Singularity::Networking::NetworkGame*)  tolua_tousertype(tolua_S,1,0);
  unsigned count = ((unsigned)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPlayers'", NULL);
#endif
  {
   Singularity::Networking::NetworkPlayer* tolua_ret = (Singularity::Networking::NetworkPlayer*)  self->GetPlayers(count);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Networking::NetworkPlayer");
   tolua_pushnumber(tolua_S,(lua_Number)count);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPlayers'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Id of class  Singularity::Networking::NetworkPlayer */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__NetworkPlayer_Id
static int tolua_get_Singularity__Networking__NetworkPlayer_Id(lua_State* tolua_S)
{
  Singularity::Networking::NetworkPlayer* self = (Singularity::Networking::NetworkPlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Id'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Id,"UUID");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Id of class  Singularity::Networking::NetworkPlayer */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__NetworkPlayer_Id
static int tolua_set_Singularity__Networking__NetworkPlayer_Id(lua_State* tolua_S)
{
  Singularity::Networking::NetworkPlayer* self = (Singularity::Networking::NetworkPlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Id'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"UUID",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Id = *((UUID*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PlayerId of class  Singularity::Networking::NetworkPlayer */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__NetworkPlayer_PlayerId
static int tolua_get_Singularity__Networking__NetworkPlayer_PlayerId(lua_State* tolua_S)
{
  Singularity::Networking::NetworkPlayer* self = (Singularity::Networking::NetworkPlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PlayerId'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->PlayerId);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PlayerId of class  Singularity::Networking::NetworkPlayer */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__NetworkPlayer_PlayerId
static int tolua_set_Singularity__Networking__NetworkPlayer_PlayerId(lua_State* tolua_S)
{
  Singularity::Networking::NetworkPlayer* self = (Singularity::Networking::NetworkPlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PlayerId'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PlayerId = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Lag of class  Singularity::Networking::NetworkPlayer */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__NetworkPlayer_Lag
static int tolua_get_Singularity__Networking__NetworkPlayer_Lag(lua_State* tolua_S)
{
  Singularity::Networking::NetworkPlayer* self = (Singularity::Networking::NetworkPlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Lag'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Lag);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Lag of class  Singularity::Networking::NetworkPlayer */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__NetworkPlayer_Lag
static int tolua_set_Singularity__Networking__NetworkPlayer_Lag(lua_State* tolua_S)
{
  Singularity::Networking::NetworkPlayer* self = (Singularity::Networking::NetworkPlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Lag'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Lag = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  Singularity::Networking::NetworkPlayer */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__NetworkPlayer_Name
static int tolua_get_Singularity__Networking__NetworkPlayer_Name(lua_State* tolua_S)
{
  Singularity::Networking::NetworkPlayer* self = (Singularity::Networking::NetworkPlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->Name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  Singularity::Networking::NetworkPlayer */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__NetworkPlayer_Name
static int tolua_set_Singularity__Networking__NetworkPlayer_Name(lua_State* tolua_S)
{
  Singularity::Networking::NetworkPlayer* self = (Singularity::Networking::NetworkPlayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_istable(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
 strncpy((char*)
self->Name,(const char*)tolua_tostring(tolua_S,2,0),256-1);
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Networking::NetworkSession */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkSession_delete00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkSession_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Networking::NetworkSession",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Networking::NetworkSession* self = (Singularity::Networking::NetworkSession*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_NetworkId of class  Singularity::Networking::NetworkSession */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_NetworkId00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_NetworkId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Networking::NetworkSession",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Networking::NetworkSession* self = (const Singularity::Networking::NetworkSession*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_NetworkId'", NULL);
#endif
  {
   const UUID tolua_ret = (const UUID)  self->Get_NetworkId();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((UUID)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"const UUID");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(const UUID));
     tolua_pushusertype(tolua_S,tolua_obj,"const UUID");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_NetworkId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_IsConnected of class  Singularity::Networking::NetworkSession */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_IsConnected00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_IsConnected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Networking::NetworkSession",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Networking::NetworkSession* self = (const Singularity::Networking::NetworkSession*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_IsConnected'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->Get_IsConnected();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_IsConnected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Host of class  Singularity::Networking::NetworkSession */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_Host00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_Host00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Networking::NetworkSession",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Networking::NetworkSession* self = (const Singularity::Networking::NetworkSession*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Host'", NULL);
#endif
  {
   Singularity::Networking::IPAddress tolua_ret = (Singularity::Networking::IPAddress)  self->Get_Host();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Singularity::Networking::IPAddress)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Singularity::Networking::IPAddress");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Singularity::Networking::IPAddress));
     tolua_pushusertype(tolua_S,tolua_obj,"Singularity::Networking::IPAddress");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Host'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Port of class  Singularity::Networking::NetworkSession */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_Port00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_Port00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Networking::NetworkSession",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Networking::NetworkSession* self = (const Singularity::Networking::NetworkSession*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Port'", NULL);
#endif
  {
   const unsigned tolua_ret = (const unsigned)  self->Get_Port();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Port'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_ReceiveBufferSize of class  Singularity::Networking::NetworkSession */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_ReceiveBufferSize00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_ReceiveBufferSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Networking::NetworkSession",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Networking::NetworkSession* self = (const Singularity::Networking::NetworkSession*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_ReceiveBufferSize'", NULL);
#endif
  {
   const int tolua_ret = (const int)  self->Get_ReceiveBufferSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_ReceiveBufferSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_ReceiveBufferSize of class  Singularity::Networking::NetworkSession */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Set_ReceiveBufferSize00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Set_ReceiveBufferSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Networking::NetworkSession",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Networking::NetworkSession* self = (Singularity::Networking::NetworkSession*)  tolua_tousertype(tolua_S,1,0);
  const unsigned value = ((const unsigned)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_ReceiveBufferSize'", NULL);
#endif
  {
   self->Set_ReceiveBufferSize(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_ReceiveBufferSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_SendBufferSize of class  Singularity::Networking::NetworkSession */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_SendBufferSize00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_SendBufferSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Networking::NetworkSession",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Networking::NetworkSession* self = (const Singularity::Networking::NetworkSession*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_SendBufferSize'", NULL);
#endif
  {
   const int tolua_ret = (const int)  self->Get_SendBufferSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_SendBufferSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_SendBufferSize of class  Singularity::Networking::NetworkSession */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Set_SendBufferSize00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Set_SendBufferSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Networking::NetworkSession",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Networking::NetworkSession* self = (Singularity::Networking::NetworkSession*)  tolua_tousertype(tolua_S,1,0);
  const unsigned value = ((const unsigned)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_SendBufferSize'", NULL);
#endif
  {
   self->Set_SendBufferSize(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_SendBufferSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_AutoFlush of class  Singularity::Networking::NetworkSession */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_AutoFlush00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_AutoFlush00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Networking::NetworkSession",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Networking::NetworkSession* self = (const Singularity::Networking::NetworkSession*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_AutoFlush'", NULL);
#endif
  {
   const bool tolua_ret = (const bool)  self->Get_AutoFlush();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_AutoFlush'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_AutoFlush of class  Singularity::Networking::NetworkSession */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Set_AutoFlush00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Set_AutoFlush00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Networking::NetworkSession",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Networking::NetworkSession* self = (Singularity::Networking::NetworkSession*)  tolua_tousertype(tolua_S,1,0);
  const bool value = ((const bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_AutoFlush'", NULL);
#endif
  {
   self->Set_AutoFlush(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_AutoFlush'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SendPacket of class  Singularity::Networking::NetworkSession */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_NetworkSession_SendPacket00
static int tolua_Singularity_scripting_Singularity_Networking_NetworkSession_SendPacket00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Networking::NetworkSession",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Networking::Packet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Networking::NetworkSession* self = (Singularity::Networking::NetworkSession*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Networking::Packet* packet = ((Singularity::Networking::Packet*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SendPacket'", NULL);
#endif
  {
   self->SendPacket(packet);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SendPacket'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ProcessPacket of class  Singularity::Networking::NetworkSession */
#ifndef TOLUA_DISABLE_tolua_get_Singularity__Networking__NetworkSession_ProcessPacket
static int tolua_get_Singularity__Networking__NetworkSession_ProcessPacket(lua_State* tolua_S)
{
  Singularity::Networking::NetworkSession* self = (Singularity::Networking::NetworkSession*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ProcessPacket'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->ProcessPacket,"Singularity::DelegateHandler");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ProcessPacket of class  Singularity::Networking::NetworkSession */
#ifndef TOLUA_DISABLE_tolua_set_Singularity__Networking__NetworkSession_ProcessPacket
static int tolua_set_Singularity__Networking__NetworkSession_ProcessPacket(lua_State* tolua_S)
{
  Singularity::Networking::NetworkSession* self = (Singularity::Networking::NetworkSession*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ProcessPacket'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Singularity::DelegateHandler",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ProcessPacket = *((Singularity::DelegateHandler*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_new00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::EmitterType type = ((Singularity::Particles::EmitterType) (int)  tolua_tonumber(tolua_S,2,0));
  float lifeTime = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   Singularity::Particles::ParticleEmitter* tolua_ret = (Singularity::Particles::ParticleEmitter*)  Mtolua_new((Singularity::Particles::ParticleEmitter)(type,lifeTime));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Particles::ParticleEmitter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_new00_local
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::EmitterType type = ((Singularity::Particles::EmitterType) (int)  tolua_tonumber(tolua_S,2,0));
  float lifeTime = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   Singularity::Particles::ParticleEmitter* tolua_ret = (Singularity::Particles::ParticleEmitter*)  Mtolua_new((Singularity::Particles::ParticleEmitter)(type,lifeTime));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Particles::ParticleEmitter");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_new01
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Particles::EmitterType type = ((Singularity::Particles::EmitterType) (int)  tolua_tonumber(tolua_S,3,0));
  float lifeTime = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   Singularity::Particles::ParticleEmitter* tolua_ret = (Singularity::Particles::ParticleEmitter*)  Mtolua_new((Singularity::Particles::ParticleEmitter)(name,type,lifeTime));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Particles::ParticleEmitter");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_new01_local
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  Singularity::Particles::EmitterType type = ((Singularity::Particles::EmitterType) (int)  tolua_tonumber(tolua_S,3,0));
  float lifeTime = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   Singularity::Particles::ParticleEmitter* tolua_ret = (Singularity::Particles::ParticleEmitter*)  Mtolua_new((Singularity::Particles::ParticleEmitter)(name,type,lifeTime));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Particles::ParticleEmitter");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_LifeTime of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_LifeTime00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_LifeTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float lifeTime = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_LifeTime'", NULL);
#endif
  {
   self->Set_LifeTime(lifeTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_LifeTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_MainTexture of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_MainTexture00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_MainTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Graphics::Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Graphics::Texture2D* value = ((Singularity::Graphics::Texture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_MainTexture'", NULL);
#endif
  {
   self->Set_MainTexture(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_MainTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_SecondaryTexture of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_SecondaryTexture00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_SecondaryTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Graphics::Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Graphics::Texture2D* value = ((Singularity::Graphics::Texture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_SecondaryTexture'", NULL);
#endif
  {
   self->Set_SecondaryTexture(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_SecondaryTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_TertiaryTexture of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_TertiaryTexture00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_TertiaryTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Graphics::Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Graphics::Texture2D* value = ((Singularity::Graphics::Texture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_TertiaryTexture'", NULL);
#endif
  {
   self->Set_TertiaryTexture(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_TertiaryTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_ParticleCount of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_ParticleCount00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_ParticleCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_ParticleCount'", NULL);
#endif
  {
   self->Set_ParticleCount(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_ParticleCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_PositionOffset of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_PositionOffset00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_PositionOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  Vector3 offset = *((Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_PositionOffset'", NULL);
#endif
  {
   self->Set_PositionOffset(offset);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_PositionOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Radius of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_Radius00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_Radius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Radius'", NULL);
#endif
  {
   self->Set_Radius(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Radius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Radius2 of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_Radius200
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_Radius200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Radius2'", NULL);
#endif
  {
   self->Set_Radius2(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Radius2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_EmitterRepeats of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_EmitterRepeats00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_EmitterRepeats00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_EmitterRepeats'", NULL);
#endif
  {
   self->Set_EmitterRepeats(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_EmitterRepeats'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_ParticleRepeats of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_ParticleRepeats00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_ParticleRepeats00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_ParticleRepeats'", NULL);
#endif
  {
   self->Set_ParticleRepeats(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_ParticleRepeats'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_ParticleSize of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_ParticleSize00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_ParticleSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_ParticleSize'", NULL);
#endif
  {
   self->Set_ParticleSize(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_ParticleSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Dimensions of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_Dimensions00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_Dimensions00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  Vector3 value = *((Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Dimensions'", NULL);
#endif
  {
   self->Set_Dimensions(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Dimensions'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Direction of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_Direction00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_Direction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  Vector3 value = *((Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Direction'", NULL);
#endif
  {
   self->Set_Direction(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Direction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Delay of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_Delay00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_Delay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Delay'", NULL);
#endif
  {
   self->Set_Delay(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Delay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_RandomizeColor of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_RandomizeColor00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_RandomizeColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_RandomizeColor'", NULL);
#endif
  {
   self->Set_RandomizeColor(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_RandomizeColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_ColorLimit of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_ColorLimit00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_ColorLimit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  Color value = *((Color*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_ColorLimit'", NULL);
#endif
  {
   self->Set_ColorLimit(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_ColorLimit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_EmitterType of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Get_EmitterType00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Get_EmitterType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_EmitterType'", NULL);
#endif
  {
   Singularity::Particles::EmitterType tolua_ret = (Singularity::Particles::EmitterType)  self->Get_EmitterType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_EmitterType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_EmitterType of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_EmitterType00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_EmitterType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  const Singularity::Particles::EmitterType value = ((const Singularity::Particles::EmitterType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_EmitterType'", NULL);
#endif
  {
   self->Set_EmitterType(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_EmitterType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Start of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Start00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Start00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Start'", NULL);
#endif
  {
   self->Start();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Start'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Stop of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Stop00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Stop'", NULL);
#endif
  {
   self->Stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Reset of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Reset00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Reset'", NULL);
#endif
  {
   self->Reset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateParticleMaterial of class  Singularity::Particles::ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_CreateParticleMaterial00
static int tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_CreateParticleMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::ParticleEmitter* self = (Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateParticleMaterial'", NULL);
#endif
  {
   Singularity::Graphics::Material* tolua_ret = (Singularity::Graphics::Material*)  self->CreateParticleMaterial();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::Material");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateParticleMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Path of class  Singularity::Scripting::LuaBinder */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_Get_Path00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_Get_Path00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Scripting::LuaBinder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Scripting::LuaBinder* self = (const Singularity::Scripting::LuaBinder*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Path'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->Get_Path();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Path'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Path of class  Singularity::Scripting::LuaBinder */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_Set_Path00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_Set_Path00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaBinder",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaBinder* self = (Singularity::Scripting::LuaBinder*)  tolua_tousertype(tolua_S,1,0);
  std::string value = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Path'", NULL);
#endif
  {
   self->Set_Path(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Path'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_FunctionName of class  Singularity::Scripting::LuaBinder */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_Get_FunctionName00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_Get_FunctionName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Singularity::Scripting::LuaBinder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Singularity::Scripting::LuaBinder* self = (const Singularity::Scripting::LuaBinder*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_FunctionName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->Get_FunctionName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_FunctionName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_FunctionName of class  Singularity::Scripting::LuaBinder */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_Set_FunctionName00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_Set_FunctionName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaBinder",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaBinder* self = (Singularity::Scripting::LuaBinder*)  tolua_tousertype(tolua_S,1,0);
  std::string value = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_FunctionName'", NULL);
#endif
  {
   self->Set_FunctionName(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_FunctionName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Scripting::LuaBinder */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_new00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaBinder",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Scripting::LuaBinder* tolua_ret = (Singularity::Scripting::LuaBinder*)  Mtolua_new((Singularity::Scripting::LuaBinder)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaBinder");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Scripting::LuaBinder */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_new00_local
static int tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaBinder",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Scripting::LuaBinder* tolua_ret = (Singularity::Scripting::LuaBinder*)  Mtolua_new((Singularity::Scripting::LuaBinder)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaBinder");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Scripting::LuaBinder */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_delete00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaBinder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaBinder* self = (Singularity::Scripting::LuaBinder*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Scripting::LuaBehaviorDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaBehaviorDelegate_new00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaBehaviorDelegate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaBehaviorDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned luaFuncRef = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Scripting::LuaBehaviorDelegate* tolua_ret = (Singularity::Scripting::LuaBehaviorDelegate*)  Mtolua_new((Singularity::Scripting::LuaBehaviorDelegate)(luaFuncRef));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaBehaviorDelegate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Scripting::LuaBehaviorDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaBehaviorDelegate_new00_local
static int tolua_Singularity_scripting_Singularity_Scripting_LuaBehaviorDelegate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaBehaviorDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned luaFuncRef = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Scripting::LuaBehaviorDelegate* tolua_ret = (Singularity::Scripting::LuaBehaviorDelegate*)  Mtolua_new((Singularity::Scripting::LuaBehaviorDelegate)(luaFuncRef));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaBehaviorDelegate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Scripting::LuaBehaviorDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaBehaviorDelegate_delete00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaBehaviorDelegate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaBehaviorDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaBehaviorDelegate* self = (Singularity::Scripting::LuaBehaviorDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Invoke of class  Singularity::Scripting::LuaBehaviorDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaBehaviorDelegate_Invoke00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaBehaviorDelegate_Invoke00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaBehaviorDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Components::Behavior",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaBehaviorDelegate* self = (Singularity::Scripting::LuaBehaviorDelegate*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Components::Behavior* behavior = ((Singularity::Components::Behavior*)  tolua_tousertype(tolua_S,2,0));
  float elapsedTime = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Invoke'", NULL);
#endif
  {
   self->Invoke(behavior,elapsedTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Invoke'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Scripting::LuaTransformDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaTransformDelegate_new00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaTransformDelegate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaTransformDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned luaFuncRef = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Scripting::LuaTransformDelegate* tolua_ret = (Singularity::Scripting::LuaTransformDelegate*)  Mtolua_new((Singularity::Scripting::LuaTransformDelegate)(luaFuncRef));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaTransformDelegate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Scripting::LuaTransformDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaTransformDelegate_new00_local
static int tolua_Singularity_scripting_Singularity_Scripting_LuaTransformDelegate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaTransformDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned luaFuncRef = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Scripting::LuaTransformDelegate* tolua_ret = (Singularity::Scripting::LuaTransformDelegate*)  Mtolua_new((Singularity::Scripting::LuaTransformDelegate)(luaFuncRef));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaTransformDelegate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Scripting::LuaTransformDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaTransformDelegate_delete00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaTransformDelegate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaTransformDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaTransformDelegate* self = (Singularity::Scripting::LuaTransformDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Invoke of class  Singularity::Scripting::LuaTransformDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaTransformDelegate_Invoke00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaTransformDelegate_Invoke00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaTransformDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Components::Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaTransformDelegate* self = (Singularity::Scripting::LuaTransformDelegate*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Components::Transform* transform = ((Singularity::Components::Transform*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Invoke'", NULL);
#endif
  {
   self->Invoke(transform);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Invoke'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Scripting::LuaControlDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaControlDelegate_new00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaControlDelegate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaControlDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned luaFuncRef = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Scripting::LuaControlDelegate* tolua_ret = (Singularity::Scripting::LuaControlDelegate*)  Mtolua_new((Singularity::Scripting::LuaControlDelegate)(luaFuncRef));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaControlDelegate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Scripting::LuaControlDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaControlDelegate_new00_local
static int tolua_Singularity_scripting_Singularity_Scripting_LuaControlDelegate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaControlDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned luaFuncRef = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Scripting::LuaControlDelegate* tolua_ret = (Singularity::Scripting::LuaControlDelegate*)  Mtolua_new((Singularity::Scripting::LuaControlDelegate)(luaFuncRef));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaControlDelegate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Scripting::LuaControlDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaControlDelegate_delete00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaControlDelegate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaControlDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaControlDelegate* self = (Singularity::Scripting::LuaControlDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Invoke of class  Singularity::Scripting::LuaControlDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaControlDelegate_Invoke00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaControlDelegate_Invoke00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaControlDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaControlDelegate* self = (Singularity::Scripting::LuaControlDelegate*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::Control* control = ((Singularity::Gui::Control*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Invoke'", NULL);
#endif
  {
   self->Invoke(control);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Invoke'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Scripting::LuaControlMouseDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaControlMouseDelegate_new00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaControlMouseDelegate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaControlMouseDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned luaFuncRef = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Scripting::LuaControlMouseDelegate* tolua_ret = (Singularity::Scripting::LuaControlMouseDelegate*)  Mtolua_new((Singularity::Scripting::LuaControlMouseDelegate)(luaFuncRef));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaControlMouseDelegate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Scripting::LuaControlMouseDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaControlMouseDelegate_new00_local
static int tolua_Singularity_scripting_Singularity_Scripting_LuaControlMouseDelegate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaControlMouseDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned luaFuncRef = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Scripting::LuaControlMouseDelegate* tolua_ret = (Singularity::Scripting::LuaControlMouseDelegate*)  Mtolua_new((Singularity::Scripting::LuaControlMouseDelegate)(luaFuncRef));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaControlMouseDelegate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Scripting::LuaControlMouseDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaControlMouseDelegate_delete00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaControlMouseDelegate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaControlMouseDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaControlMouseDelegate* self = (Singularity::Scripting::LuaControlMouseDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Invoke of class  Singularity::Scripting::LuaControlMouseDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaControlMouseDelegate_Invoke00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaControlMouseDelegate_Invoke00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaControlMouseDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::Control",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Vector2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaControlMouseDelegate* self = (Singularity::Scripting::LuaControlMouseDelegate*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::Control* control = ((Singularity::Gui::Control*)  tolua_tousertype(tolua_S,2,0));
  Vector2 position = *((Vector2*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Invoke'", NULL);
#endif
  {
   self->Invoke(control,position);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Invoke'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Scripting::LuaControlKeyboardDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaControlKeyboardDelegate_new00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaControlKeyboardDelegate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaControlKeyboardDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned luaFuncRef = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Scripting::LuaControlKeyboardDelegate* tolua_ret = (Singularity::Scripting::LuaControlKeyboardDelegate*)  Mtolua_new((Singularity::Scripting::LuaControlKeyboardDelegate)(luaFuncRef));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaControlKeyboardDelegate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Scripting::LuaControlKeyboardDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaControlKeyboardDelegate_new00_local
static int tolua_Singularity_scripting_Singularity_Scripting_LuaControlKeyboardDelegate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaControlKeyboardDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned luaFuncRef = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Scripting::LuaControlKeyboardDelegate* tolua_ret = (Singularity::Scripting::LuaControlKeyboardDelegate*)  Mtolua_new((Singularity::Scripting::LuaControlKeyboardDelegate)(luaFuncRef));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaControlKeyboardDelegate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Scripting::LuaControlKeyboardDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaControlKeyboardDelegate_delete00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaControlKeyboardDelegate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaControlKeyboardDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaControlKeyboardDelegate* self = (Singularity::Scripting::LuaControlKeyboardDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Invoke of class  Singularity::Scripting::LuaControlKeyboardDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaControlKeyboardDelegate_Invoke00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaControlKeyboardDelegate_Invoke00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaControlKeyboardDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::Control",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaControlKeyboardDelegate* self = (Singularity::Scripting::LuaControlKeyboardDelegate*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::Control* control = ((Singularity::Gui::Control*)  tolua_tousertype(tolua_S,2,0));
  bool isShift = ((bool)  tolua_toboolean(tolua_S,3,0));
  bool isControl = ((bool)  tolua_toboolean(tolua_S,4,0));
  int keyIndex = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Invoke'", NULL);
#endif
  {
   self->Invoke(control,isShift,isControl,keyIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Invoke'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Scripting::LuaListBoxDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaListBoxDelegate_new00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaListBoxDelegate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaListBoxDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned luaFuncRef = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Scripting::LuaListBoxDelegate* tolua_ret = (Singularity::Scripting::LuaListBoxDelegate*)  Mtolua_new((Singularity::Scripting::LuaListBoxDelegate)(luaFuncRef));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaListBoxDelegate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Scripting::LuaListBoxDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaListBoxDelegate_new00_local
static int tolua_Singularity_scripting_Singularity_Scripting_LuaListBoxDelegate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaListBoxDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned luaFuncRef = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Scripting::LuaListBoxDelegate* tolua_ret = (Singularity::Scripting::LuaListBoxDelegate*)  Mtolua_new((Singularity::Scripting::LuaListBoxDelegate)(luaFuncRef));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaListBoxDelegate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Scripting::LuaListBoxDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaListBoxDelegate_delete00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaListBoxDelegate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaListBoxDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaListBoxDelegate* self = (Singularity::Scripting::LuaListBoxDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Invoke of class  Singularity::Scripting::LuaListBoxDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaListBoxDelegate_Invoke00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaListBoxDelegate_Invoke00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaListBoxDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Gui::ListBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Gui::ListBoxElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaListBoxDelegate* self = (Singularity::Scripting::LuaListBoxDelegate*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Gui::ListBox* listbox = ((Singularity::Gui::ListBox*)  tolua_tousertype(tolua_S,2,0));
  Singularity::Gui::ListBoxElement* element = ((Singularity::Gui::ListBoxElement*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Invoke'", NULL);
#endif
  {
   self->Invoke(listbox,element);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Invoke'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Scripting::LuaCollisionDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaCollisionDelegate_new00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaCollisionDelegate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaCollisionDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned luaFuncRef = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Scripting::LuaCollisionDelegate* tolua_ret = (Singularity::Scripting::LuaCollisionDelegate*)  Mtolua_new((Singularity::Scripting::LuaCollisionDelegate)(luaFuncRef));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaCollisionDelegate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Scripting::LuaCollisionDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaCollisionDelegate_new00_local
static int tolua_Singularity_scripting_Singularity_Scripting_LuaCollisionDelegate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaCollisionDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned luaFuncRef = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Scripting::LuaCollisionDelegate* tolua_ret = (Singularity::Scripting::LuaCollisionDelegate*)  Mtolua_new((Singularity::Scripting::LuaCollisionDelegate)(luaFuncRef));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaCollisionDelegate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Scripting::LuaCollisionDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaCollisionDelegate_delete00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaCollisionDelegate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaCollisionDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaCollisionDelegate* self = (Singularity::Scripting::LuaCollisionDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Invoke of class  Singularity::Scripting::LuaCollisionDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaCollisionDelegate_Invoke00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaCollisionDelegate_Invoke00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaCollisionDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Physics::Collider",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Singularity::Physics::Collider",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaCollisionDelegate* self = (Singularity::Scripting::LuaCollisionDelegate*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Physics::Collider* collider = ((Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,2,0));
  Singularity::Physics::Collider* target = ((Singularity::Physics::Collider*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Invoke'", NULL);
#endif
  {
   self->Invoke(collider,target);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Invoke'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Scripting::LuaNetworkDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaNetworkDelegate_new00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaNetworkDelegate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaNetworkDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned luaFuncRef = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Scripting::LuaNetworkDelegate* tolua_ret = (Singularity::Scripting::LuaNetworkDelegate*)  Mtolua_new((Singularity::Scripting::LuaNetworkDelegate)(luaFuncRef));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaNetworkDelegate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Scripting::LuaNetworkDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaNetworkDelegate_new00_local
static int tolua_Singularity_scripting_Singularity_Scripting_LuaNetworkDelegate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Scripting::LuaNetworkDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned luaFuncRef = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  {
   Singularity::Scripting::LuaNetworkDelegate* tolua_ret = (Singularity::Scripting::LuaNetworkDelegate*)  Mtolua_new((Singularity::Scripting::LuaNetworkDelegate)(luaFuncRef));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Scripting::LuaNetworkDelegate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Scripting::LuaNetworkDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaNetworkDelegate_delete00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaNetworkDelegate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaNetworkDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaNetworkDelegate* self = (Singularity::Scripting::LuaNetworkDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Invoke of class  Singularity::Scripting::LuaNetworkDelegate */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Scripting_LuaNetworkDelegate_Invoke00
static int tolua_Singularity_scripting_Singularity_Scripting_LuaNetworkDelegate_Invoke00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Scripting::LuaNetworkDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Networking::Packet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Scripting::LuaNetworkDelegate* self = (Singularity::Scripting::LuaNetworkDelegate*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Networking::Packet* packet = ((Singularity::Networking::Packet*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Invoke'", NULL);
#endif
  {
   self->Invoke(packet);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Invoke'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  Singularity::Networking::LuaNetworkPacket */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Networking_LuaNetworkPacket_Create00
static int tolua_Singularity_scripting_Singularity_Networking_LuaNetworkPacket_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Networking::LuaNetworkPacket",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string data = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Singularity::Networking::LuaNetworkPacket* tolua_ret = (Singularity::Networking::LuaNetworkPacket*)  Singularity::Networking::LuaNetworkPacket::Create(data);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Networking::LuaNetworkPacket");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Animations::Animation */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Animations_Animation_new00
static int tolua_Singularity_scripting_Singularity_Animations_Animation_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Animations::Animation",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Animations::Animation* tolua_ret = (Singularity::Animations::Animation*)  Mtolua_new((Singularity::Animations::Animation)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Animations::Animation");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Animations::Animation */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Animations_Animation_new00_local
static int tolua_Singularity_scripting_Singularity_Animations_Animation_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Animations::Animation",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,""));
  {
   Singularity::Animations::Animation* tolua_ret = (Singularity::Animations::Animation*)  Mtolua_new((Singularity::Animations::Animation)(name));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Animations::Animation");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Animations::Animation */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Animations_Animation_delete00
static int tolua_Singularity_scripting_Singularity_Animations_Animation_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Animations::Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Animations::Animation* self = (Singularity::Animations::Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Clip of class  Singularity::Animations::Animation */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Animations_Animation_Get_Clip00
static int tolua_Singularity_scripting_Singularity_Animations_Animation_Get_Clip00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Animations::Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Animations::Animation* self = (Singularity::Animations::Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Clip'", NULL);
#endif
  {
   Singularity::Animations::AnimationClip* tolua_ret = (Singularity::Animations::AnimationClip*)  self->Get_Clip();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Animations::AnimationClip");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Clip'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Get_Mesh of class  Singularity::Animations::Animation */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Animations_Animation_Get_Mesh00
static int tolua_Singularity_scripting_Singularity_Animations_Animation_Get_Mesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Animations::Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Animations::Animation* self = (Singularity::Animations::Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Get_Mesh'", NULL);
#endif
  {
   Singularity::Graphics::SkinnedMesh* tolua_ret = (Singularity::Graphics::SkinnedMesh*)  self->Get_Mesh();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Graphics::SkinnedMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Get_Mesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set_Mesh of class  Singularity::Animations::Animation */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Animations_Animation_Set_Mesh00
static int tolua_Singularity_scripting_Singularity_Animations_Animation_Set_Mesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Animations::Animation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Graphics::SkinnedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Animations::Animation* self = (Singularity::Animations::Animation*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Graphics::SkinnedMesh* mesh = ((Singularity::Graphics::SkinnedMesh*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set_Mesh'", NULL);
#endif
  {
   self->Set_Mesh(mesh);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set_Mesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PlayClip of class  Singularity::Animations::Animation */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Animations_Animation_PlayClip00
static int tolua_Singularity_scripting_Singularity_Animations_Animation_PlayClip00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Animations::Animation",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Animations::Animation* self = (Singularity::Animations::Animation*)  tolua_tousertype(tolua_S,1,0);
  unsigned start = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  unsigned count = ((unsigned)  tolua_tonumber(tolua_S,3,0));
  bool repeat = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PlayClip'", NULL);
#endif
  {
   self->PlayClip(start,count,repeat);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PlayClip'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UpdateAnimation of class  Singularity::Animations::Animation */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Animations_Animation_UpdateAnimation00
static int tolua_Singularity_scripting_Singularity_Animations_Animation_UpdateAnimation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Animations::Animation",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Animations::Animation* self = (Singularity::Animations::Animation*)  tolua_tousertype(tolua_S,1,0);
  float elapsedTime = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UpdateAnimation'", NULL);
#endif
  {
   self->UpdateAnimation(elapsedTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UpdateAnimation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetClip of class  Singularity::Animations::Animation */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Animations_Animation_SetClip00
static int tolua_Singularity_scripting_Singularity_Animations_Animation_SetClip00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Animations::Animation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Animations::AnimationClip",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Animations::Animation* self = (Singularity::Animations::Animation*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Animations::AnimationClip* value = ((Singularity::Animations::AnimationClip*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetClip'", NULL);
#endif
  {
   self->SetClip(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetClip'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Singularity::Particles::EmitterManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_EmitterManager_new00
static int tolua_Singularity_scripting_Singularity_Particles_EmitterManager_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Particles::EmitterManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Particles::EmitterManager* tolua_ret = (Singularity::Particles::EmitterManager*)  Mtolua_new((Singularity::Particles::EmitterManager)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Particles::EmitterManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Singularity::Particles::EmitterManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_EmitterManager_new00_local
static int tolua_Singularity_scripting_Singularity_Particles_EmitterManager_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Singularity::Particles::EmitterManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Singularity::Particles::EmitterManager* tolua_ret = (Singularity::Particles::EmitterManager*)  Mtolua_new((Singularity::Particles::EmitterManager)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Particles::EmitterManager");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Singularity::Particles::EmitterManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_EmitterManager_delete00
static int tolua_Singularity_scripting_Singularity_Particles_EmitterManager_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::EmitterManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::EmitterManager* self = (Singularity::Particles::EmitterManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateEmitter of class  Singularity::Particles::EmitterManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_EmitterManager_CreateEmitter00
static int tolua_Singularity_scripting_Singularity_Particles_EmitterManager_CreateEmitter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::EmitterManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::EmitterManager* self = (Singularity::Particles::EmitterManager*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Particles::EmitterType type = ((Singularity::Particles::EmitterType) (int)  tolua_tonumber(tolua_S,2,0));
  float lifeTime = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateEmitter'", NULL);
#endif
  {
   Singularity::Particles::ParticleEmitter* tolua_ret = (Singularity::Particles::ParticleEmitter*)  self->CreateEmitter(type,lifeTime);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Singularity::Particles::ParticleEmitter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateEmitter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: KillEmitter of class  Singularity::Particles::EmitterManager */
#ifndef TOLUA_DISABLE_tolua_Singularity_scripting_Singularity_Particles_EmitterManager_KillEmitter00
static int tolua_Singularity_scripting_Singularity_Particles_EmitterManager_KillEmitter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Singularity::Particles::EmitterManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Singularity::Particles::ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Singularity::Particles::EmitterManager* self = (Singularity::Particles::EmitterManager*)  tolua_tousertype(tolua_S,1,0);
  Singularity::Particles::ParticleEmitter* emitter = ((Singularity::Particles::ParticleEmitter*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'KillEmitter'", NULL);
#endif
  {
   self->KillEmitter(emitter);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'KillEmitter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* Open function */
TOLUA_API int tolua_Singularity_scripting_open (lua_State* tolua_S)
{
 tolua_open(tolua_S);
 tolua_reg_types(tolua_S);
 tolua_module(tolua_S,NULL,0);
 tolua_beginmodule(tolua_S,NULL);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Vector2","Vector2","",tolua_collect_Vector2);
  #else
  tolua_cclass(tolua_S,"Vector2","Vector2","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Vector2");
   tolua_variable(tolua_S,"x",tolua_get_Vector2_x,tolua_set_Vector2_x);
   tolua_variable(tolua_S,"y",tolua_get_Vector2_y,tolua_set_Vector2_y);
   tolua_function(tolua_S,"new",tolua_Singularity_scripting_Vector2_new00);
   tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Vector2_new00_local);
   tolua_function(tolua_S,".call",tolua_Singularity_scripting_Vector2_new00_local);
   tolua_function(tolua_S,"new",tolua_Singularity_scripting_Vector2_new01);
   tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Vector2_new01_local);
   tolua_function(tolua_S,".call",tolua_Singularity_scripting_Vector2_new01_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Vector3","Vector3","",tolua_collect_Vector3);
  #else
  tolua_cclass(tolua_S,"Vector3","Vector3","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Vector3");
   tolua_variable(tolua_S,"x",tolua_get_Vector3_x,tolua_set_Vector3_x);
   tolua_variable(tolua_S,"y",tolua_get_Vector3_y,tolua_set_Vector3_y);
   tolua_variable(tolua_S,"z",tolua_get_Vector3_z,tolua_set_Vector3_z);
   tolua_function(tolua_S,"new",tolua_Singularity_scripting_Vector3_new00);
   tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Vector3_new00_local);
   tolua_function(tolua_S,".call",tolua_Singularity_scripting_Vector3_new00_local);
   tolua_function(tolua_S,"new",tolua_Singularity_scripting_Vector3_new01);
   tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Vector3_new01_local);
   tolua_function(tolua_S,".call",tolua_Singularity_scripting_Vector3_new01_local);
   tolua_function(tolua_S,"Project",tolua_Singularity_scripting_Vector3_Project00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Vector4","Vector4","",tolua_collect_Vector4);
  #else
  tolua_cclass(tolua_S,"Vector4","Vector4","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Vector4");
   tolua_variable(tolua_S,"x",tolua_get_Vector4_x,tolua_set_Vector4_x);
   tolua_variable(tolua_S,"y",tolua_get_Vector4_y,tolua_set_Vector4_y);
   tolua_variable(tolua_S,"z",tolua_get_Vector4_z,tolua_set_Vector4_z);
   tolua_function(tolua_S,"new",tolua_Singularity_scripting_Vector4_new00);
   tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Vector4_new00_local);
   tolua_function(tolua_S,".call",tolua_Singularity_scripting_Vector4_new00_local);
   tolua_function(tolua_S,"new",tolua_Singularity_scripting_Vector4_new01);
   tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Vector4_new01_local);
   tolua_function(tolua_S,".call",tolua_Singularity_scripting_Vector4_new01_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Color","Color","",tolua_collect_Color);
  #else
  tolua_cclass(tolua_S,"Color","Color","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Color");
   tolua_variable(tolua_S,"r",tolua_get_Color_r,tolua_set_Color_r);
   tolua_variable(tolua_S,"g",tolua_get_Color_g,tolua_set_Color_g);
   tolua_variable(tolua_S,"b",tolua_get_Color_b,tolua_set_Color_b);
   tolua_variable(tolua_S,"a",tolua_get_Color_a,tolua_set_Color_a);
   tolua_function(tolua_S,"new",tolua_Singularity_scripting_Color_new00);
   tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Color_new00_local);
   tolua_function(tolua_S,".call",tolua_Singularity_scripting_Color_new00_local);
   tolua_function(tolua_S,"new",tolua_Singularity_scripting_Color_new01);
   tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Color_new01_local);
   tolua_function(tolua_S,".call",tolua_Singularity_scripting_Color_new01_local);
   tolua_function(tolua_S,"new",tolua_Singularity_scripting_Color_new02);
   tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Color_new02_local);
   tolua_function(tolua_S,".call",tolua_Singularity_scripting_Color_new02_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Quaternion","Quaternion","",tolua_collect_Quaternion);
  #else
  tolua_cclass(tolua_S,"Quaternion","Quaternion","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Quaternion");
   tolua_variable(tolua_S,"x",tolua_get_Quaternion_x,tolua_set_Quaternion_x);
   tolua_variable(tolua_S,"y",tolua_get_Quaternion_y,tolua_set_Quaternion_y);
   tolua_variable(tolua_S,"z",tolua_get_Quaternion_z,tolua_set_Quaternion_z);
   tolua_variable(tolua_S,"w",tolua_get_Quaternion_w,tolua_set_Quaternion_w);
   tolua_function(tolua_S,"new",tolua_Singularity_scripting_Quaternion_new00);
   tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Quaternion_new00_local);
   tolua_function(tolua_S,".call",tolua_Singularity_scripting_Quaternion_new00_local);
   tolua_function(tolua_S,"new",tolua_Singularity_scripting_Quaternion_new01);
   tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Quaternion_new01_local);
   tolua_function(tolua_S,".call",tolua_Singularity_scripting_Quaternion_new01_local);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Matrix","Matrix","",tolua_collect_Matrix);
  #else
  tolua_cclass(tolua_S,"Matrix","Matrix","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Matrix");
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Bounds","Bounds","",tolua_collect_Bounds);
  #else
  tolua_cclass(tolua_S,"Bounds","Bounds","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Bounds");
   tolua_variable(tolua_S,"Empty",tolua_get_Bounds_Empty,NULL);
   tolua_variable(tolua_S,"Center",tolua_get_Bounds_Center,tolua_set_Bounds_Center);
   tolua_variable(tolua_S,"Size",tolua_get_Bounds_Size,tolua_set_Bounds_Size);
   tolua_function(tolua_S,"Get_Min",tolua_Singularity_scripting_Bounds_Get_Min00);
   tolua_function(tolua_S,"Get_Max",tolua_Singularity_scripting_Bounds_Get_Max00);
   tolua_function(tolua_S,"new",tolua_Singularity_scripting_Bounds_new00);
   tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Bounds_new00_local);
   tolua_function(tolua_S,".call",tolua_Singularity_scripting_Bounds_new00_local);
   tolua_function(tolua_S,"new",tolua_Singularity_scripting_Bounds_new01);
   tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Bounds_new01_local);
   tolua_function(tolua_S,".call",tolua_Singularity_scripting_Bounds_new01_local);
   tolua_function(tolua_S,"new",tolua_Singularity_scripting_Bounds_new02);
   tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Bounds_new02_local);
   tolua_function(tolua_S,".call",tolua_Singularity_scripting_Bounds_new02_local);
   tolua_function(tolua_S,"new",tolua_Singularity_scripting_Bounds_new03);
   tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Bounds_new03_local);
   tolua_function(tolua_S,".call",tolua_Singularity_scripting_Bounds_new03_local);
   tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Bounds_delete00);
   tolua_function(tolua_S,"SetMinMax",tolua_Singularity_scripting_Bounds_SetMinMax00);
   tolua_function(tolua_S,"Encapsulate",tolua_Singularity_scripting_Bounds_Encapsulate00);
   tolua_function(tolua_S,"Expand",tolua_Singularity_scripting_Bounds_Expand00);
   tolua_function(tolua_S,"Expand",tolua_Singularity_scripting_Bounds_Expand01);
   tolua_function(tolua_S,"Contains",tolua_Singularity_scripting_Bounds_Contains00);
   tolua_function(tolua_S,"SqrDistance",tolua_Singularity_scripting_Bounds_SqrDistance00);
   tolua_function(tolua_S,".eq",tolua_Singularity_scripting_Bounds__eq00);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"ObjectType","Singularity::ObjectType","",tolua_collect_Singularity__ObjectType);
   #else
   tolua_cclass(tolua_S,"ObjectType","Singularity::ObjectType","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"ObjectType");
    tolua_function(tolua_S,"Get_FullName",tolua_Singularity_scripting_Singularity_ObjectType_Get_FullName00);
    tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_ObjectType_new00);
    tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_ObjectType_new00_local);
    tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_ObjectType_new00_local);
    tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_ObjectType_delete00);
    tolua_function(tolua_S,"Equals",tolua_Singularity_scripting_Singularity_ObjectType_Equals00);
    tolua_function(tolua_S,"IsSubClassOf",tolua_Singularity_scripting_Singularity_ObjectType_IsSubClassOf00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_cclass(tolua_S,"Object","Singularity::Object","",NULL);
   tolua_beginmodule(tolua_S,"Object");
    tolua_variable(tolua_S,"Type",tolua_get_Singularity__Object_Type,NULL);
    tolua_function(tolua_S,"GetType",tolua_Singularity_scripting_Singularity_Object_GetType00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_cclass(tolua_S,"IDelegate","Singularity::IDelegate","Singularity::Object",NULL);
   tolua_beginmodule(tolua_S,"IDelegate");
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"DelegateHandler","Singularity::DelegateHandler","",tolua_collect_Singularity__DelegateHandler);
   #else
   tolua_cclass(tolua_S,"DelegateHandler","Singularity::DelegateHandler","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"DelegateHandler");
    tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_DelegateHandler_new00);
    tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_DelegateHandler_new00_local);
    tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_DelegateHandler_new00_local);
    tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_DelegateHandler_delete00);
    tolua_function(tolua_S,"Count",tolua_Singularity_scripting_Singularity_DelegateHandler_Count00);
    tolua_function(tolua_S,"Add",tolua_Singularity_scripting_Singularity_DelegateHandler_Add00);
    tolua_function(tolua_S,"Remove",tolua_Singularity_scripting_Singularity_DelegateHandler_Remove00);
    tolua_function(tolua_S,"Clear",tolua_Singularity_scripting_Singularity_DelegateHandler_Clear00);
    tolua_function(tolua_S,".eq",tolua_Singularity_scripting_Singularity_DelegateHandler__eq00);
    tolua_function(tolua_S,".geti",tolua_Singularity_scripting_Singularity_DelegateHandler__geti00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Components",0);
   tolua_beginmodule(tolua_S,"Components");
    tolua_cclass(tolua_S,"Component","Singularity::Components::Component","Singularity::Object",NULL);
    tolua_beginmodule(tolua_S,"Component");
     tolua_function(tolua_S,"Get_Name",tolua_Singularity_scripting_Singularity_Components_Component_Get_Name00);
     tolua_function(tolua_S,"Get_GameObject",tolua_Singularity_scripting_Singularity_Components_Component_Get_GameObject00);
     tolua_function(tolua_S,"Get_Enabled",tolua_Singularity_scripting_Singularity_Components_Component_Get_Enabled00);
     tolua_function(tolua_S,"Set_Enabled",tolua_Singularity_scripting_Singularity_Components_Component_Set_Enabled00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Components",0);
   tolua_beginmodule(tolua_S,"Components");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"GameObject","Singularity::Components::GameObject","Singularity::Object",tolua_collect_Singularity__Components__GameObject);
    #else
    tolua_cclass(tolua_S,"GameObject","Singularity::Components::GameObject","Singularity::Object",NULL);
    #endif
    tolua_beginmodule(tolua_S,"GameObject");
     tolua_function(tolua_S,"Get_Id",tolua_Singularity_scripting_Singularity_Components_GameObject_Get_Id00);
     tolua_function(tolua_S,"Get_Name",tolua_Singularity_scripting_Singularity_Components_GameObject_Get_Name00);
     tolua_function(tolua_S,"Get_IsActive",tolua_Singularity_scripting_Singularity_Components_GameObject_Get_IsActive00);
     tolua_function(tolua_S,"Set_IsActive",tolua_Singularity_scripting_Singularity_Components_GameObject_Set_IsActive00);
     tolua_function(tolua_S,"Get_Transform",tolua_Singularity_scripting_Singularity_Components_GameObject_Get_Transform00);
     tolua_function(tolua_S,"Get_Root",tolua_Singularity_scripting_Singularity_Components_GameObject_Get_Root00);
     tolua_function(tolua_S,"Get_Parent",tolua_Singularity_scripting_Singularity_Components_GameObject_Get_Parent00);
     tolua_function(tolua_S,"Set_Parent",tolua_Singularity_scripting_Singularity_Components_GameObject_Set_Parent00);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Components_GameObject_delete00);
     tolua_function(tolua_S,"AttachChild",tolua_Singularity_scripting_Singularity_Components_GameObject_AttachChild00);
     tolua_function(tolua_S,"DetachChild",tolua_Singularity_scripting_Singularity_Components_GameObject_DetachChild00);
     tolua_function(tolua_S,"DetachChildren",tolua_Singularity_scripting_Singularity_Components_GameObject_DetachChildren00);
     tolua_function(tolua_S,"GetComponent",tolua_Singularity_scripting_Singularity_Components_GameObject_GetComponent00);
     tolua_function(tolua_S,"GetComponent",tolua_Singularity_scripting_Singularity_Components_GameObject_GetComponent01);
     tolua_function(tolua_S,"GetComponentByIndex",tolua_Singularity_scripting_Singularity_Components_GameObject_GetComponentByIndex00);
     tolua_function(tolua_S,"AddComponent",tolua_Singularity_scripting_Singularity_Components_GameObject_AddComponent00);
     tolua_function(tolua_S,"RemoveComponent",tolua_Singularity_scripting_Singularity_Components_GameObject_RemoveComponent00);
     tolua_function(tolua_S,"ClearComponents",tolua_Singularity_scripting_Singularity_Components_GameObject_ClearComponents00);
     tolua_function(tolua_S,"Destroy",tolua_Singularity_scripting_Singularity_Components_GameObject_Destroy00);
     tolua_function(tolua_S,"Find",tolua_Singularity_scripting_Singularity_Components_GameObject_Find00);
     tolua_function(tolua_S,"IsChildOf",tolua_Singularity_scripting_Singularity_Components_GameObject_IsChildOf00);
     tolua_function(tolua_S,"Create",tolua_Singularity_scripting_Singularity_Components_GameObject_Create00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Components",0);
   tolua_beginmodule(tolua_S,"Components");
    tolua_constant(tolua_S,"Self",Singularity::Components::Self);
    tolua_constant(tolua_S,"World",Singularity::Components::World);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Transform","Singularity::Components::Transform","Singularity::Components::Component",tolua_collect_Singularity__Components__Transform);
    #else
    tolua_cclass(tolua_S,"Transform","Singularity::Components::Transform","Singularity::Components::Component",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Transform");
     tolua_function(tolua_S,"Get_Position",tolua_Singularity_scripting_Singularity_Components_Transform_Get_Position00);
     tolua_function(tolua_S,"Set_Position",tolua_Singularity_scripting_Singularity_Components_Transform_Set_Position00);
     tolua_function(tolua_S,"Get_Rotation",tolua_Singularity_scripting_Singularity_Components_Transform_Get_Rotation00);
     tolua_function(tolua_S,"Set_Rotation",tolua_Singularity_scripting_Singularity_Components_Transform_Set_Rotation00);
     tolua_function(tolua_S,"Set_Rotation",tolua_Singularity_scripting_Singularity_Components_Transform_Set_Rotation01);
     tolua_function(tolua_S,"Get_Scale",tolua_Singularity_scripting_Singularity_Components_Transform_Get_Scale00);
     tolua_function(tolua_S,"Set_Scale",tolua_Singularity_scripting_Singularity_Components_Transform_Set_Scale00);
     tolua_function(tolua_S,"Get_LocalPosition",tolua_Singularity_scripting_Singularity_Components_Transform_Get_LocalPosition00);
     tolua_function(tolua_S,"Set_LocalPosition",tolua_Singularity_scripting_Singularity_Components_Transform_Set_LocalPosition00);
     tolua_function(tolua_S,"Get_LocalRotation",tolua_Singularity_scripting_Singularity_Components_Transform_Get_LocalRotation00);
     tolua_function(tolua_S,"Set_LocalRotation",tolua_Singularity_scripting_Singularity_Components_Transform_Set_LocalRotation00);
     tolua_function(tolua_S,"Get_LocalScale",tolua_Singularity_scripting_Singularity_Components_Transform_Get_LocalScale00);
     tolua_function(tolua_S,"Set_LocalScale",tolua_Singularity_scripting_Singularity_Components_Transform_Set_LocalScale00);
     tolua_function(tolua_S,"Get_LocalToWorldMatrix",tolua_Singularity_scripting_Singularity_Components_Transform_Get_LocalToWorldMatrix00);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Components_Transform_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Components_Transform_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Components_Transform_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Components_Transform_delete00);
     tolua_function(tolua_S,"Reset",tolua_Singularity_scripting_Singularity_Components_Transform_Reset00);
     tolua_function(tolua_S,"Scale",tolua_Singularity_scripting_Singularity_Components_Transform_Scale00);
     tolua_function(tolua_S,"Scale",tolua_Singularity_scripting_Singularity_Components_Transform_Scale01);
     tolua_function(tolua_S,"Translate",tolua_Singularity_scripting_Singularity_Components_Transform_Translate00);
     tolua_function(tolua_S,"Translate",tolua_Singularity_scripting_Singularity_Components_Transform_Translate01);
     tolua_function(tolua_S,"Rotate",tolua_Singularity_scripting_Singularity_Components_Transform_Rotate00);
     tolua_function(tolua_S,"Rotate",tolua_Singularity_scripting_Singularity_Components_Transform_Rotate01);
     tolua_function(tolua_S,"Rotate",tolua_Singularity_scripting_Singularity_Components_Transform_Rotate02);
     tolua_function(tolua_S,"Rotate",tolua_Singularity_scripting_Singularity_Components_Transform_Rotate03);
     tolua_function(tolua_S,"RotateAround",tolua_Singularity_scripting_Singularity_Components_Transform_RotateAround00);
     tolua_function(tolua_S,"RotateAround",tolua_Singularity_scripting_Singularity_Components_Transform_RotateAround01);
     tolua_function(tolua_S,"LookAt",tolua_Singularity_scripting_Singularity_Components_Transform_LookAt00);
     tolua_function(tolua_S,"LookAt",tolua_Singularity_scripting_Singularity_Components_Transform_LookAt01);
     tolua_function(tolua_S,"LookAt",tolua_Singularity_scripting_Singularity_Components_Transform_LookAt02);
     tolua_function(tolua_S,"LookAt",tolua_Singularity_scripting_Singularity_Components_Transform_LookAt03);
     tolua_variable(tolua_S,"Changed",tolua_get_Singularity__Components__Transform_Changed,tolua_set_Singularity__Components__Transform_Changed);
     tolua_function(tolua_S,"RotationToEuler",tolua_Singularity_scripting_Singularity_Components_Transform_RotationToEuler00);
     tolua_function(tolua_S,"EulerToRotation",tolua_Singularity_scripting_Singularity_Components_Transform_EulerToRotation00);
     tolua_function(tolua_S,"AngleTo",tolua_Singularity_scripting_Singularity_Components_Transform_AngleTo00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Components",0);
   tolua_beginmodule(tolua_S,"Components");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Scene","Singularity::Components::Scene","Singularity::Object",tolua_collect_Singularity__Components__Scene);
    #else
    tolua_cclass(tolua_S,"Scene","Singularity::Components::Scene","Singularity::Object",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Scene");
     tolua_function(tolua_S,"Get_IsActive",tolua_Singularity_scripting_Singularity_Components_Scene_Get_IsActive00);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Components_Scene_delete00);
     tolua_function(tolua_S,"Activate",tolua_Singularity_scripting_Singularity_Components_Scene_Activate00);
     tolua_function(tolua_S,"Deactivate",tolua_Singularity_scripting_Singularity_Components_Scene_Deactivate00);
     tolua_function(tolua_S,"Clear",tolua_Singularity_scripting_Singularity_Components_Scene_Clear00);
     tolua_function(tolua_S,"Save",tolua_Singularity_scripting_Singularity_Components_Scene_Save00);
     tolua_function(tolua_S,"Open",tolua_Singularity_scripting_Singularity_Components_Scene_Open00);
     tolua_function(tolua_S,"Create",tolua_Singularity_scripting_Singularity_Components_Scene_Create00);
     tolua_function(tolua_S,"Get_Current",tolua_Singularity_scripting_Singularity_Components_Scene_Get_Current00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"Game","Singularity::Game","",tolua_collect_Singularity__Game);
   #else
   tolua_cclass(tolua_S,"Game","Singularity::Game","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"Game");
    tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Game_new00);
    tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Game_new00_local);
    tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Game_new00_local);
    tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Game_delete00);
    tolua_function(tolua_S,"Run",tolua_Singularity_scripting_Singularity_Game_Run00);
    tolua_function(tolua_S,"Exit",tolua_Singularity_scripting_Singularity_Game_Exit00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Graphics",0);
   tolua_beginmodule(tolua_S,"Graphics");
    tolua_cclass(tolua_S,"Screen","Singularity::Graphics::Screen","",NULL);
    tolua_beginmodule(tolua_S,"Screen");
     tolua_function(tolua_S,"SetResolution",tolua_Singularity_scripting_Singularity_Graphics_Screen_SetResolution00);
     tolua_function(tolua_S,"GetResolution",tolua_Singularity_scripting_Singularity_Graphics_Screen_GetResolution00);
     tolua_function(tolua_S,"SetSize",tolua_Singularity_scripting_Singularity_Graphics_Screen_SetSize00);
     tolua_function(tolua_S,"GetSize",tolua_Singularity_scripting_Singularity_Graphics_Screen_GetSize00);
     tolua_function(tolua_S,"SetTitle",tolua_Singularity_scripting_Singularity_Graphics_Screen_SetTitle00);
     tolua_function(tolua_S,"SetResolution",tolua_Singularity_scripting_Singularity_Graphics_Screen_SetResolution01);
     tolua_function(tolua_S,"GetResolution",tolua_Singularity_scripting_Singularity_Graphics_Screen_GetResolution01);
     tolua_function(tolua_S,"SetSize",tolua_Singularity_scripting_Singularity_Graphics_Screen_SetSize01);
     tolua_function(tolua_S,"GetSize",tolua_Singularity_scripting_Singularity_Graphics_Screen_GetSize01);
     tolua_function(tolua_S,"SetTitle",tolua_Singularity_scripting_Singularity_Graphics_Screen_SetTitle01);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Graphics",0);
   tolua_beginmodule(tolua_S,"Graphics");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Texture2D","Singularity::Graphics::Texture2D","",tolua_collect_Singularity__Graphics__Texture2D);
    #else
    tolua_cclass(tolua_S,"Texture2D","Singularity::Graphics::Texture2D","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Texture2D");
     tolua_function(tolua_S,"Get_Width",tolua_Singularity_scripting_Singularity_Graphics_Texture2D_Get_Width00);
     tolua_function(tolua_S,"Get_Height",tolua_Singularity_scripting_Singularity_Graphics_Texture2D_Get_Height00);
     tolua_function(tolua_S,"Get_MipLevels",tolua_Singularity_scripting_Singularity_Graphics_Texture2D_Get_MipLevels00);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Graphics_Texture2D_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Graphics_Texture2D_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Graphics_Texture2D_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Graphics_Texture2D_delete00);
     tolua_function(tolua_S,"SetPixel",tolua_Singularity_scripting_Singularity_Graphics_Texture2D_SetPixel00);
     tolua_function(tolua_S,"SetPixels",tolua_Singularity_scripting_Singularity_Graphics_Texture2D_SetPixels00);
     tolua_function(tolua_S,"GetPixel",tolua_Singularity_scripting_Singularity_Graphics_Texture2D_GetPixel00);
     tolua_function(tolua_S,"Apply",tolua_Singularity_scripting_Singularity_Graphics_Texture2D_Apply00);
     tolua_function(tolua_S,"LoadTextureFromFile",tolua_Singularity_scripting_Singularity_Graphics_Texture2D_LoadTextureFromFile00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Graphics",0);
   tolua_beginmodule(tolua_S,"Graphics");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Camera","Singularity::Graphics::Camera","Singularity::Components::Component",tolua_collect_Singularity__Graphics__Camera);
    #else
    tolua_cclass(tolua_S,"Camera","Singularity::Graphics::Camera","Singularity::Components::Component",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Camera");
     tolua_function(tolua_S,"Get_Orthographic",tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Orthographic00);
     tolua_function(tolua_S,"Set_Orthographic",tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_Orthographic00);
     tolua_function(tolua_S,"Get_BackgroundColor",tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_BackgroundColor00);
     tolua_function(tolua_S,"Set_BackgroundColor",tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_BackgroundColor00);
     tolua_function(tolua_S,"Get_FieldOfView",tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_FieldOfView00);
     tolua_function(tolua_S,"Set_FieldOfView",tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_FieldOfView00);
     tolua_function(tolua_S,"Get_NearClippingPlane",tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_NearClippingPlane00);
     tolua_function(tolua_S,"Set_NearClippingPlane",tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_NearClippingPlane00);
     tolua_function(tolua_S,"Get_FarClippingPlane",tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_FarClippingPlane00);
     tolua_function(tolua_S,"Set_FarClippingPlane",tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_FarClippingPlane00);
     tolua_function(tolua_S,"Get_Aspect",tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Aspect00);
     tolua_function(tolua_S,"Set_Aspect",tolua_Singularity_scripting_Singularity_Graphics_Camera_Set_Aspect00);
     tolua_function(tolua_S,"Get_Width",tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Width00);
     tolua_function(tolua_S,"Get_Height",tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Height00);
     tolua_function(tolua_S,"Get_Forward",tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Forward00);
     tolua_function(tolua_S,"Get_Up",tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Up00);
     tolua_function(tolua_S,"Get_Right",tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Right00);
     tolua_function(tolua_S,"Get_View",tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_View00);
     tolua_function(tolua_S,"Get_Projection",tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Projection00);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Graphics_Camera_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Graphics_Camera_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Graphics_Camera_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Graphics_Camera_delete00);
     tolua_function(tolua_S,"Activate",tolua_Singularity_scripting_Singularity_Graphics_Camera_Activate00);
     tolua_function(tolua_S,"Get_Current",tolua_Singularity_scripting_Singularity_Graphics_Camera_Get_Current00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Graphics",0);
   tolua_beginmodule(tolua_S,"Graphics");
    tolua_constant(tolua_S,"Point",Singularity::Graphics::Point);
    tolua_constant(tolua_S,"Spot",Singularity::Graphics::Spot);
    tolua_constant(tolua_S,"Directional",Singularity::Graphics::Directional);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Light","Singularity::Graphics::Light","Singularity::Components::Component",tolua_collect_Singularity__Graphics__Light);
    #else
    tolua_cclass(tolua_S,"Light","Singularity::Graphics::Light","Singularity::Components::Component",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Light");
     tolua_function(tolua_S,"Get_Type",tolua_Singularity_scripting_Singularity_Graphics_Light_Get_Type00);
     tolua_function(tolua_S,"Set_Type",tolua_Singularity_scripting_Singularity_Graphics_Light_Set_Type00);
     tolua_function(tolua_S,"Get_Color",tolua_Singularity_scripting_Singularity_Graphics_Light_Get_Color00);
     tolua_function(tolua_S,"Set_Color",tolua_Singularity_scripting_Singularity_Graphics_Light_Set_Color00);
     tolua_function(tolua_S,"Get_Falloff",tolua_Singularity_scripting_Singularity_Graphics_Light_Get_Falloff00);
     tolua_function(tolua_S,"Set_Falloff",tolua_Singularity_scripting_Singularity_Graphics_Light_Set_Falloff00);
     tolua_function(tolua_S,"Get_Range",tolua_Singularity_scripting_Singularity_Graphics_Light_Get_Range00);
     tolua_function(tolua_S,"Set_Range",tolua_Singularity_scripting_Singularity_Graphics_Light_Set_Range00);
     tolua_function(tolua_S,"Get_Intensity",tolua_Singularity_scripting_Singularity_Graphics_Light_Get_Intensity00);
     tolua_function(tolua_S,"Set_Intensity",tolua_Singularity_scripting_Singularity_Graphics_Light_Set_Intensity00);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Graphics_Light_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Graphics_Light_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Graphics_Light_new00_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Graphics_Light_new01);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Graphics_Light_new01_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Graphics_Light_new01_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Graphics_Light_new02);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Graphics_Light_new02_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Graphics_Light_new02_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Graphics_Light_new03);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Graphics_Light_new03_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Graphics_Light_new03_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Graphics_Light_delete00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Graphics",0);
   tolua_beginmodule(tolua_S,"Graphics");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Material","Singularity::Graphics::Material","",tolua_collect_Singularity__Graphics__Material);
    #else
    tolua_cclass(tolua_S,"Material","Singularity::Graphics::Material","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Material");
     tolua_function(tolua_S,"Get_PassCount",tolua_Singularity_scripting_Singularity_Graphics_Material_Get_PassCount00);
     tolua_function(tolua_S,"Set_Pass",tolua_Singularity_scripting_Singularity_Graphics_Material_Set_Pass00);
     tolua_function(tolua_S,"Get_Color",tolua_Singularity_scripting_Singularity_Graphics_Material_Get_Color00);
     tolua_function(tolua_S,"Set_Color",tolua_Singularity_scripting_Singularity_Graphics_Material_Set_Color00);
     tolua_function(tolua_S,"Get_MainTexture",tolua_Singularity_scripting_Singularity_Graphics_Material_Get_MainTexture00);
     tolua_function(tolua_S,"Set_MainTexture",tolua_Singularity_scripting_Singularity_Graphics_Material_Set_MainTexture00);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Graphics_Material_delete00);
     tolua_function(tolua_S,"SetVariable",tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable00);
     tolua_function(tolua_S,"SetVariable",tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable01);
     tolua_function(tolua_S,"SetVariable",tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable02);
     tolua_function(tolua_S,"SetVariable",tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable03);
     tolua_function(tolua_S,"SetVariable",tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable04);
     tolua_function(tolua_S,"SetVariable",tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable05);
     tolua_function(tolua_S,"SetVariable",tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable06);
     tolua_function(tolua_S,"SetVariable",tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable07);
     tolua_function(tolua_S,"SetVariable",tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable08);
     tolua_function(tolua_S,"SetVariable",tolua_Singularity_scripting_Singularity_Graphics_Material_SetVariable09);
     tolua_function(tolua_S,"Clone",tolua_Singularity_scripting_Singularity_Graphics_Material_Clone00);
     tolua_function(tolua_S,"Destroy",tolua_Singularity_scripting_Singularity_Graphics_Material_Destroy00);
     tolua_function(tolua_S,"Apply",tolua_Singularity_scripting_Singularity_Graphics_Material_Apply00);
     tolua_function(tolua_S,"CreateBasicMaterial",tolua_Singularity_scripting_Singularity_Graphics_Material_CreateBasicMaterial00);
     tolua_function(tolua_S,"LoadMaterialFromMemory",tolua_Singularity_scripting_Singularity_Graphics_Material_LoadMaterialFromMemory00);
     tolua_function(tolua_S,"LoadMaterialFromFile",tolua_Singularity_scripting_Singularity_Graphics_Material_LoadMaterialFromFile00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Graphics",0);
   tolua_beginmodule(tolua_S,"Graphics");
    tolua_constant(tolua_S,"Cube",Singularity::Graphics::Cube);
    tolua_constant(tolua_S,"Cone",Singularity::Graphics::Cone);
    tolua_constant(tolua_S,"Cylinder",Singularity::Graphics::Cylinder);
    tolua_constant(tolua_S,"Sphere",Singularity::Graphics::Sphere);
    tolua_constant(tolua_S,"Plane",Singularity::Graphics::Plane);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Mesh","Singularity::Graphics::Mesh","Singularity::Object",tolua_collect_Singularity__Graphics__Mesh);
    #else
    tolua_cclass(tolua_S,"Mesh","Singularity::Graphics::Mesh","Singularity::Object",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Mesh");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Graphics_Mesh_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Graphics_Mesh_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Graphics_Mesh_new00_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Graphics_Mesh_new01);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Graphics_Mesh_new01_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Graphics_Mesh_new01_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Graphics_Mesh_delete00);
     tolua_function(tolua_S,"Get_Bounds",tolua_Singularity_scripting_Singularity_Graphics_Mesh_Get_Bounds00);
     tolua_function(tolua_S,"Get_Topology",tolua_Singularity_scripting_Singularity_Graphics_Mesh_Get_Topology00);
     tolua_function(tolua_S,"Set_Topology",tolua_Singularity_scripting_Singularity_Graphics_Mesh_Set_Topology00);
     tolua_function(tolua_S,"Get_VertexBuffer",tolua_Singularity_scripting_Singularity_Graphics_Mesh_Get_VertexBuffer00);
     tolua_function(tolua_S,"Set_VertexBuffer",tolua_Singularity_scripting_Singularity_Graphics_Mesh_Set_VertexBuffer00);
     tolua_function(tolua_S,"Get_IndexBuffer",tolua_Singularity_scripting_Singularity_Graphics_Mesh_Get_IndexBuffer00);
     tolua_function(tolua_S,"Set_IndexBuffer",tolua_Singularity_scripting_Singularity_Graphics_Mesh_Set_IndexBuffer00);
     tolua_function(tolua_S,"Clear",tolua_Singularity_scripting_Singularity_Graphics_Mesh_Clear00);
     tolua_function(tolua_S,"Clone",tolua_Singularity_scripting_Singularity_Graphics_Mesh_Clone00);
     tolua_function(tolua_S,"RecalculateBounds",tolua_Singularity_scripting_Singularity_Graphics_Mesh_RecalculateBounds00);
     tolua_function(tolua_S,"SetVertices",tolua_Singularity_scripting_Singularity_Graphics_Mesh_SetVertices00);
     tolua_function(tolua_S,"SetIndices",tolua_Singularity_scripting_Singularity_Graphics_Mesh_SetIndices00);
     tolua_function(tolua_S,"CreatePrimitive",tolua_Singularity_scripting_Singularity_Graphics_Mesh_CreatePrimitive00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Graphics",0);
   tolua_beginmodule(tolua_S,"Graphics");
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Graphics",0);
   tolua_beginmodule(tolua_S,"Graphics");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Renderer","Singularity::Graphics::Renderer","Singularity::Components::Component",tolua_collect_Singularity__Graphics__Renderer);
    #else
    tolua_cclass(tolua_S,"Renderer","Singularity::Graphics::Renderer","Singularity::Components::Component",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Renderer");
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Graphics_Renderer_delete00);
     tolua_function(tolua_S,"Get_IsVisible",tolua_Singularity_scripting_Singularity_Graphics_Renderer_Get_IsVisible00);
     tolua_function(tolua_S,"Get_Material",tolua_Singularity_scripting_Singularity_Graphics_Renderer_Get_Material00);
     tolua_function(tolua_S,"Set_Material",tolua_Singularity_scripting_Singularity_Graphics_Renderer_Set_Material00);
     tolua_function(tolua_S,"Get_IsTiedToCamera",tolua_Singularity_scripting_Singularity_Graphics_Renderer_Get_IsTiedToCamera00);
     tolua_function(tolua_S,"Set_IsTiedToCamera",tolua_Singularity_scripting_Singularity_Graphics_Renderer_Set_IsTiedToCamera00);
     tolua_function(tolua_S,"Get_Bounds",tolua_Singularity_scripting_Singularity_Graphics_Renderer_Get_Bounds00);
     tolua_function(tolua_S,"RegisterCallback",tolua_Singularity_scripting_Singularity_Graphics_Renderer_RegisterCallback00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Graphics",0);
   tolua_beginmodule(tolua_S,"Graphics");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"MeshRenderer","Singularity::Graphics::MeshRenderer","Singularity::Graphics::Renderer",tolua_collect_Singularity__Graphics__MeshRenderer);
    #else
    tolua_cclass(tolua_S,"MeshRenderer","Singularity::Graphics::MeshRenderer","Singularity::Graphics::Renderer",NULL);
    #endif
    tolua_beginmodule(tolua_S,"MeshRenderer");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_new00_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_new01);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_new01_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_new01_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_delete00);
     tolua_function(tolua_S,"Get_Mesh",tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_Get_Mesh00);
     tolua_function(tolua_S,"Set_Mesh",tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_Set_Mesh00);
     tolua_function(tolua_S,"Get_Layer",tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_Get_Layer00);
     tolua_function(tolua_S,"Set_Layer",tolua_Singularity_scripting_Singularity_Graphics_MeshRenderer_Set_Layer00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Graphics",0);
   tolua_beginmodule(tolua_S,"Graphics");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Axis","Singularity::Graphics::Axis","Singularity::Graphics::MeshRenderer",tolua_collect_Singularity__Graphics__Axis);
    #else
    tolua_cclass(tolua_S,"Axis","Singularity::Graphics::Axis","Singularity::Graphics::MeshRenderer",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Axis");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Graphics_Axis_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Graphics_Axis_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Graphics_Axis_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Graphics_Axis_delete00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Inputs",0);
   tolua_beginmodule(tolua_S,"Inputs");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"MouseState","Singularity::Inputs::MouseState","",tolua_collect_Singularity__Inputs__MouseState);
    #else
    tolua_cclass(tolua_S,"MouseState","Singularity::Inputs::MouseState","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"MouseState");
     tolua_function(tolua_S,"GetMousePosition",tolua_Singularity_scripting_Singularity_Inputs_MouseState_GetMousePosition00);
     tolua_function(tolua_S,"GetMouseButton",tolua_Singularity_scripting_Singularity_Inputs_MouseState_GetMouseButton00);
     tolua_function(tolua_S,".eq",tolua_Singularity_scripting_Singularity_Inputs_MouseState__eq00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Inputs",0);
   tolua_beginmodule(tolua_S,"Inputs");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"KeyboardState","Singularity::Inputs::KeyboardState","",tolua_collect_Singularity__Inputs__KeyboardState);
    #else
    tolua_cclass(tolua_S,"KeyboardState","Singularity::Inputs::KeyboardState","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"KeyboardState");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Inputs_KeyboardState_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Inputs_KeyboardState_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Inputs_KeyboardState_new00_local);
     tolua_function(tolua_S,"IsKeyDown",tolua_Singularity_scripting_Singularity_Inputs_KeyboardState_IsKeyDown00);
     tolua_function(tolua_S,"IsKeyUp",tolua_Singularity_scripting_Singularity_Inputs_KeyboardState_IsKeyUp00);
     tolua_function(tolua_S,".eq",tolua_Singularity_scripting_Singularity_Inputs_KeyboardState__eq00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Inputs",0);
   tolua_beginmodule(tolua_S,"Inputs");
    tolua_cclass(tolua_S,"Input","Singularity::Inputs::Input","",NULL);
    tolua_beginmodule(tolua_S,"Input");
     tolua_function(tolua_S,"GetMouseState",tolua_Singularity_scripting_Singularity_Inputs_Input_GetMouseState00);
     tolua_function(tolua_S,"GetKeyboardState",tolua_Singularity_scripting_Singularity_Inputs_Input_GetKeyboardState00);
     tolua_function(tolua_S,"ResetMousePosition",tolua_Singularity_scripting_Singularity_Inputs_Input_ResetMousePosition00);
     tolua_function(tolua_S,"SetMousePosition",tolua_Singularity_scripting_Singularity_Inputs_Input_SetMousePosition00);
     tolua_function(tolua_S,"GetMousePosition",tolua_Singularity_scripting_Singularity_Inputs_Input_GetMousePosition00);
     tolua_function(tolua_S,"GetMouseButton",tolua_Singularity_scripting_Singularity_Inputs_Input_GetMouseButton00);
     tolua_function(tolua_S,"IsKeyDown",tolua_Singularity_scripting_Singularity_Inputs_Input_IsKeyDown00);
     tolua_function(tolua_S,"IsKeyUp",tolua_Singularity_scripting_Singularity_Inputs_Input_IsKeyUp00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Physics",0);
   tolua_beginmodule(tolua_S,"Physics");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Collider","Singularity::Physics::Collider","Singularity::Components::Component",tolua_collect_Singularity__Physics__Collider);
    #else
    tolua_cclass(tolua_S,"Collider","Singularity::Physics::Collider","Singularity::Components::Component",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Collider");
     tolua_function(tolua_S,"Get_Center",tolua_Singularity_scripting_Singularity_Physics_Collider_Get_Center00);
     tolua_function(tolua_S,"Set_Center",tolua_Singularity_scripting_Singularity_Physics_Collider_Set_Center00);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Physics_Collider_delete00);
     tolua_variable(tolua_S,"CollisionEnter",tolua_get_Singularity__Physics__Collider_CollisionEnter,tolua_set_Singularity__Physics__Collider_CollisionEnter);
     tolua_variable(tolua_S,"CollisionExit",tolua_get_Singularity__Physics__Collider_CollisionExit,tolua_set_Singularity__Physics__Collider_CollisionExit);
     tolua_variable(tolua_S,"CollisionStay",tolua_get_Singularity__Physics__Collider_CollisionStay,tolua_set_Singularity__Physics__Collider_CollisionStay);
     tolua_function(tolua_S,"Rotate",tolua_Singularity_scripting_Singularity_Physics_Collider_Rotate00);
     tolua_function(tolua_S,"Set_Rotation",tolua_Singularity_scripting_Singularity_Physics_Collider_Set_Rotation00);
     tolua_function(tolua_S,"Translate",tolua_Singularity_scripting_Singularity_Physics_Collider_Translate00);
     tolua_function(tolua_S,"Set_Position",tolua_Singularity_scripting_Singularity_Physics_Collider_Set_Position00);
     tolua_function(tolua_S,"Get_Rotation",tolua_Singularity_scripting_Singularity_Physics_Collider_Get_Rotation00);
     tolua_function(tolua_S,"Get_Position",tolua_Singularity_scripting_Singularity_Physics_Collider_Get_Position00);
     tolua_function(tolua_S,"Set_Scale",tolua_Singularity_scripting_Singularity_Physics_Collider_Set_Scale00);
     tolua_function(tolua_S,"Raycast",tolua_Singularity_scripting_Singularity_Physics_Collider_Raycast00);
     tolua_function(tolua_S,"SphereCast",tolua_Singularity_scripting_Singularity_Physics_Collider_SphereCast00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Physics",0);
   tolua_beginmodule(tolua_S,"Physics");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"BoxCollider","Singularity::Physics::BoxCollider","Singularity::Physics::Collider",tolua_collect_Singularity__Physics__BoxCollider);
    #else
    tolua_cclass(tolua_S,"BoxCollider","Singularity::Physics::BoxCollider","Singularity::Physics::Collider",NULL);
    #endif
    tolua_beginmodule(tolua_S,"BoxCollider");
     tolua_function(tolua_S,"Get_Size",tolua_Singularity_scripting_Singularity_Physics_BoxCollider_Get_Size00);
     tolua_function(tolua_S,"Set_Size",tolua_Singularity_scripting_Singularity_Physics_BoxCollider_Set_Size00);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new00_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new01);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new01_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new01_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new02);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new02_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Physics_BoxCollider_new02_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Physics_BoxCollider_delete00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Physics",0);
   tolua_beginmodule(tolua_S,"Physics");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"SphereCollider","Singularity::Physics::SphereCollider","Singularity::Physics::Collider",tolua_collect_Singularity__Physics__SphereCollider);
    #else
    tolua_cclass(tolua_S,"SphereCollider","Singularity::Physics::SphereCollider","Singularity::Physics::Collider",NULL);
    #endif
    tolua_beginmodule(tolua_S,"SphereCollider");
     tolua_function(tolua_S,"Get_Radius",tolua_Singularity_scripting_Singularity_Physics_SphereCollider_Get_Radius00);
     tolua_function(tolua_S,"Set_Radius",tolua_Singularity_scripting_Singularity_Physics_SphereCollider_Set_Radius00);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Physics_SphereCollider_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Physics_SphereCollider_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Physics_SphereCollider_new00_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Physics_SphereCollider_new01);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Physics_SphereCollider_new01_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Physics_SphereCollider_new01_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Physics_SphereCollider_delete00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Physics",0);
   tolua_beginmodule(tolua_S,"Physics");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"CapsuleCollider","Singularity::Physics::CapsuleCollider","Singularity::Physics::Collider",tolua_collect_Singularity__Physics__CapsuleCollider);
    #else
    tolua_cclass(tolua_S,"CapsuleCollider","Singularity::Physics::CapsuleCollider","Singularity::Physics::Collider",NULL);
    #endif
    tolua_beginmodule(tolua_S,"CapsuleCollider");
     tolua_function(tolua_S,"Get_Radius",tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_Get_Radius00);
     tolua_function(tolua_S,"Set_Radius",tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_Set_Radius00);
     tolua_function(tolua_S,"Get_Height",tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_Get_Height00);
     tolua_function(tolua_S,"Set_Height",tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_Set_Height00);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_new00_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_new01);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_new01_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_new01_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Physics_CapsuleCollider_delete00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Physics",0);
   tolua_beginmodule(tolua_S,"Physics");
    tolua_constant(tolua_S,"Force",Singularity::Physics::Force);
    tolua_constant(tolua_S,"VelocityChange",Singularity::Physics::VelocityChange);
    tolua_constant(tolua_S,"Acceleration",Singularity::Physics::Acceleration);
    tolua_constant(tolua_S,"Impulse",Singularity::Physics::Impulse);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"RigidBody","Singularity::Physics::RigidBody","Singularity::Components::Component",tolua_collect_Singularity__Physics__RigidBody);
    #else
    tolua_cclass(tolua_S,"RigidBody","Singularity::Physics::RigidBody","Singularity::Components::Component",NULL);
    #endif
    tolua_beginmodule(tolua_S,"RigidBody");
     tolua_function(tolua_S,"Get_Velocity",tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_Velocity00);
     tolua_function(tolua_S,"Get_AngularVelocity",tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_AngularVelocity00);
     tolua_function(tolua_S,"Get_FreezeRotation",tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_FreezeRotation00);
     tolua_function(tolua_S,"Set_FreezeRotation",tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_FreezeRotation00);
     tolua_function(tolua_S,"Get_CenterOfMass",tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_CenterOfMass00);
     tolua_function(tolua_S,"Set_CenterOfMass",tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_CenterOfMass00);
     tolua_function(tolua_S,"Get_Drag",tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_Drag00);
     tolua_function(tolua_S,"Set_Drag",tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_Drag00);
     tolua_function(tolua_S,"Get_AngularDrag",tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_AngularDrag00);
     tolua_function(tolua_S,"Set_AngularDrag",tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_AngularDrag00);
     tolua_function(tolua_S,"Get_Mass",tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_Mass00);
     tolua_function(tolua_S,"Set_Mass",tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_Mass00);
     tolua_function(tolua_S,"Get_Gravity",tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_Gravity00);
     tolua_function(tolua_S,"Set_Gravity",tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_Gravity00);
     tolua_function(tolua_S,"Get_IgnoreGravity",tolua_Singularity_scripting_Singularity_Physics_RigidBody_Get_IgnoreGravity00);
     tolua_function(tolua_S,"Set_IgnoreGravity",tolua_Singularity_scripting_Singularity_Physics_RigidBody_Set_IgnoreGravity00);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Physics_RigidBody_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Physics_RigidBody_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Physics_RigidBody_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Physics_RigidBody_delete00);
     tolua_function(tolua_S,"AddForce",tolua_Singularity_scripting_Singularity_Physics_RigidBody_AddForce00);
     tolua_function(tolua_S,"AddTorque",tolua_Singularity_scripting_Singularity_Physics_RigidBody_AddTorque00);
     tolua_function(tolua_S,"AddForceAtPosition",tolua_Singularity_scripting_Singularity_Physics_RigidBody_AddForceAtPosition00);
     tolua_function(tolua_S,"AddExplosiveForce",tolua_Singularity_scripting_Singularity_Physics_RigidBody_AddExplosiveForce00);
     tolua_function(tolua_S,"StopAllMovement",tolua_Singularity_scripting_Singularity_Physics_RigidBody_StopAllMovement00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Physics",0);
   tolua_beginmodule(tolua_S,"Physics");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"CharacterController","Singularity::Physics::CharacterController","Singularity::Physics::Collider",tolua_collect_Singularity__Physics__CharacterController);
    #else
    tolua_cclass(tolua_S,"CharacterController","Singularity::Physics::CharacterController","Singularity::Physics::Collider",NULL);
    #endif
    tolua_beginmodule(tolua_S,"CharacterController");
     tolua_function(tolua_S,"Get_Radius",tolua_Singularity_scripting_Singularity_Physics_CharacterController_Get_Radius00);
     tolua_function(tolua_S,"Set_Radius",tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_Radius00);
     tolua_function(tolua_S,"Get_Height",tolua_Singularity_scripting_Singularity_Physics_CharacterController_Get_Height00);
     tolua_function(tolua_S,"Set_Height",tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_Height00);
     tolua_function(tolua_S,"Get_SlopeLimit",tolua_Singularity_scripting_Singularity_Physics_CharacterController_Get_SlopeLimit00);
     tolua_function(tolua_S,"Set_SlopeLimit",tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_SlopeLimit00);
     tolua_function(tolua_S,"Get_StepOffset",tolua_Singularity_scripting_Singularity_Physics_CharacterController_Get_StepOffset00);
     tolua_function(tolua_S,"Set_StepOffset",tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_StepOffset00);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Physics_CharacterController_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Physics_CharacterController_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Physics_CharacterController_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Physics_CharacterController_delete00);
     tolua_function(tolua_S,"Move",tolua_Singularity_scripting_Singularity_Physics_CharacterController_Move00);
     tolua_function(tolua_S,"Jump",tolua_Singularity_scripting_Singularity_Physics_CharacterController_Jump00);
     tolua_function(tolua_S,"Set_Gravity",tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_Gravity00);
     tolua_function(tolua_S,"Set_Mass",tolua_Singularity_scripting_Singularity_Physics_CharacterController_Set_Mass00);
     tolua_function(tolua_S,"AddExplosiveForce",tolua_Singularity_scripting_Singularity_Physics_CharacterController_AddExplosiveForce00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Gui",0);
   tolua_beginmodule(tolua_S,"Gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"NinePatch","Singularity::Gui::NinePatch","",tolua_collect_Singularity__Gui__NinePatch);
    #else
    tolua_cclass(tolua_S,"NinePatch","Singularity::Gui::NinePatch","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"NinePatch");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_NinePatch_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_NinePatch_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_NinePatch_new00_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_NinePatch_new01);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_NinePatch_new01_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_NinePatch_new01_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Gui_NinePatch_delete00);
     tolua_function(tolua_S,"Get_Height",tolua_Singularity_scripting_Singularity_Gui_NinePatch_Get_Height00);
     tolua_function(tolua_S,"Set_Height",tolua_Singularity_scripting_Singularity_Gui_NinePatch_Set_Height00);
     tolua_function(tolua_S,"Get_Width",tolua_Singularity_scripting_Singularity_Gui_NinePatch_Get_Width00);
     tolua_function(tolua_S,"Set_Width",tolua_Singularity_scripting_Singularity_Gui_NinePatch_Set_Width00);
     tolua_function(tolua_S,"Get_Padding",tolua_Singularity_scripting_Singularity_Gui_NinePatch_Get_Padding00);
     tolua_function(tolua_S,"Set_Padding",tolua_Singularity_scripting_Singularity_Gui_NinePatch_Set_Padding00);
     tolua_function(tolua_S,"GetTexture",tolua_Singularity_scripting_Singularity_Gui_NinePatch_GetTexture00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Gui",0);
   tolua_beginmodule(tolua_S,"Gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Font","Singularity::Gui::Font","",tolua_collect_Singularity__Gui__Font);
    #else
    tolua_cclass(tolua_S,"Font","Singularity::Gui::Font","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Font");
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Gui_Font_delete00);
     tolua_function(tolua_S,"Get_FontName",tolua_Singularity_scripting_Singularity_Gui_Font_Get_FontName00);
     tolua_function(tolua_S,"Get_Kerning",tolua_Singularity_scripting_Singularity_Gui_Font_Get_Kerning00);
     tolua_function(tolua_S,"Set_Kerning",tolua_Singularity_scripting_Singularity_Gui_Font_Set_Kerning00);
     tolua_function(tolua_S,"Create",tolua_Singularity_scripting_Singularity_Gui_Font_Create00);
     tolua_function(tolua_S,"Get_Font",tolua_Singularity_scripting_Singularity_Gui_Font_Get_Font00);
     tolua_function(tolua_S,"GetStringWidth",tolua_Singularity_scripting_Singularity_Gui_Font_GetStringWidth00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Gui",0);
   tolua_beginmodule(tolua_S,"Gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"GuiScreen","Singularity::Gui::GuiScreen","Singularity::Graphics::Renderer",tolua_collect_Singularity__Gui__GuiScreen);
    #else
    tolua_cclass(tolua_S,"GuiScreen","Singularity::Gui::GuiScreen","Singularity::Graphics::Renderer",NULL);
    #endif
    tolua_beginmodule(tolua_S,"GuiScreen");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_GuiScreen_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_GuiScreen_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_GuiScreen_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Gui_GuiScreen_delete00);
     tolua_function(tolua_S,"Get_ControlWithFocus",tolua_Singularity_scripting_Singularity_Gui_GuiScreen_Get_ControlWithFocus00);
     tolua_function(tolua_S,"GetControl",tolua_Singularity_scripting_Singularity_Gui_GuiScreen_GetControl00);
     tolua_function(tolua_S,"AddWindow",tolua_Singularity_scripting_Singularity_Gui_GuiScreen_AddWindow00);
     tolua_function(tolua_S,"RemoveWindow",tolua_Singularity_scripting_Singularity_Gui_GuiScreen_RemoveWindow00);
     tolua_function(tolua_S,"Clear",tolua_Singularity_scripting_Singularity_Gui_GuiScreen_Clear00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Gui",0);
   tolua_beginmodule(tolua_S,"Gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Control","Singularity::Gui::Control","Singularity::Object",tolua_collect_Singularity__Gui__Control);
    #else
    tolua_cclass(tolua_S,"Control","Singularity::Gui::Control","Singularity::Object",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Control");
     tolua_variable(tolua_S,"FocusGained",tolua_get_Singularity__Gui__Control_FocusGained,tolua_set_Singularity__Gui__Control_FocusGained);
     tolua_variable(tolua_S,"FocusLost",tolua_get_Singularity__Gui__Control_FocusLost,tolua_set_Singularity__Gui__Control_FocusLost);
     tolua_variable(tolua_S,"MouseDown",tolua_get_Singularity__Gui__Control_MouseDown,tolua_set_Singularity__Gui__Control_MouseDown);
     tolua_variable(tolua_S,"MouseUp",tolua_get_Singularity__Gui__Control_MouseUp,tolua_set_Singularity__Gui__Control_MouseUp);
     tolua_variable(tolua_S,"KeyDown",tolua_get_Singularity__Gui__Control_KeyDown,tolua_set_Singularity__Gui__Control_KeyDown);
     tolua_variable(tolua_S,"KeyUp",tolua_get_Singularity__Gui__Control_KeyUp,tolua_set_Singularity__Gui__Control_KeyUp);
     tolua_variable(tolua_S,"KeyPress",tolua_get_Singularity__Gui__Control_KeyPress,tolua_set_Singularity__Gui__Control_KeyPress);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_Control_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_Control_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_Control_new00_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_Control_new01);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_Control_new01_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_Control_new01_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_Control_new02);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_Control_new02_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_Control_new02_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Gui_Control_delete00);
     tolua_function(tolua_S,"Set_Parent",tolua_Singularity_scripting_Singularity_Gui_Control_Set_Parent00);
     tolua_function(tolua_S,"Set_Depth",tolua_Singularity_scripting_Singularity_Gui_Control_Set_Depth00);
     tolua_function(tolua_S,"Get_AbsolutePosition",tolua_Singularity_scripting_Singularity_Gui_Control_Get_AbsolutePosition00);
     tolua_function(tolua_S,"Get_HasFocus",tolua_Singularity_scripting_Singularity_Gui_Control_Get_HasFocus00);
     tolua_function(tolua_S,"Get_Name",tolua_Singularity_scripting_Singularity_Gui_Control_Get_Name00);
     tolua_function(tolua_S,"Set_Name",tolua_Singularity_scripting_Singularity_Gui_Control_Set_Name00);
     tolua_function(tolua_S,"Get_Position",tolua_Singularity_scripting_Singularity_Gui_Control_Get_Position00);
     tolua_function(tolua_S,"Set_Position",tolua_Singularity_scripting_Singularity_Gui_Control_Set_Position00);
     tolua_function(tolua_S,"Get_Size",tolua_Singularity_scripting_Singularity_Gui_Control_Get_Size00);
     tolua_function(tolua_S,"Set_Size",tolua_Singularity_scripting_Singularity_Gui_Control_Set_Size00);
     tolua_function(tolua_S,"Get_Texture",tolua_Singularity_scripting_Singularity_Gui_Control_Get_Texture00);
     tolua_function(tolua_S,"Set_Texture",tolua_Singularity_scripting_Singularity_Gui_Control_Set_Texture00);
     tolua_function(tolua_S,"Get_Visible",tolua_Singularity_scripting_Singularity_Gui_Control_Get_Visible00);
     tolua_function(tolua_S,"Set_Visible",tolua_Singularity_scripting_Singularity_Gui_Control_Set_Visible00);
     tolua_function(tolua_S,"Get_Enabled",tolua_Singularity_scripting_Singularity_Gui_Control_Get_Enabled00);
     tolua_function(tolua_S,"Set_Enabled",tolua_Singularity_scripting_Singularity_Gui_Control_Set_Enabled00);
     tolua_function(tolua_S,"Set_Color",tolua_Singularity_scripting_Singularity_Gui_Control_Set_Color00);
     tolua_function(tolua_S,"Get_NumberOfChildren",tolua_Singularity_scripting_Singularity_Gui_Control_Get_NumberOfChildren00);
     tolua_function(tolua_S,"SetFocus",tolua_Singularity_scripting_Singularity_Gui_Control_SetFocus00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Gui",0);
   tolua_beginmodule(tolua_S,"Gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"TextControl","Singularity::Gui::TextControl","Singularity::Gui::Control",tolua_collect_Singularity__Gui__TextControl);
    #else
    tolua_cclass(tolua_S,"TextControl","Singularity::Gui::TextControl","Singularity::Gui::Control",NULL);
    #endif
    tolua_beginmodule(tolua_S,"TextControl");
     tolua_function(tolua_S,"Get_Text",tolua_Singularity_scripting_Singularity_Gui_TextControl_Get_Text00);
     tolua_function(tolua_S,"Set_Text",tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_Text00);
     tolua_function(tolua_S,"Get_TextCenter",tolua_Singularity_scripting_Singularity_Gui_TextControl_Get_TextCenter00);
     tolua_function(tolua_S,"Get_Padding",tolua_Singularity_scripting_Singularity_Gui_TextControl_Get_Padding00);
     tolua_function(tolua_S,"Set_Padding",tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_Padding00);
     tolua_function(tolua_S,"Get_Font",tolua_Singularity_scripting_Singularity_Gui_TextControl_Get_Font00);
     tolua_function(tolua_S,"Set_Font",tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_Font00);
     tolua_function(tolua_S,"Get_FontMaterial",tolua_Singularity_scripting_Singularity_Gui_TextControl_Get_FontMaterial00);
     tolua_function(tolua_S,"Set_FontMaterial",tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_FontMaterial00);
     tolua_function(tolua_S,"Set_FontColor",tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_FontColor00);
     tolua_function(tolua_S,"Set_Texture",tolua_Singularity_scripting_Singularity_Gui_TextControl_Set_Texture00);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_TextControl_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_TextControl_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_TextControl_new00_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_TextControl_new01);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_TextControl_new01_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_TextControl_new01_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Gui_TextControl_delete00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Gui",0);
   tolua_beginmodule(tolua_S,"Gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Panel","Singularity::Gui::Panel","Singularity::Gui::Control",tolua_collect_Singularity__Gui__Panel);
    #else
    tolua_cclass(tolua_S,"Panel","Singularity::Gui::Panel","Singularity::Gui::Control",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Panel");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_Panel_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_Panel_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_Panel_new00_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_Panel_new01);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_Panel_new01_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_Panel_new01_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Gui_Panel_delete00);
     tolua_function(tolua_S,"AddControl",tolua_Singularity_scripting_Singularity_Gui_Panel_AddControl00);
     tolua_function(tolua_S,"RemoveControl",tolua_Singularity_scripting_Singularity_Gui_Panel_RemoveControl00);
     tolua_function(tolua_S,"SetPadding",tolua_Singularity_scripting_Singularity_Gui_Panel_SetPadding00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Gui",0);
   tolua_beginmodule(tolua_S,"Gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Window","Singularity::Gui::Window","Singularity::Gui::Panel",tolua_collect_Singularity__Gui__Window);
    #else
    tolua_cclass(tolua_S,"Window","Singularity::Gui::Window","Singularity::Gui::Panel",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Window");
     tolua_function(tolua_S,"Get_Draggable",tolua_Singularity_scripting_Singularity_Gui_Window_Get_Draggable00);
     tolua_function(tolua_S,"Set_Draggable",tolua_Singularity_scripting_Singularity_Gui_Window_Set_Draggable00);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_Window_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_Window_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_Window_new00_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_Window_new01);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_Window_new01_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_Window_new01_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Gui_Window_delete00);
     tolua_function(tolua_S,"SetFocus",tolua_Singularity_scripting_Singularity_Gui_Window_SetFocus00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Gui",0);
   tolua_beginmodule(tolua_S,"Gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Button","Singularity::Gui::Button","Singularity::Gui::TextControl",tolua_collect_Singularity__Gui__Button);
    #else
    tolua_cclass(tolua_S,"Button","Singularity::Gui::Button","Singularity::Gui::TextControl",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Button");
     tolua_variable(tolua_S,"Click",tolua_get_Singularity__Gui__Button_Click,tolua_set_Singularity__Gui__Button_Click);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_Button_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_Button_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_Button_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Gui_Button_delete00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Gui",0);
   tolua_beginmodule(tolua_S,"Gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Checkbox","Singularity::Gui::Checkbox","Singularity::Gui::Control",tolua_collect_Singularity__Gui__Checkbox);
    #else
    tolua_cclass(tolua_S,"Checkbox","Singularity::Gui::Checkbox","Singularity::Gui::Control",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Checkbox");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_Checkbox_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_Checkbox_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_Checkbox_new00_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_Checkbox_new01);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_Checkbox_new01_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_Checkbox_new01_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Gui_Checkbox_delete00);
     tolua_function(tolua_S,"Get_IsChecked",tolua_Singularity_scripting_Singularity_Gui_Checkbox_Get_IsChecked00);
     tolua_function(tolua_S,"Set_IsChecked",tolua_Singularity_scripting_Singularity_Gui_Checkbox_Set_IsChecked00);
     tolua_function(tolua_S,"Set_UncheckedTexture",tolua_Singularity_scripting_Singularity_Gui_Checkbox_Set_UncheckedTexture00);
     tolua_function(tolua_S,"Set_CheckedTexture",tolua_Singularity_scripting_Singularity_Gui_Checkbox_Set_CheckedTexture00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Gui",0);
   tolua_beginmodule(tolua_S,"Gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Image","Singularity::Gui::Image","Singularity::Gui::Control",tolua_collect_Singularity__Gui__Image);
    #else
    tolua_cclass(tolua_S,"Image","Singularity::Gui::Image","Singularity::Gui::Control",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Image");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_Image_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_Image_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_Image_new00_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_Image_new01);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_Image_new01_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_Image_new01_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Gui_Image_delete00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Gui",0);
   tolua_beginmodule(tolua_S,"Gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Label","Singularity::Gui::Label","Singularity::Gui::TextControl",tolua_collect_Singularity__Gui__Label);
    #else
    tolua_cclass(tolua_S,"Label","Singularity::Gui::Label","Singularity::Gui::TextControl",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Label");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_Label_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_Label_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_Label_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Gui_Label_delete00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Gui",0);
   tolua_beginmodule(tolua_S,"Gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"TextBox","Singularity::Gui::TextBox","Singularity::Gui::TextControl",tolua_collect_Singularity__Gui__TextBox);
    #else
    tolua_cclass(tolua_S,"TextBox","Singularity::Gui::TextBox","Singularity::Gui::TextControl",NULL);
    #endif
    tolua_beginmodule(tolua_S,"TextBox");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_TextBox_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_TextBox_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_TextBox_new00_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_TextBox_new01);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_TextBox_new01_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_TextBox_new01_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Gui_TextBox_delete00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Gui",0);
   tolua_beginmodule(tolua_S,"Gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"ListBoxElement","Singularity::Gui::ListBoxElement","Singularity::Gui::TextControl",tolua_collect_Singularity__Gui__ListBoxElement);
    #else
    tolua_cclass(tolua_S,"ListBoxElement","Singularity::Gui::ListBoxElement","Singularity::Gui::TextControl",NULL);
    #endif
    tolua_beginmodule(tolua_S,"ListBoxElement");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_delete00);
     tolua_function(tolua_S,"Set_OptionTexture",tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_Set_OptionTexture00);
     tolua_function(tolua_S,"Set_HighlightTexture",tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_Set_HighlightTexture00);
     tolua_function(tolua_S,"Set_OptionColor",tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_Set_OptionColor00);
     tolua_function(tolua_S,"Set_OptionHighlightColor",tolua_Singularity_scripting_Singularity_Gui_ListBoxElement_Set_OptionHighlightColor00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Gui",0);
   tolua_beginmodule(tolua_S,"Gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"ListBox","Singularity::Gui::ListBox","Singularity::Gui::TextControl",tolua_collect_Singularity__Gui__ListBox);
    #else
    tolua_cclass(tolua_S,"ListBox","Singularity::Gui::ListBox","Singularity::Gui::TextControl",NULL);
    #endif
    tolua_beginmodule(tolua_S,"ListBox");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Gui_ListBox_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Gui_ListBox_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Gui_ListBox_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Gui_ListBox_delete00);
     tolua_variable(tolua_S,"Select",tolua_get_Singularity__Gui__ListBox_Select,tolua_set_Singularity__Gui__ListBox_Select);
     tolua_function(tolua_S,"RemoveOption",tolua_Singularity_scripting_Singularity_Gui_ListBox_RemoveOption00);
     tolua_function(tolua_S,"RemoveOption",tolua_Singularity_scripting_Singularity_Gui_ListBox_RemoveOption01);
     tolua_function(tolua_S,"AddOption",tolua_Singularity_scripting_Singularity_Gui_ListBox_AddOption00);
     tolua_function(tolua_S,"AddOption",tolua_Singularity_scripting_Singularity_Gui_ListBox_AddOption01);
     tolua_function(tolua_S,"Clear",tolua_Singularity_scripting_Singularity_Gui_ListBox_Clear00);
     tolua_function(tolua_S,"Set_Extended",tolua_Singularity_scripting_Singularity_Gui_ListBox_Set_Extended00);
     tolua_function(tolua_S,"ItemSelected",tolua_Singularity_scripting_Singularity_Gui_ListBox_ItemSelected00);
     tolua_function(tolua_S,"InitializeListBox",tolua_Singularity_scripting_Singularity_Gui_ListBox_InitializeListBox00);
     tolua_function(tolua_S,"Set_OptionTexture",tolua_Singularity_scripting_Singularity_Gui_ListBox_Set_OptionTexture00);
     tolua_function(tolua_S,"Set_OptionHighlightTexture",tolua_Singularity_scripting_Singularity_Gui_ListBox_Set_OptionHighlightTexture00);
     tolua_function(tolua_S,"Set_OptionFontColor",tolua_Singularity_scripting_Singularity_Gui_ListBox_Set_OptionFontColor00);
     tolua_function(tolua_S,"Set_OptionHighlightColor",tolua_Singularity_scripting_Singularity_Gui_ListBox_Set_OptionHighlightColor00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Content",0);
   tolua_beginmodule(tolua_S,"Content");
    tolua_cclass(tolua_S,"IContentImporter","Singularity::Content::IContentImporter","",NULL);
    tolua_beginmodule(tolua_S,"IContentImporter");
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Content",0);
   tolua_beginmodule(tolua_S,"Content");
    tolua_cclass(tolua_S,"IModelImporter","Singularity::Content::IModelImporter","Singularity::Content::IContentImporter",NULL);
    tolua_beginmodule(tolua_S,"IModelImporter");
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Content",0);
   tolua_beginmodule(tolua_S,"Content");
    tolua_cclass(tolua_S,"ModelLoader","Singularity::Content::ModelLoader","",NULL);
    tolua_beginmodule(tolua_S,"ModelLoader");
     tolua_function(tolua_S,"LoadModel",tolua_Singularity_scripting_Singularity_Content_ModelLoader_LoadModel00);
     tolua_function(tolua_S,"LoadMesh",tolua_Singularity_scripting_Singularity_Content_ModelLoader_LoadMesh00);
     tolua_function(tolua_S,"LoadMaterial",tolua_Singularity_scripting_Singularity_Content_ModelLoader_LoadMaterial00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Content",0);
   tolua_beginmodule(tolua_S,"Content");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"SmurfModelImporter","Singularity::Content::SmurfModelImporter","Singularity::Content::IModelImporter",tolua_collect_Singularity__Content__SmurfModelImporter);
    #else
    tolua_cclass(tolua_S,"SmurfModelImporter","Singularity::Content::SmurfModelImporter","Singularity::Content::IModelImporter",NULL);
    #endif
    tolua_beginmodule(tolua_S,"SmurfModelImporter");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Content_SmurfModelImporter_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Content_SmurfModelImporter_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Content_SmurfModelImporter_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Content_SmurfModelImporter_delete00);
     tolua_function(tolua_S,"LoadCollisionData",tolua_Singularity_scripting_Singularity_Content_SmurfModelImporter_LoadCollisionData00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Audio",0);
   tolua_beginmodule(tolua_S,"Audio");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"AudioManager","Singularity::Audio::AudioManager","",tolua_collect_Singularity__Audio__AudioManager);
    #else
    tolua_cclass(tolua_S,"AudioManager","Singularity::Audio::AudioManager","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"AudioManager");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Audio_AudioManager_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Audio_AudioManager_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Audio_AudioManager_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Audio_AudioManager_delete00);
     tolua_function(tolua_S,"UpdateEngine",tolua_Singularity_scripting_Singularity_Audio_AudioManager_UpdateEngine00);
     tolua_function(tolua_S,"CleanUp",tolua_Singularity_scripting_Singularity_Audio_AudioManager_CleanUp00);
     tolua_function(tolua_S,"TestEngine",tolua_Singularity_scripting_Singularity_Audio_AudioManager_TestEngine00);
     tolua_function(tolua_S,"Initialize",tolua_Singularity_scripting_Singularity_Audio_AudioManager_Initialize00);
     tolua_function(tolua_S,"LoadWaveBank",tolua_Singularity_scripting_Singularity_Audio_AudioManager_LoadWaveBank00);
     tolua_function(tolua_S,"LoadStreamingWaveBank",tolua_Singularity_scripting_Singularity_Audio_AudioManager_LoadStreamingWaveBank00);
     tolua_function(tolua_S,"LoadSoundBank",tolua_Singularity_scripting_Singularity_Audio_AudioManager_LoadSoundBank00);
     tolua_function(tolua_S,"CreateEngine",tolua_Singularity_scripting_Singularity_Audio_AudioManager_CreateEngine00);
     tolua_function(tolua_S,"GetNewEmitter",tolua_Singularity_scripting_Singularity_Audio_AudioManager_GetNewEmitter00);
     tolua_function(tolua_S,"GetSingleListener",tolua_Singularity_scripting_Singularity_Audio_AudioManager_GetSingleListener00);
     tolua_function(tolua_S,"Calculate3dPosition",tolua_Singularity_scripting_Singularity_Audio_AudioManager_Calculate3dPosition00);
     tolua_function(tolua_S,"CreateCue",tolua_Singularity_scripting_Singularity_Audio_AudioManager_CreateCue00);
     tolua_function(tolua_S,"PauseEngine",tolua_Singularity_scripting_Singularity_Audio_AudioManager_PauseEngine00);
     tolua_function(tolua_S,"PauseEngine",tolua_Singularity_scripting_Singularity_Audio_AudioManager_PauseEngine01);
     tolua_function(tolua_S,"MuteEngine",tolua_Singularity_scripting_Singularity_Audio_AudioManager_MuteEngine00);
     tolua_function(tolua_S,"MuteEngine",tolua_Singularity_scripting_Singularity_Audio_AudioManager_MuteEngine01);
     tolua_function(tolua_S,"StopAll",tolua_Singularity_scripting_Singularity_Audio_AudioManager_StopAll00);
     tolua_function(tolua_S,"SetVolume",tolua_Singularity_scripting_Singularity_Audio_AudioManager_SetVolume00);
     tolua_function(tolua_S,"Instantiate",tolua_Singularity_scripting_Singularity_Audio_AudioManager_Instantiate00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Audio",0);
   tolua_beginmodule(tolua_S,"Audio");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"AudioEmitter","Singularity::Audio::AudioEmitter","Singularity::Components::Component",tolua_collect_Singularity__Audio__AudioEmitter);
    #else
    tolua_cclass(tolua_S,"AudioEmitter","Singularity::Audio::AudioEmitter","Singularity::Components::Component",NULL);
    #endif
    tolua_beginmodule(tolua_S,"AudioEmitter");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_delete00);
     tolua_function(tolua_S,"OnComponentAdded",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_OnComponentAdded00);
     tolua_function(tolua_S,"OnComponentRemoved",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_OnComponentRemoved00);
     tolua_function(tolua_S,"Play",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Play00);
     tolua_function(tolua_S,"Pause",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Pause00);
     tolua_function(tolua_S,"Pause",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Pause01);
     tolua_function(tolua_S,"Stop",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Stop00);
     tolua_function(tolua_S,"UpdateState",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_UpdateState00);
     tolua_function(tolua_S,"CalculateDSP",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_CalculateDSP00);
     tolua_function(tolua_S,"Set_Offset",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Set_Offset00);
     tolua_function(tolua_S,"AddCue",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_AddCue00);
     tolua_function(tolua_S,"Get_IsPlaying",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_IsPlaying00);
     tolua_function(tolua_S,"Get_IsPaused",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_IsPaused00);
     tolua_function(tolua_S,"Get_IsLooping",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_IsLooping00);
     tolua_function(tolua_S,"Get_Is3dPositional",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_Is3dPositional00);
     tolua_function(tolua_S,"Get_NumberOfCues",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_NumberOfCues00);
     tolua_function(tolua_S,"Get_Cue",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_Cue00);
     tolua_function(tolua_S,"Get_EmitterCueIndex",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_Get_EmitterCueIndex00);
     tolua_function(tolua_S,"GetX3dEmitter",tolua_Singularity_scripting_Singularity_Audio_AudioEmitter_GetX3dEmitter00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Audio",0);
   tolua_beginmodule(tolua_S,"Audio");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"AudioListener","Singularity::Audio::AudioListener","Singularity::Components::Component",tolua_collect_Singularity__Audio__AudioListener);
    #else
    tolua_cclass(tolua_S,"AudioListener","Singularity::Audio::AudioListener","Singularity::Components::Component",NULL);
    #endif
    tolua_beginmodule(tolua_S,"AudioListener");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Audio_AudioListener_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Audio_AudioListener_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Audio_AudioListener_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Audio_AudioListener_delete00);
     tolua_function(tolua_S,"OnComponentAdded",tolua_Singularity_scripting_Singularity_Audio_AudioListener_OnComponentAdded00);
     tolua_function(tolua_S,"OnComponentRemoved",tolua_Singularity_scripting_Singularity_Audio_AudioListener_OnComponentRemoved00);
     tolua_function(tolua_S,"Initialize",tolua_Singularity_scripting_Singularity_Audio_AudioListener_Initialize00);
     tolua_function(tolua_S,"SetOffset",tolua_Singularity_scripting_Singularity_Audio_AudioListener_SetOffset00);
     tolua_function(tolua_S,"UpdateState",tolua_Singularity_scripting_Singularity_Audio_AudioListener_UpdateState00);
     tolua_function(tolua_S,"GetX3dListener",tolua_Singularity_scripting_Singularity_Audio_AudioListener_GetX3dListener00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Audio",0);
   tolua_beginmodule(tolua_S,"Audio");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"WaveBank","Singularity::Audio::WaveBank","",tolua_collect_Singularity__Audio__WaveBank);
    #else
    tolua_cclass(tolua_S,"WaveBank","Singularity::Audio::WaveBank","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"WaveBank");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Audio_WaveBank_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Audio_WaveBank_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Audio_WaveBank_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Audio_WaveBank_delete00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Audio",0);
   tolua_beginmodule(tolua_S,"Audio");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"SoundBank","Singularity::Audio::SoundBank","",tolua_collect_Singularity__Audio__SoundBank);
    #else
    tolua_cclass(tolua_S,"SoundBank","Singularity::Audio::SoundBank","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"SoundBank");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Audio_SoundBank_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Audio_SoundBank_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Audio_SoundBank_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Audio_SoundBank_delete00);
     tolua_function(tolua_S,"GetCueIndex",tolua_Singularity_scripting_Singularity_Audio_SoundBank_GetCueIndex00);
     tolua_function(tolua_S,"PrepareNewCueFromCueIndex",tolua_Singularity_scripting_Singularity_Audio_SoundBank_PrepareNewCueFromCueIndex00);
     tolua_function(tolua_S,"PrepareCurrentCue",tolua_Singularity_scripting_Singularity_Audio_SoundBank_PrepareCurrentCue00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Audio",0);
   tolua_beginmodule(tolua_S,"Audio");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Cue","Singularity::Audio::Cue","",tolua_collect_Singularity__Audio__Cue);
    #else
    tolua_cclass(tolua_S,"Cue","Singularity::Audio::Cue","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Cue");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Audio_Cue_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Audio_Cue_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Audio_Cue_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Audio_Cue_delete00);
     tolua_function(tolua_S,"Initialize",tolua_Singularity_scripting_Singularity_Audio_Cue_Initialize00);
     tolua_function(tolua_S,"UpdateState",tolua_Singularity_scripting_Singularity_Audio_Cue_UpdateState00);
     tolua_function(tolua_S,"Apply3dCalculations",tolua_Singularity_scripting_Singularity_Audio_Cue_Apply3dCalculations00);
     tolua_function(tolua_S,"ResetCue",tolua_Singularity_scripting_Singularity_Audio_Cue_ResetCue00);
     tolua_function(tolua_S,"PlayCue",tolua_Singularity_scripting_Singularity_Audio_Cue_PlayCue00);
     tolua_function(tolua_S,"PauseCue",tolua_Singularity_scripting_Singularity_Audio_Cue_PauseCue00);
     tolua_function(tolua_S,"PauseCue",tolua_Singularity_scripting_Singularity_Audio_Cue_PauseCue01);
     tolua_function(tolua_S,"Stop",tolua_Singularity_scripting_Singularity_Audio_Cue_Stop00);
     tolua_function(tolua_S,"Set_VolumePercentage",tolua_Singularity_scripting_Singularity_Audio_Cue_Set_VolumePercentage00);
     tolua_function(tolua_S,"Set_CueName",tolua_Singularity_scripting_Singularity_Audio_Cue_Set_CueName00);
     tolua_function(tolua_S,"Get_VolumePercentage",tolua_Singularity_scripting_Singularity_Audio_Cue_Get_VolumePercentage00);
     tolua_function(tolua_S,"Get_Index",tolua_Singularity_scripting_Singularity_Audio_Cue_Get_Index00);
     tolua_function(tolua_S,"Get_CueName",tolua_Singularity_scripting_Singularity_Audio_Cue_Get_CueName00);
     tolua_function(tolua_S,"Get_IsPlaying",tolua_Singularity_scripting_Singularity_Audio_Cue_Get_IsPlaying00);
     tolua_function(tolua_S,"Get_IsPaused",tolua_Singularity_scripting_Singularity_Audio_Cue_Get_IsPaused00);
     tolua_function(tolua_S,"Get_IsLooping",tolua_Singularity_scripting_Singularity_Audio_Cue_Get_IsLooping00);
     tolua_function(tolua_S,"Get_Is3d",tolua_Singularity_scripting_Singularity_Audio_Cue_Get_Is3d00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Audio",0);
   tolua_beginmodule(tolua_S,"Audio");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"AdaptiveMusicManager","Singularity::Audio::AdaptiveMusicManager","",tolua_collect_Singularity__Audio__AdaptiveMusicManager);
    #else
    tolua_cclass(tolua_S,"AdaptiveMusicManager","Singularity::Audio::AdaptiveMusicManager","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"AdaptiveMusicManager");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_delete00);
     tolua_function(tolua_S,"AddEnvironment",tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_AddEnvironment00);
     tolua_function(tolua_S,"SetCurrentEnvironment",tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_SetCurrentEnvironment00);
     tolua_function(tolua_S,"Play",tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_Play00);
     tolua_function(tolua_S,"StopAll",tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_StopAll00);
     tolua_function(tolua_S,"Get_IsPlaying",tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_Get_IsPlaying00);
     tolua_function(tolua_S,"GetCuesToPlay",tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_GetCuesToPlay00);
     tolua_function(tolua_S,"ClearCues",tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_ClearCues00);
     tolua_function(tolua_S,"SetVariable",tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_SetVariable00);
     tolua_function(tolua_S,"Instantiate",tolua_Singularity_scripting_Singularity_Audio_AdaptiveMusicManager_Instantiate00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Audio",0);
   tolua_beginmodule(tolua_S,"Audio");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"AdaptiveEnvironment","Singularity::Audio::AdaptiveEnvironment","",tolua_collect_Singularity__Audio__AdaptiveEnvironment);
    #else
    tolua_cclass(tolua_S,"AdaptiveEnvironment","Singularity::Audio::AdaptiveEnvironment","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"AdaptiveEnvironment");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_delete00);
     tolua_function(tolua_S,"DetermineCuesToPlay",tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_DetermineCuesToPlay00);
     tolua_function(tolua_S,"ChooseSlice",tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_ChooseSlice00);
     tolua_function(tolua_S,"LoadEnvironmentFromXml",tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_LoadEnvironmentFromXml00);
     tolua_function(tolua_S,"AddSlice",tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_AddSlice00);
     tolua_function(tolua_S,"AddParameter",tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_AddParameter00);
     tolua_function(tolua_S,"AddCategory",tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_AddCategory00);
     tolua_function(tolua_S,"SetVariable",tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_SetVariable00);
     tolua_function(tolua_S,"GetName",tolua_Singularity_scripting_Singularity_Audio_AdaptiveEnvironment_GetName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Audio",0);
   tolua_beginmodule(tolua_S,"Audio");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"AdaptiveParameter","Singularity::Audio::AdaptiveParameter","",tolua_collect_Singularity__Audio__AdaptiveParameter);
    #else
    tolua_cclass(tolua_S,"AdaptiveParameter","Singularity::Audio::AdaptiveParameter","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"AdaptiveParameter");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_delete00);
     tolua_function(tolua_S,"GetName",tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_GetName00);
     tolua_function(tolua_S,"GetMin",tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_GetMin00);
     tolua_function(tolua_S,"GetMax",tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_GetMax00);
     tolua_function(tolua_S,"GetCurrentValue",tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_GetCurrentValue00);
     tolua_function(tolua_S,"SetCurrentValue",tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_SetCurrentValue00);
     tolua_function(tolua_S,"SetName",tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_SetName00);
     tolua_function(tolua_S,"SetMin",tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_SetMin00);
     tolua_function(tolua_S,"SetMax",tolua_Singularity_scripting_Singularity_Audio_AdaptiveParameter_SetMax00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Audio",0);
   tolua_beginmodule(tolua_S,"Audio");
    tolua_constant(tolua_S,"LINEAR",Singularity::Audio::LINEAR);
    tolua_constant(tolua_S,"COSINE",Singularity::Audio::COSINE);
    tolua_constant(tolua_S,"EXPONENTIAL",Singularity::Audio::EXPONENTIAL);
    tolua_constant(tolua_S,"LOGARITHMIC",Singularity::Audio::LOGARITHMIC);
    tolua_cclass(tolua_S,"AdaptivePropertyPoint","Singularity::Audio::AdaptivePropertyPoint","",NULL);
    tolua_beginmodule(tolua_S,"AdaptivePropertyPoint");
     tolua_variable(tolua_S,"position",tolua_get_Singularity__Audio__AdaptivePropertyPoint_position,tolua_set_Singularity__Audio__AdaptivePropertyPoint_position);
     tolua_variable(tolua_S,"curve",tolua_get_Singularity__Audio__AdaptivePropertyPoint_curve,tolua_set_Singularity__Audio__AdaptivePropertyPoint_curve);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"AdaptiveProperty","Singularity::Audio::AdaptiveProperty","",tolua_collect_Singularity__Audio__AdaptiveProperty);
    #else
    tolua_cclass(tolua_S,"AdaptiveProperty","Singularity::Audio::AdaptiveProperty","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"AdaptiveProperty");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_delete00);
     tolua_function(tolua_S,"GetParent",tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_GetParent00);
     tolua_function(tolua_S,"GetName",tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_GetName00);
     tolua_function(tolua_S,"GetImportance",tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_GetImportance00);
     tolua_function(tolua_S,"DefinePoint",tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_DefinePoint00);
     tolua_function(tolua_S,"SetName",tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_SetName00);
     tolua_function(tolua_S,"SetImportance",tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_SetImportance00);
     tolua_function(tolua_S,"GetValueAtPoint",tolua_Singularity_scripting_Singularity_Audio_AdaptiveProperty_GetValueAtPoint00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Audio",0);
   tolua_beginmodule(tolua_S,"Audio");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"AdaptiveSlice","Singularity::Audio::AdaptiveSlice","",tolua_collect_Singularity__Audio__AdaptiveSlice);
    #else
    tolua_cclass(tolua_S,"AdaptiveSlice","Singularity::Audio::AdaptiveSlice","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"AdaptiveSlice");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_delete00);
     tolua_function(tolua_S,"CalculateProbability",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_CalculateProbability00);
     tolua_function(tolua_S,"AddProperty",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_AddProperty00);
     tolua_function(tolua_S,"RemoveProperty",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_RemoveProperty00);
     tolua_function(tolua_S,"PlayCue",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_PlayCue00);
     tolua_function(tolua_S,"GetProperty",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetProperty00);
     tolua_function(tolua_S,"GetAllProperties",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetAllProperties00);
     tolua_function(tolua_S,"GetCategory",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetCategory00);
     tolua_function(tolua_S,"SetCategory",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetCategory00);
     tolua_function(tolua_S,"GetRhythm",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetRhythm00);
     tolua_function(tolua_S,"SetRhythm",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetRhythm00);
     tolua_function(tolua_S,"GetKeySig",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetKeySig00);
     tolua_function(tolua_S,"SetKeySig",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetKeySig00);
     tolua_function(tolua_S,"GetTimeSig",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetTimeSig00);
     tolua_function(tolua_S,"SetTimeSig",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetTimeSig00);
     tolua_function(tolua_S,"GetBPM",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetBPM00);
     tolua_function(tolua_S,"SetBPM",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetBPM00);
     tolua_function(tolua_S,"GetName",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetName00);
     tolua_function(tolua_S,"SetName",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetName00);
     tolua_function(tolua_S,"GetImportance",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetImportance00);
     tolua_function(tolua_S,"SetImportance",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetImportance00);
     tolua_function(tolua_S,"GetChance",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetChance00);
     tolua_function(tolua_S,"SetChance",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetChance00);
     tolua_function(tolua_S,"GetCue",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_GetCue00);
     tolua_function(tolua_S,"SetCue",tolua_Singularity_scripting_Singularity_Audio_AdaptiveSlice_SetCue00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Networking",0);
   tolua_beginmodule(tolua_S,"Networking");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IPAddress","Singularity::Networking::IPAddress","",tolua_collect_Singularity__Networking__IPAddress);
    #else
    tolua_cclass(tolua_S,"IPAddress","Singularity::Networking::IPAddress","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IPAddress");
     tolua_variable(tolua_S,"Broadcast",tolua_get_Singularity__Networking__IPAddress_Broadcast,tolua_set_Singularity__Networking__IPAddress_Broadcast);
     tolua_variable(tolua_S,"Loopback",tolua_get_Singularity__Networking__IPAddress_Loopback,tolua_set_Singularity__Networking__IPAddress_Loopback);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Networking_IPAddress_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Networking_IPAddress_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Networking_IPAddress_new00_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Networking_IPAddress_new01);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Networking_IPAddress_new01_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Networking_IPAddress_new01_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Networking_IPAddress_new02);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Networking_IPAddress_new02_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Networking_IPAddress_new02_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Networking_IPAddress_delete00);
     tolua_function(tolua_S,"GetAddressBytes",tolua_Singularity_scripting_Singularity_Networking_IPAddress_GetAddressBytes00);
     tolua_function(tolua_S,"GetAddressByte",tolua_Singularity_scripting_Singularity_Networking_IPAddress_GetAddressByte00);
     tolua_function(tolua_S,"ToString",tolua_Singularity_scripting_Singularity_Networking_IPAddress_ToString00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Networking",0);
   tolua_beginmodule(tolua_S,"Networking");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Network","Singularity::Networking::Network","Singularity::Networking::NetworkSession",tolua_collect_Singularity__Networking__Network);
    #else
    tolua_cclass(tolua_S,"Network","Singularity::Networking::Network","Singularity::Networking::NetworkSession",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Network");
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Networking_Network_delete00);
     tolua_function(tolua_S,"Set_CurrentPlayerName",tolua_Singularity_scripting_Singularity_Networking_Network_Set_CurrentPlayerName00);
     tolua_function(tolua_S,"Set_CurrentPlayerId",tolua_Singularity_scripting_Singularity_Networking_Network_Set_CurrentPlayerId00);
     tolua_function(tolua_S,"CurrentPlayer",tolua_Singularity_scripting_Singularity_Networking_Network_CurrentPlayer00);
     tolua_function(tolua_S,"CurrentGame",tolua_Singularity_scripting_Singularity_Networking_Network_CurrentGame00);
     tolua_function(tolua_S,"ConnectTo",tolua_Singularity_scripting_Singularity_Networking_Network_ConnectTo00);
     tolua_function(tolua_S,"CreateGame",tolua_Singularity_scripting_Singularity_Networking_Network_CreateGame00);
     tolua_function(tolua_S,"LeaveGame",tolua_Singularity_scripting_Singularity_Networking_Network_LeaveGame00);
     tolua_function(tolua_S,"JoinGame",tolua_Singularity_scripting_Singularity_Networking_Network_JoinGame00);
     tolua_function(tolua_S,"FindGames",tolua_Singularity_scripting_Singularity_Networking_Network_FindGames00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Networking",0);
   tolua_beginmodule(tolua_S,"Networking");
    tolua_cclass(tolua_S,"Packet","Singularity::Networking::Packet","",NULL);
    tolua_beginmodule(tolua_S,"Packet");
     tolua_variable(tolua_S,"Index",tolua_get_Singularity__Networking__Packet_unsigned_Index,tolua_set_Singularity__Networking__Packet_unsigned_Index);
     tolua_variable(tolua_S,"From",tolua_get_Singularity__Networking__Packet_From,tolua_set_Singularity__Networking__Packet_From);
     tolua_variable(tolua_S,"Type",tolua_get_Singularity__Networking__Packet_unsigned_Type,tolua_set_Singularity__Networking__Packet_unsigned_Type);
     tolua_variable(tolua_S,"Command",tolua_get_Singularity__Networking__Packet_unsigned_Command,tolua_set_Singularity__Networking__Packet_unsigned_Command);
     tolua_variable(tolua_S,"DataLength",tolua_get_Singularity__Networking__Packet_DataLength,tolua_set_Singularity__Networking__Packet_DataLength);
     tolua_variable(tolua_S,"Data",tolua_get_Singularity__Networking__Packet_Data,tolua_set_Singularity__Networking__Packet_Data);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Networking",0);
   tolua_beginmodule(tolua_S,"Networking");
    tolua_cclass(tolua_S,"NetworkGameDescription","Singularity::Networking::NetworkGameDescription","",NULL);
    tolua_beginmodule(tolua_S,"NetworkGameDescription");
     tolua_variable(tolua_S,"Id",tolua_get_Singularity__Networking__NetworkGameDescription_Id,tolua_set_Singularity__Networking__NetworkGameDescription_Id);
     tolua_variable(tolua_S,"Name",tolua_get_Singularity__Networking__NetworkGameDescription_Name,tolua_set_Singularity__Networking__NetworkGameDescription_Name);
     tolua_variable(tolua_S,"Owner",tolua_get_Singularity__Networking__NetworkGameDescription_Owner,tolua_set_Singularity__Networking__NetworkGameDescription_Owner);
     tolua_variable(tolua_S,"Endpoint",tolua_get_Singularity__Networking__NetworkGameDescription_Endpoint,tolua_set_Singularity__Networking__NetworkGameDescription_Endpoint);
     tolua_variable(tolua_S,"Port",tolua_get_Singularity__Networking__NetworkGameDescription_Port,tolua_set_Singularity__Networking__NetworkGameDescription_Port);
     tolua_variable(tolua_S,"MaxParticipants",tolua_get_Singularity__Networking__NetworkGameDescription_MaxParticipants,tolua_set_Singularity__Networking__NetworkGameDescription_MaxParticipants);
     tolua_variable(tolua_S,"CurrentParticipants",tolua_get_Singularity__Networking__NetworkGameDescription_CurrentParticipants,tolua_set_Singularity__Networking__NetworkGameDescription_CurrentParticipants);
     tolua_variable(tolua_S,"Lag",tolua_get_Singularity__Networking__NetworkGameDescription_Lag,tolua_set_Singularity__Networking__NetworkGameDescription_Lag);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"NetworkGame","Singularity::Networking::NetworkGame","Singularity::Networking::NetworkSession",tolua_collect_Singularity__Networking__NetworkGame);
    #else
    tolua_cclass(tolua_S,"NetworkGame","Singularity::Networking::NetworkGame","Singularity::Networking::NetworkSession",NULL);
    #endif
    tolua_beginmodule(tolua_S,"NetworkGame");
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Networking_NetworkGame_delete00);
     tolua_function(tolua_S,"Get_IsHost",tolua_Singularity_scripting_Singularity_Networking_NetworkGame_Get_IsHost00);
     tolua_function(tolua_S,"ResetReady",tolua_Singularity_scripting_Singularity_Networking_NetworkGame_ResetReady00);
     tolua_function(tolua_S,"Start",tolua_Singularity_scripting_Singularity_Networking_NetworkGame_Start00);
     tolua_function(tolua_S,"Destroy",tolua_Singularity_scripting_Singularity_Networking_NetworkGame_Destroy00);
     tolua_function(tolua_S,"GetPlayers",tolua_Singularity_scripting_Singularity_Networking_NetworkGame_GetPlayers00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Networking",0);
   tolua_beginmodule(tolua_S,"Networking");
    tolua_cclass(tolua_S,"NetworkPlayer","Singularity::Networking::NetworkPlayer","",NULL);
    tolua_beginmodule(tolua_S,"NetworkPlayer");
     tolua_variable(tolua_S,"Id",tolua_get_Singularity__Networking__NetworkPlayer_Id,tolua_set_Singularity__Networking__NetworkPlayer_Id);
     tolua_variable(tolua_S,"PlayerId",tolua_get_Singularity__Networking__NetworkPlayer_PlayerId,tolua_set_Singularity__Networking__NetworkPlayer_PlayerId);
     tolua_variable(tolua_S,"Lag",tolua_get_Singularity__Networking__NetworkPlayer_Lag,tolua_set_Singularity__Networking__NetworkPlayer_Lag);
     tolua_variable(tolua_S,"Name",tolua_get_Singularity__Networking__NetworkPlayer_Name,tolua_set_Singularity__Networking__NetworkPlayer_Name);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Networking",0);
   tolua_beginmodule(tolua_S,"Networking");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"NetworkSession","Singularity::Networking::NetworkSession","Singularity::Object",tolua_collect_Singularity__Networking__NetworkSession);
    #else
    tolua_cclass(tolua_S,"NetworkSession","Singularity::Networking::NetworkSession","Singularity::Object",NULL);
    #endif
    tolua_beginmodule(tolua_S,"NetworkSession");
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Networking_NetworkSession_delete00);
     tolua_function(tolua_S,"Get_NetworkId",tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_NetworkId00);
     tolua_function(tolua_S,"Get_IsConnected",tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_IsConnected00);
     tolua_function(tolua_S,"Get_Host",tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_Host00);
     tolua_function(tolua_S,"Get_Port",tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_Port00);
     tolua_function(tolua_S,"Get_ReceiveBufferSize",tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_ReceiveBufferSize00);
     tolua_function(tolua_S,"Set_ReceiveBufferSize",tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Set_ReceiveBufferSize00);
     tolua_function(tolua_S,"Get_SendBufferSize",tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_SendBufferSize00);
     tolua_function(tolua_S,"Set_SendBufferSize",tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Set_SendBufferSize00);
     tolua_function(tolua_S,"Get_AutoFlush",tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Get_AutoFlush00);
     tolua_function(tolua_S,"Set_AutoFlush",tolua_Singularity_scripting_Singularity_Networking_NetworkSession_Set_AutoFlush00);
     tolua_function(tolua_S,"SendPacket",tolua_Singularity_scripting_Singularity_Networking_NetworkSession_SendPacket00);
     tolua_variable(tolua_S,"ProcessPacket",tolua_get_Singularity__Networking__NetworkSession_ProcessPacket,tolua_set_Singularity__Networking__NetworkSession_ProcessPacket);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Particles",0);
   tolua_beginmodule(tolua_S,"Particles");
    tolua_constant(tolua_S,"Explosion",Singularity::Particles::Explosion);
    tolua_constant(tolua_S,"Directional",Singularity::Particles::Directional);
    tolua_constant(tolua_S,"Linear",Singularity::Particles::Linear);
    tolua_constant(tolua_S,"Fountain",Singularity::Particles::Fountain);
    tolua_constant(tolua_S,"Orbital",Singularity::Particles::Orbital);
    tolua_constant(tolua_S,"Spiral",Singularity::Particles::Spiral);
    tolua_constant(tolua_S,"Sphere",Singularity::Particles::Sphere);
    tolua_constant(tolua_S,"Radial",Singularity::Particles::Radial);
    tolua_constant(tolua_S,"QuadStretch",Singularity::Particles::QuadStretch);
    tolua_cclass(tolua_S,"ParticleEmitter","Singularity::Particles::ParticleEmitter","Singularity::Graphics::Renderer",NULL);
    tolua_beginmodule(tolua_S,"ParticleEmitter");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_new00_local);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_new01);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_new01_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_new01_local);
     tolua_function(tolua_S,"Set_LifeTime",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_LifeTime00);
     tolua_function(tolua_S,"Set_MainTexture",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_MainTexture00);
     tolua_function(tolua_S,"Set_SecondaryTexture",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_SecondaryTexture00);
     tolua_function(tolua_S,"Set_TertiaryTexture",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_TertiaryTexture00);
     tolua_function(tolua_S,"Set_ParticleCount",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_ParticleCount00);
     tolua_function(tolua_S,"Set_PositionOffset",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_PositionOffset00);
     tolua_function(tolua_S,"Set_Radius",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_Radius00);
     tolua_function(tolua_S,"Set_Radius2",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_Radius200);
     tolua_function(tolua_S,"Set_EmitterRepeats",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_EmitterRepeats00);
     tolua_function(tolua_S,"Set_ParticleRepeats",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_ParticleRepeats00);
     tolua_function(tolua_S,"Set_ParticleSize",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_ParticleSize00);
     tolua_function(tolua_S,"Set_Dimensions",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_Dimensions00);
     tolua_function(tolua_S,"Set_Direction",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_Direction00);
     tolua_function(tolua_S,"Set_Delay",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_Delay00);
     tolua_function(tolua_S,"Set_RandomizeColor",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_RandomizeColor00);
     tolua_function(tolua_S,"Set_ColorLimit",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_ColorLimit00);
     tolua_function(tolua_S,"Get_EmitterType",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Get_EmitterType00);
     tolua_function(tolua_S,"Set_EmitterType",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Set_EmitterType00);
     tolua_function(tolua_S,"Start",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Start00);
     tolua_function(tolua_S,"Stop",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Stop00);
     tolua_function(tolua_S,"Reset",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_Reset00);
     tolua_function(tolua_S,"CreateParticleMaterial",tolua_Singularity_scripting_Singularity_Particles_ParticleEmitter_CreateParticleMaterial00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Scripting",0);
   tolua_beginmodule(tolua_S,"Scripting");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"LuaBinder","Singularity::Scripting::LuaBinder","Singularity::Components::Component",tolua_collect_Singularity__Scripting__LuaBinder);
    #else
    tolua_cclass(tolua_S,"LuaBinder","Singularity::Scripting::LuaBinder","Singularity::Components::Component",NULL);
    #endif
    tolua_beginmodule(tolua_S,"LuaBinder");
     tolua_function(tolua_S,"Get_Path",tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_Get_Path00);
     tolua_function(tolua_S,"Set_Path",tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_Set_Path00);
     tolua_function(tolua_S,"Get_FunctionName",tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_Get_FunctionName00);
     tolua_function(tolua_S,"Set_FunctionName",tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_Set_FunctionName00);
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Scripting_LuaBinder_delete00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Scripting",0);
   tolua_beginmodule(tolua_S,"Scripting");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"LuaBehaviorDelegate","Singularity::Scripting::LuaBehaviorDelegate","Singularity::Components::BehaviorDelegate",tolua_collect_Singularity__Scripting__LuaBehaviorDelegate);
    #else
    tolua_cclass(tolua_S,"LuaBehaviorDelegate","Singularity::Scripting::LuaBehaviorDelegate","Singularity::Components::BehaviorDelegate",NULL);
    #endif
    tolua_beginmodule(tolua_S,"LuaBehaviorDelegate");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Scripting_LuaBehaviorDelegate_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Scripting_LuaBehaviorDelegate_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Scripting_LuaBehaviorDelegate_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Scripting_LuaBehaviorDelegate_delete00);
     tolua_function(tolua_S,"Invoke",tolua_Singularity_scripting_Singularity_Scripting_LuaBehaviorDelegate_Invoke00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Scripting",0);
   tolua_beginmodule(tolua_S,"Scripting");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"LuaTransformDelegate","Singularity::Scripting::LuaTransformDelegate","Singularity::Components::TransformDelegate",tolua_collect_Singularity__Scripting__LuaTransformDelegate);
    #else
    tolua_cclass(tolua_S,"LuaTransformDelegate","Singularity::Scripting::LuaTransformDelegate","Singularity::Components::TransformDelegate",NULL);
    #endif
    tolua_beginmodule(tolua_S,"LuaTransformDelegate");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Scripting_LuaTransformDelegate_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Scripting_LuaTransformDelegate_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Scripting_LuaTransformDelegate_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Scripting_LuaTransformDelegate_delete00);
     tolua_function(tolua_S,"Invoke",tolua_Singularity_scripting_Singularity_Scripting_LuaTransformDelegate_Invoke00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Scripting",0);
   tolua_beginmodule(tolua_S,"Scripting");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"LuaControlDelegate","Singularity::Scripting::LuaControlDelegate","Singularity::Gui::ControlDelegate",tolua_collect_Singularity__Scripting__LuaControlDelegate);
    #else
    tolua_cclass(tolua_S,"LuaControlDelegate","Singularity::Scripting::LuaControlDelegate","Singularity::Gui::ControlDelegate",NULL);
    #endif
    tolua_beginmodule(tolua_S,"LuaControlDelegate");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Scripting_LuaControlDelegate_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Scripting_LuaControlDelegate_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Scripting_LuaControlDelegate_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Scripting_LuaControlDelegate_delete00);
     tolua_function(tolua_S,"Invoke",tolua_Singularity_scripting_Singularity_Scripting_LuaControlDelegate_Invoke00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Scripting",0);
   tolua_beginmodule(tolua_S,"Scripting");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"LuaControlMouseDelegate","Singularity::Scripting::LuaControlMouseDelegate","Singularity::Gui::ControlMouseDelegate",tolua_collect_Singularity__Scripting__LuaControlMouseDelegate);
    #else
    tolua_cclass(tolua_S,"LuaControlMouseDelegate","Singularity::Scripting::LuaControlMouseDelegate","Singularity::Gui::ControlMouseDelegate",NULL);
    #endif
    tolua_beginmodule(tolua_S,"LuaControlMouseDelegate");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Scripting_LuaControlMouseDelegate_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Scripting_LuaControlMouseDelegate_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Scripting_LuaControlMouseDelegate_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Scripting_LuaControlMouseDelegate_delete00);
     tolua_function(tolua_S,"Invoke",tolua_Singularity_scripting_Singularity_Scripting_LuaControlMouseDelegate_Invoke00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Scripting",0);
   tolua_beginmodule(tolua_S,"Scripting");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"LuaControlKeyboardDelegate","Singularity::Scripting::LuaControlKeyboardDelegate","Singularity::Gui::ControlKeyboardDelegate",tolua_collect_Singularity__Scripting__LuaControlKeyboardDelegate);
    #else
    tolua_cclass(tolua_S,"LuaControlKeyboardDelegate","Singularity::Scripting::LuaControlKeyboardDelegate","Singularity::Gui::ControlKeyboardDelegate",NULL);
    #endif
    tolua_beginmodule(tolua_S,"LuaControlKeyboardDelegate");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Scripting_LuaControlKeyboardDelegate_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Scripting_LuaControlKeyboardDelegate_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Scripting_LuaControlKeyboardDelegate_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Scripting_LuaControlKeyboardDelegate_delete00);
     tolua_function(tolua_S,"Invoke",tolua_Singularity_scripting_Singularity_Scripting_LuaControlKeyboardDelegate_Invoke00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Scripting",0);
   tolua_beginmodule(tolua_S,"Scripting");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"LuaListBoxDelegate","Singularity::Scripting::LuaListBoxDelegate","Singularity::Gui::ListBoxDelegate",tolua_collect_Singularity__Scripting__LuaListBoxDelegate);
    #else
    tolua_cclass(tolua_S,"LuaListBoxDelegate","Singularity::Scripting::LuaListBoxDelegate","Singularity::Gui::ListBoxDelegate",NULL);
    #endif
    tolua_beginmodule(tolua_S,"LuaListBoxDelegate");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Scripting_LuaListBoxDelegate_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Scripting_LuaListBoxDelegate_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Scripting_LuaListBoxDelegate_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Scripting_LuaListBoxDelegate_delete00);
     tolua_function(tolua_S,"Invoke",tolua_Singularity_scripting_Singularity_Scripting_LuaListBoxDelegate_Invoke00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Scripting",0);
   tolua_beginmodule(tolua_S,"Scripting");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"LuaCollisionDelegate","Singularity::Scripting::LuaCollisionDelegate","Singularity::Physics::CollisionDelegate",tolua_collect_Singularity__Scripting__LuaCollisionDelegate);
    #else
    tolua_cclass(tolua_S,"LuaCollisionDelegate","Singularity::Scripting::LuaCollisionDelegate","Singularity::Physics::CollisionDelegate",NULL);
    #endif
    tolua_beginmodule(tolua_S,"LuaCollisionDelegate");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Scripting_LuaCollisionDelegate_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Scripting_LuaCollisionDelegate_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Scripting_LuaCollisionDelegate_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Scripting_LuaCollisionDelegate_delete00);
     tolua_function(tolua_S,"Invoke",tolua_Singularity_scripting_Singularity_Scripting_LuaCollisionDelegate_Invoke00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Scripting",0);
   tolua_beginmodule(tolua_S,"Scripting");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"LuaNetworkDelegate","Singularity::Scripting::LuaNetworkDelegate","Singularity::Networking::NetworkDelegate",tolua_collect_Singularity__Scripting__LuaNetworkDelegate);
    #else
    tolua_cclass(tolua_S,"LuaNetworkDelegate","Singularity::Scripting::LuaNetworkDelegate","Singularity::Networking::NetworkDelegate",NULL);
    #endif
    tolua_beginmodule(tolua_S,"LuaNetworkDelegate");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Scripting_LuaNetworkDelegate_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Scripting_LuaNetworkDelegate_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Scripting_LuaNetworkDelegate_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Scripting_LuaNetworkDelegate_delete00);
     tolua_function(tolua_S,"Invoke",tolua_Singularity_scripting_Singularity_Scripting_LuaNetworkDelegate_Invoke00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Networking",0);
   tolua_beginmodule(tolua_S,"Networking");
    tolua_cclass(tolua_S,"LuaNetworkPacket","Singularity::Networking::LuaNetworkPacket","Singularity::Networking::Packet",NULL);
    tolua_beginmodule(tolua_S,"LuaNetworkPacket");
     tolua_function(tolua_S,"Create",tolua_Singularity_scripting_Singularity_Networking_LuaNetworkPacket_Create00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Animations",0);
   tolua_beginmodule(tolua_S,"Animations");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"Animation","Singularity::Animations::Animation","Singularity::Components::Component",tolua_collect_Singularity__Animations__Animation);
    #else
    tolua_cclass(tolua_S,"Animation","Singularity::Animations::Animation","Singularity::Components::Component",NULL);
    #endif
    tolua_beginmodule(tolua_S,"Animation");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Animations_Animation_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Animations_Animation_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Animations_Animation_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Animations_Animation_delete00);
     tolua_function(tolua_S,"Get_Clip",tolua_Singularity_scripting_Singularity_Animations_Animation_Get_Clip00);
     tolua_function(tolua_S,"Get_Mesh",tolua_Singularity_scripting_Singularity_Animations_Animation_Get_Mesh00);
     tolua_function(tolua_S,"Set_Mesh",tolua_Singularity_scripting_Singularity_Animations_Animation_Set_Mesh00);
     tolua_function(tolua_S,"PlayClip",tolua_Singularity_scripting_Singularity_Animations_Animation_PlayClip00);
     tolua_function(tolua_S,"UpdateAnimation",tolua_Singularity_scripting_Singularity_Animations_Animation_UpdateAnimation00);
     tolua_function(tolua_S,"SetClip",tolua_Singularity_scripting_Singularity_Animations_Animation_SetClip00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Singularity",0);
  tolua_beginmodule(tolua_S,"Singularity");
   tolua_module(tolua_S,"Particles",0);
   tolua_beginmodule(tolua_S,"Particles");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"EmitterManager","Singularity::Particles::EmitterManager","",tolua_collect_Singularity__Particles__EmitterManager);
    #else
    tolua_cclass(tolua_S,"EmitterManager","Singularity::Particles::EmitterManager","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"EmitterManager");
     tolua_function(tolua_S,"new",tolua_Singularity_scripting_Singularity_Particles_EmitterManager_new00);
     tolua_function(tolua_S,"new_local",tolua_Singularity_scripting_Singularity_Particles_EmitterManager_new00_local);
     tolua_function(tolua_S,".call",tolua_Singularity_scripting_Singularity_Particles_EmitterManager_new00_local);
     tolua_function(tolua_S,"delete",tolua_Singularity_scripting_Singularity_Particles_EmitterManager_delete00);
     tolua_function(tolua_S,"CreateEmitter",tolua_Singularity_scripting_Singularity_Particles_EmitterManager_CreateEmitter00);
     tolua_function(tolua_S,"KillEmitter",tolua_Singularity_scripting_Singularity_Particles_EmitterManager_KillEmitter00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
 tolua_endmodule(tolua_S);
 return 1;
}


#if defined(LUA_VERSION_NUM) && LUA_VERSION_NUM >= 501
 TOLUA_API int luaopen_Singularity_scripting (lua_State* tolua_S) {
 return tolua_Singularity_scripting_open(tolua_S);
};
#endif

